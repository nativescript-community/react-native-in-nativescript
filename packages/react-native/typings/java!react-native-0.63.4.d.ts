/// <reference path="android-declarations.d.ts"/>
/*
 * I generated these typings by following the README.md of android-dts-generator. As a recap:
 * I followed the section "Finding package dependencies" to generate the AAR (that contains the JAR):
 * - First, I ran `npm install react-native` in the dts-generator folder (though anywhere would work) and opened `dts-generator/build.gradle`.
 * - Then, I altered the "repositories" section to this:

repositories {
    google()
    jcenter()
    mavenLocal()
    maven {
        // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
        url("/Users/jamie/Documents/git/android-dts-generator/dts-generator/node_modules/react-native/android")
    }
    maven {
        // Android JSC is installed from npm
        url("/Users/jamie/Documents/git/android-dts-generator/dts-generator/node_modules/jsc-android/dist")
    }
}

 * - Next, I added the dependency `testCompileOnly "com.facebook.react:react-native:+";` to the "dependencies" section.
 *
 * Following the section "Generate definitions for any Jar" to generate typings for the JAR:
 * - I ran the following command. I don't know what Android SDK version it builds against, but hopefully it doesn't matter in practice. 
 *   java -jar build/libs/dts-generator.jar -input /Users/jamie/Documents/git/android-dts-generator/dts-generator/jar-files/react-native.aar\ \(com.facebook.react_react-native_0.63.4\)/classes.jar
*/

declare module com {
	export module facebook {
		export module debug {
			export module debugoverlay {
				export module model {
					export class DebugOverlayTag {
						public static class: java.lang.Class<com.facebook.debug.debugoverlay.model.DebugOverlayTag>;
						public name: string;
						public description: string;
						public color: number;
						public constructor(param0: string, param1: string, param2: number);
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module debug {
			export module holder {
				export class NoopPrinter extends com.facebook.debug.holder.Printer {
					public static class: java.lang.Class<com.facebook.debug.holder.NoopPrinter>;
					public static INSTANCE: com.facebook.debug.holder.NoopPrinter;
					public logMessage(param0: com.facebook.debug.debugoverlay.model.DebugOverlayTag, param1: string): void;
					public shouldDisplayLogMessage(param0: com.facebook.debug.debugoverlay.model.DebugOverlayTag): boolean;
					public logMessage(param0: com.facebook.debug.debugoverlay.model.DebugOverlayTag, param1: string, param2: native.Array<any>): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module debug {
			export module holder {
				export class Printer {
					public static class: java.lang.Class<com.facebook.debug.holder.Printer>;
					/**
					 * Constructs a new instance of the com.facebook.debug.holder.Printer interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						logMessage(param0: com.facebook.debug.debugoverlay.model.DebugOverlayTag, param1: string, param2: native.Array<any>): void;
						logMessage(param0: com.facebook.debug.debugoverlay.model.DebugOverlayTag, param1: string): void;
						shouldDisplayLogMessage(param0: com.facebook.debug.debugoverlay.model.DebugOverlayTag): boolean;
					});
					public constructor();
					public logMessage(param0: com.facebook.debug.debugoverlay.model.DebugOverlayTag, param1: string): void;
					public shouldDisplayLogMessage(param0: com.facebook.debug.debugoverlay.model.DebugOverlayTag): boolean;
					public logMessage(param0: com.facebook.debug.debugoverlay.model.DebugOverlayTag, param1: string, param2: native.Array<any>): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module debug {
			export module holder {
				export class PrinterHolder {
					public static class: java.lang.Class<com.facebook.debug.holder.PrinterHolder>;
					public static setPrinter(param0: com.facebook.debug.holder.Printer): void;
					public constructor();
					public static getPrinter(): com.facebook.debug.holder.Printer;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module debug {
			export module tags {
				export class ReactDebugOverlayTags {
					public static class: java.lang.Class<com.facebook.debug.tags.ReactDebugOverlayTags>;
					public static PERFORMANCE: com.facebook.debug.debugoverlay.model.DebugOverlayTag;
					public static NAVIGATION: com.facebook.debug.debugoverlay.model.DebugOverlayTag;
					public static RN_CORE: com.facebook.debug.debugoverlay.model.DebugOverlayTag;
					public static BRIDGE_CALLS: com.facebook.debug.debugoverlay.model.DebugOverlayTag;
					public static NATIVE_MODULE: com.facebook.debug.debugoverlay.model.DebugOverlayTag;
					public static UI_MANAGER: com.facebook.debug.debugoverlay.model.DebugOverlayTag;
					public static FABRIC_UI_MANAGER: com.facebook.debug.debugoverlay.model.DebugOverlayTag;
					public static FABRIC_RECONCILER: com.facebook.debug.debugoverlay.model.DebugOverlayTag;
					public static RELAY: com.facebook.debug.debugoverlay.model.DebugOverlayTag;
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module fbreact {
			export module specs {
				export abstract class NativeAccessibilityInfoSpec extends com.facebook.react.bridge.ReactContextBaseJavaModule implements com.facebook.react.bridge.ReactModuleWithSpec, com.facebook.react.turbomodule.core.interfaces.TurboModule {
					public static class: java.lang.Class<com.facebook.fbreact.specs.NativeAccessibilityInfoSpec>;
					public setAccessibilityFocus(param0: number): void;
					public isReduceMotionEnabled(param0: com.facebook.react.bridge.Callback): void;
					public onCatalystInstanceDestroy(): void;
					public constructor();
					public getName(): string;
					public canOverrideExistingModule(): boolean;
					public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
					public announceForAccessibility(param0: string): void;
					public isTouchExplorationEnabled(param0: com.facebook.react.bridge.Callback): void;
					public initialize(): void;
					public invalidate(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module fbreact {
			export module specs {
				export abstract class NativeAccessibilityManagerSpec extends com.facebook.react.bridge.ReactContextBaseJavaModule implements com.facebook.react.bridge.ReactModuleWithSpec, com.facebook.react.turbomodule.core.interfaces.TurboModule {
					public static class: java.lang.Class<com.facebook.fbreact.specs.NativeAccessibilityManagerSpec>;
					public getCurrentInvertColorsState(param0: com.facebook.react.bridge.Callback, param1: com.facebook.react.bridge.Callback): void;
					public canOverrideExistingModule(): boolean;
					public getCurrentReduceMotionState(param0: com.facebook.react.bridge.Callback, param1: com.facebook.react.bridge.Callback): void;
					public setAccessibilityContentSizeMultipliers(param0: com.facebook.react.bridge.ReadableMap): void;
					public getCurrentBoldTextState(param0: com.facebook.react.bridge.Callback, param1: com.facebook.react.bridge.Callback): void;
					public getCurrentVoiceOverState(param0: com.facebook.react.bridge.Callback, param1: com.facebook.react.bridge.Callback): void;
					public setAccessibilityFocus(param0: number): void;
					public getCurrentGrayscaleState(param0: com.facebook.react.bridge.Callback, param1: com.facebook.react.bridge.Callback): void;
					public onCatalystInstanceDestroy(): void;
					public constructor();
					public getName(): string;
					public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
					public announceForAccessibility(param0: string): void;
					public initialize(): void;
					public getCurrentReduceTransparencyState(param0: com.facebook.react.bridge.Callback, param1: com.facebook.react.bridge.Callback): void;
					public invalidate(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module fbreact {
			export module specs {
				export abstract class NativeActionSheetManagerSpec extends com.facebook.react.bridge.ReactContextBaseJavaModule implements com.facebook.react.bridge.ReactModuleWithSpec, com.facebook.react.turbomodule.core.interfaces.TurboModule {
					public static class: java.lang.Class<com.facebook.fbreact.specs.NativeActionSheetManagerSpec>;
					public onCatalystInstanceDestroy(): void;
					public constructor();
					public getName(): string;
					public canOverrideExistingModule(): boolean;
					public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
					public showShareActionSheetWithOptions(param0: com.facebook.react.bridge.ReadableMap, param1: com.facebook.react.bridge.Callback, param2: com.facebook.react.bridge.Callback): void;
					public showActionSheetWithOptions(param0: com.facebook.react.bridge.ReadableMap, param1: com.facebook.react.bridge.Callback): void;
					public initialize(): void;
					public invalidate(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module fbreact {
			export module specs {
				export abstract class NativeAlertManagerSpec extends com.facebook.react.bridge.ReactContextBaseJavaModule implements com.facebook.react.bridge.ReactModuleWithSpec, com.facebook.react.turbomodule.core.interfaces.TurboModule {
					public static class: java.lang.Class<com.facebook.fbreact.specs.NativeAlertManagerSpec>;
					public onCatalystInstanceDestroy(): void;
					public constructor();
					public getName(): string;
					public canOverrideExistingModule(): boolean;
					public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
					public alertWithArgs(param0: com.facebook.react.bridge.ReadableMap, param1: com.facebook.react.bridge.Callback): void;
					public initialize(): void;
					public invalidate(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module fbreact {
			export module specs {
				export abstract class NativeAnimatedModuleSpec extends com.facebook.react.bridge.ReactContextBaseJavaModule implements com.facebook.react.bridge.ReactModuleWithSpec, com.facebook.react.turbomodule.core.interfaces.TurboModule {
					public static class: java.lang.Class<com.facebook.fbreact.specs.NativeAnimatedModuleSpec>;
					public setAnimatedNodeOffset(param0: number, param1: number): void;
					public canOverrideExistingModule(): boolean;
					public addListener(param0: string): void;
					public startAnimatingNode(param0: number, param1: number, param2: com.facebook.react.bridge.ReadableMap, param3: com.facebook.react.bridge.Callback): void;
					public removeListeners(param0: number): void;
					public restoreDefaultValues(param0: number): void;
					public createAnimatedNode(param0: number, param1: com.facebook.react.bridge.ReadableMap): void;
					public flattenAnimatedNodeOffset(param0: number): void;
					public extractAnimatedNodeOffset(param0: number): void;
					public constructor();
					public connectAnimatedNodes(param0: number, param1: number): void;
					public stopListeningToAnimatedNodeValue(param0: number): void;
					public connectAnimatedNodeToView(param0: number, param1: number): void;
					public disconnectAnimatedNodeFromView(param0: number, param1: number): void;
					public addAnimatedEventToView(param0: number, param1: string, param2: com.facebook.react.bridge.ReadableMap): void;
					public stopAnimation(param0: number): void;
					public setAnimatedNodeValue(param0: number, param1: number): void;
					public onCatalystInstanceDestroy(): void;
					public dropAnimatedNode(param0: number): void;
					public getName(): string;
					public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
					public removeAnimatedEventFromView(param0: number, param1: string, param2: number): void;
					public disconnectAnimatedNodes(param0: number, param1: number): void;
					public startListeningToAnimatedNodeValue(param0: number): void;
					public initialize(): void;
					public invalidate(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module fbreact {
			export module specs {
				export abstract class NativeAnimationsDebugModuleSpec extends com.facebook.react.bridge.ReactContextBaseJavaModule implements com.facebook.react.bridge.ReactModuleWithSpec, com.facebook.react.turbomodule.core.interfaces.TurboModule {
					public static class: java.lang.Class<com.facebook.fbreact.specs.NativeAnimationsDebugModuleSpec>;
					public startRecordingFps(): void;
					public onCatalystInstanceDestroy(): void;
					public constructor();
					public getName(): string;
					public canOverrideExistingModule(): boolean;
					public stopRecordingFps(param0: number): void;
					public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
					public initialize(): void;
					public invalidate(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module fbreact {
			export module specs {
				export abstract class NativeAppStateSpec extends com.facebook.react.bridge.ReactContextBaseJavaModule implements com.facebook.react.bridge.ReactModuleWithSpec, com.facebook.react.turbomodule.core.interfaces.TurboModule {
					public static class: java.lang.Class<com.facebook.fbreact.specs.NativeAppStateSpec>;
					public getConstants(): java.util.Map<string,any>;
					public onCatalystInstanceDestroy(): void;
					public constructor();
					public getName(): string;
					public canOverrideExistingModule(): boolean;
					public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
					public getCurrentAppState(param0: com.facebook.react.bridge.Callback, param1: com.facebook.react.bridge.Callback): void;
					public addListener(param0: string): void;
					public removeListeners(param0: number): void;
					public initialize(): void;
					public getTypedExportedConstants(): java.util.Map<string,any>;
					public invalidate(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module fbreact {
			export module specs {
				export abstract class NativeAppearanceSpec extends com.facebook.react.bridge.ReactContextBaseJavaModule implements com.facebook.react.bridge.ReactModuleWithSpec, com.facebook.react.turbomodule.core.interfaces.TurboModule {
					public static class: java.lang.Class<com.facebook.fbreact.specs.NativeAppearanceSpec>;
					public getColorScheme(): string;
					public onCatalystInstanceDestroy(): void;
					public constructor();
					public getName(): string;
					public canOverrideExistingModule(): boolean;
					public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
					public addListener(param0: string): void;
					public removeListeners(param0: number): void;
					public initialize(): void;
					public invalidate(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module fbreact {
			export module specs {
				export abstract class NativeAsyncStorageSpec extends com.facebook.react.bridge.ReactContextBaseJavaModule implements com.facebook.react.bridge.ReactModuleWithSpec, com.facebook.react.turbomodule.core.interfaces.TurboModule {
					public static class: java.lang.Class<com.facebook.fbreact.specs.NativeAsyncStorageSpec>;
					public canOverrideExistingModule(): boolean;
					public multiRemove(param0: com.facebook.react.bridge.ReadableArray, param1: com.facebook.react.bridge.Callback): void;
					public getAllKeys(param0: com.facebook.react.bridge.Callback): void;
					public multiMerge(param0: com.facebook.react.bridge.ReadableArray, param1: com.facebook.react.bridge.Callback): void;
					public onCatalystInstanceDestroy(): void;
					public constructor();
					public getName(): string;
					public multiGet(param0: com.facebook.react.bridge.ReadableArray, param1: com.facebook.react.bridge.Callback): void;
					public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
					public clear(param0: com.facebook.react.bridge.Callback): void;
					public initialize(): void;
					public multiSet(param0: com.facebook.react.bridge.ReadableArray, param1: com.facebook.react.bridge.Callback): void;
					public invalidate(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module fbreact {
			export module specs {
				export abstract class NativeBlobModuleSpec extends com.facebook.react.bridge.ReactContextBaseJavaModule implements com.facebook.react.bridge.ReactModuleWithSpec, com.facebook.react.turbomodule.core.interfaces.TurboModule {
					public static class: java.lang.Class<com.facebook.fbreact.specs.NativeBlobModuleSpec>;
					public getConstants(): java.util.Map<string,any>;
					public canOverrideExistingModule(): boolean;
					public removeWebSocketHandler(param0: number): void;
					public release(param0: string): void;
					public addNetworkingHandler(): void;
					public onCatalystInstanceDestroy(): void;
					public constructor();
					public getName(): string;
					public createFromParts(param0: com.facebook.react.bridge.ReadableArray, param1: string): void;
					public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
					public sendOverSocket(param0: com.facebook.react.bridge.ReadableMap, param1: number): void;
					public addWebSocketHandler(param0: number): void;
					public initialize(): void;
					public getTypedExportedConstants(): java.util.Map<string,any>;
					public invalidate(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module fbreact {
			export module specs {
				export abstract class NativeBugReportingSpec extends com.facebook.react.bridge.ReactContextBaseJavaModule implements com.facebook.react.bridge.ReactModuleWithSpec, com.facebook.react.turbomodule.core.interfaces.TurboModule {
					public static class: java.lang.Class<com.facebook.fbreact.specs.NativeBugReportingSpec>;
					public setCategoryID(param0: string): void;
					public onCatalystInstanceDestroy(): void;
					public constructor();
					public getName(): string;
					public canOverrideExistingModule(): boolean;
					public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
					public startReportAProblemFlow(): void;
					public initialize(): void;
					public setExtraData(param0: com.facebook.react.bridge.ReadableMap, param1: com.facebook.react.bridge.ReadableMap): void;
					public invalidate(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module fbreact {
			export module specs {
				export abstract class NativeCameraRollManagerSpec extends com.facebook.react.bridge.ReactContextBaseJavaModule implements com.facebook.react.bridge.ReactModuleWithSpec, com.facebook.react.turbomodule.core.interfaces.TurboModule {
					public static class: java.lang.Class<com.facebook.fbreact.specs.NativeCameraRollManagerSpec>;
					public onCatalystInstanceDestroy(): void;
					public constructor();
					public getName(): string;
					public canOverrideExistingModule(): boolean;
					public getPhotos(param0: com.facebook.react.bridge.ReadableMap, param1: com.facebook.react.bridge.Promise): void;
					public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
					public saveToCameraRoll(param0: string, param1: string, param2: com.facebook.react.bridge.Promise): void;
					public deletePhotos(param0: com.facebook.react.bridge.ReadableArray, param1: com.facebook.react.bridge.Promise): void;
					public initialize(): void;
					public invalidate(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module fbreact {
			export module specs {
				export abstract class NativeClipboardSpec extends com.facebook.react.bridge.ReactContextBaseJavaModule implements com.facebook.react.bridge.ReactModuleWithSpec, com.facebook.react.turbomodule.core.interfaces.TurboModule {
					public static class: java.lang.Class<com.facebook.fbreact.specs.NativeClipboardSpec>;
					public setString(param0: string): void;
					public getString(param0: com.facebook.react.bridge.Promise): void;
					public onCatalystInstanceDestroy(): void;
					public constructor();
					public getName(): string;
					public canOverrideExistingModule(): boolean;
					public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
					public initialize(): void;
					public invalidate(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module fbreact {
			export module specs {
				export abstract class NativeDatePickerAndroidSpec extends com.facebook.react.bridge.ReactContextBaseJavaModule implements com.facebook.react.bridge.ReactModuleWithSpec, com.facebook.react.turbomodule.core.interfaces.TurboModule {
					public static class: java.lang.Class<com.facebook.fbreact.specs.NativeDatePickerAndroidSpec>;
					public onCatalystInstanceDestroy(): void;
					public constructor();
					public getName(): string;
					public canOverrideExistingModule(): boolean;
					public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
					public open(param0: com.facebook.react.bridge.ReadableMap, param1: com.facebook.react.bridge.Promise): void;
					public initialize(): void;
					public invalidate(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module fbreact {
			export module specs {
				export abstract class NativeDevLoadingViewSpec extends com.facebook.react.bridge.ReactContextBaseJavaModule implements com.facebook.react.bridge.ReactModuleWithSpec, com.facebook.react.turbomodule.core.interfaces.TurboModule {
					public static class: java.lang.Class<com.facebook.fbreact.specs.NativeDevLoadingViewSpec>;
					public onCatalystInstanceDestroy(): void;
					public constructor();
					public getName(): string;
					public canOverrideExistingModule(): boolean;
					public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
					public hide(): void;
					public showMessage(param0: string, param1: java.lang.Double, param2: java.lang.Double): void;
					public initialize(): void;
					public invalidate(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module fbreact {
			export module specs {
				export abstract class NativeDevMenuSpec extends com.facebook.react.bridge.ReactContextBaseJavaModule implements com.facebook.react.bridge.ReactModuleWithSpec, com.facebook.react.turbomodule.core.interfaces.TurboModule {
					public static class: java.lang.Class<com.facebook.fbreact.specs.NativeDevMenuSpec>;
					public debugRemotely(param0: boolean): void;
					public show(): void;
					public onCatalystInstanceDestroy(): void;
					public constructor();
					public getName(): string;
					public canOverrideExistingModule(): boolean;
					public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
					public setProfilingEnabled(param0: boolean): void;
					public setHotLoadingEnabled(param0: boolean): void;
					public reload(): void;
					public initialize(): void;
					public invalidate(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module fbreact {
			export module specs {
				export abstract class NativeDevSettingsSpec extends com.facebook.react.bridge.ReactContextBaseJavaModule implements com.facebook.react.bridge.ReactModuleWithSpec, com.facebook.react.turbomodule.core.interfaces.TurboModule {
					public static class: java.lang.Class<com.facebook.fbreact.specs.NativeDevSettingsSpec>;
					public canOverrideExistingModule(): boolean;
					public setProfilingEnabled(param0: boolean): void;
					public setHotLoadingEnabled(param0: boolean): void;
					public reload(): void;
					public addListener(param0: string): void;
					public reloadWithReason(param0: string): void;
					public setIsDebuggingRemotely(param0: boolean): void;
					public onFastRefresh(): void;
					public removeListeners(param0: number): void;
					public onCatalystInstanceDestroy(): void;
					public constructor();
					public getName(): string;
					public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
					public setIsShakeToShowDevMenuEnabled(param0: boolean): void;
					public toggleElementInspector(): void;
					public addMenuItem(param0: string): void;
					public initialize(): void;
					public invalidate(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module fbreact {
			export module specs {
				export abstract class NativeDeviceEventManagerSpec extends com.facebook.react.bridge.ReactContextBaseJavaModule implements com.facebook.react.bridge.ReactModuleWithSpec, com.facebook.react.turbomodule.core.interfaces.TurboModule {
					public static class: java.lang.Class<com.facebook.fbreact.specs.NativeDeviceEventManagerSpec>;
					public onCatalystInstanceDestroy(): void;
					public constructor();
					public getName(): string;
					public canOverrideExistingModule(): boolean;
					public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
					public invokeDefaultBackPressHandler(): void;
					public initialize(): void;
					public invalidate(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module fbreact {
			export module specs {
				export abstract class NativeDeviceInfoSpec extends com.facebook.react.bridge.ReactContextBaseJavaModule implements com.facebook.react.bridge.ReactModuleWithSpec, com.facebook.react.turbomodule.core.interfaces.TurboModule {
					public static class: java.lang.Class<com.facebook.fbreact.specs.NativeDeviceInfoSpec>;
					public getConstants(): java.util.Map<string,any>;
					public onCatalystInstanceDestroy(): void;
					public constructor();
					public getName(): string;
					public canOverrideExistingModule(): boolean;
					public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
					public initialize(): void;
					public getTypedExportedConstants(): java.util.Map<string,any>;
					public invalidate(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module fbreact {
			export module specs {
				export abstract class NativeDialogManagerAndroidSpec extends com.facebook.react.bridge.ReactContextBaseJavaModule implements com.facebook.react.bridge.ReactModuleWithSpec, com.facebook.react.turbomodule.core.interfaces.TurboModule {
					public static class: java.lang.Class<com.facebook.fbreact.specs.NativeDialogManagerAndroidSpec>;
					public showAlert(param0: com.facebook.react.bridge.ReadableMap, param1: com.facebook.react.bridge.Callback, param2: com.facebook.react.bridge.Callback): void;
					public getConstants(): java.util.Map<string,any>;
					public onCatalystInstanceDestroy(): void;
					public constructor();
					public getName(): string;
					public canOverrideExistingModule(): boolean;
					public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
					public initialize(): void;
					public getTypedExportedConstants(): java.util.Map<string,any>;
					public invalidate(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module fbreact {
			export module specs {
				export abstract class NativeExceptionsManagerSpec extends com.facebook.react.bridge.ReactContextBaseJavaModule implements com.facebook.react.bridge.ReactModuleWithSpec, com.facebook.react.turbomodule.core.interfaces.TurboModule {
					public static class: java.lang.Class<com.facebook.fbreact.specs.NativeExceptionsManagerSpec>;
					public updateExceptionMessage(param0: string, param1: com.facebook.react.bridge.ReadableArray, param2: number): void;
					public onCatalystInstanceDestroy(): void;
					public constructor();
					public getName(): string;
					public canOverrideExistingModule(): boolean;
					public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
					public dismissRedbox(): void;
					public reportException(param0: com.facebook.react.bridge.ReadableMap): void;
					public reportSoftException(param0: string, param1: com.facebook.react.bridge.ReadableArray, param2: number): void;
					public reportFatalException(param0: string, param1: com.facebook.react.bridge.ReadableArray, param2: number): void;
					public initialize(): void;
					public invalidate(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module fbreact {
			export module specs {
				export abstract class NativeFileReaderModuleSpec extends com.facebook.react.bridge.ReactContextBaseJavaModule implements com.facebook.react.bridge.ReactModuleWithSpec, com.facebook.react.turbomodule.core.interfaces.TurboModule {
					public static class: java.lang.Class<com.facebook.fbreact.specs.NativeFileReaderModuleSpec>;
					public readAsText(param0: com.facebook.react.bridge.ReadableMap, param1: string, param2: com.facebook.react.bridge.Promise): void;
					public onCatalystInstanceDestroy(): void;
					public constructor();
					public getName(): string;
					public canOverrideExistingModule(): boolean;
					public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
					public readAsDataURL(param0: com.facebook.react.bridge.ReadableMap, param1: com.facebook.react.bridge.Promise): void;
					public initialize(): void;
					public invalidate(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module fbreact {
			export module specs {
				export abstract class NativeFrameRateLoggerSpec extends com.facebook.react.bridge.ReactContextBaseJavaModule implements com.facebook.react.bridge.ReactModuleWithSpec, com.facebook.react.turbomodule.core.interfaces.TurboModule {
					public static class: java.lang.Class<com.facebook.fbreact.specs.NativeFrameRateLoggerSpec>;
					public beginScroll(): void;
					public endScroll(): void;
					public setGlobalOptions(param0: com.facebook.react.bridge.ReadableMap): void;
					public onCatalystInstanceDestroy(): void;
					public constructor();
					public getName(): string;
					public canOverrideExistingModule(): boolean;
					public setContext(param0: string): void;
					public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
					public initialize(): void;
					public invalidate(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module fbreact {
			export module specs {
				export abstract class NativeHeadlessJsTaskSupportSpec extends com.facebook.react.bridge.ReactContextBaseJavaModule implements com.facebook.react.bridge.ReactModuleWithSpec, com.facebook.react.turbomodule.core.interfaces.TurboModule {
					public static class: java.lang.Class<com.facebook.fbreact.specs.NativeHeadlessJsTaskSupportSpec>;
					public notifyTaskFinished(param0: number): void;
					public onCatalystInstanceDestroy(): void;
					public constructor();
					public getName(): string;
					public canOverrideExistingModule(): boolean;
					public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
					public notifyTaskRetry(param0: number, param1: com.facebook.react.bridge.Promise): void;
					public initialize(): void;
					public invalidate(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module fbreact {
			export module specs {
				export abstract class NativeHeapCaptureSpec extends com.facebook.react.bridge.ReactContextBaseJavaModule implements com.facebook.react.bridge.ReactModuleWithSpec, com.facebook.react.turbomodule.core.interfaces.TurboModule {
					public static class: java.lang.Class<com.facebook.fbreact.specs.NativeHeapCaptureSpec>;
					public onCatalystInstanceDestroy(): void;
					public constructor();
					public getName(): string;
					public canOverrideExistingModule(): boolean;
					public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
					public captureComplete(param0: string, param1: string): void;
					public captureHeap(param0: string): void;
					public initialize(): void;
					public invalidate(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module fbreact {
			export module specs {
				export abstract class NativeI18nManagerSpec extends com.facebook.react.bridge.ReactContextBaseJavaModule implements com.facebook.react.bridge.ReactModuleWithSpec, com.facebook.react.turbomodule.core.interfaces.TurboModule {
					public static class: java.lang.Class<com.facebook.fbreact.specs.NativeI18nManagerSpec>;
					public allowRTL(param0: boolean): void;
					public swapLeftAndRightInRTL(param0: boolean): void;
					public getConstants(): java.util.Map<string,any>;
					public onCatalystInstanceDestroy(): void;
					public constructor();
					public getName(): string;
					public canOverrideExistingModule(): boolean;
					public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
					public forceRTL(param0: boolean): void;
					public initialize(): void;
					public getTypedExportedConstants(): java.util.Map<string,any>;
					public invalidate(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module fbreact {
			export module specs {
				export abstract class NativeImageEditorSpec extends com.facebook.react.bridge.ReactContextBaseJavaModule implements com.facebook.react.bridge.ReactModuleWithSpec, com.facebook.react.turbomodule.core.interfaces.TurboModule {
					public static class: java.lang.Class<com.facebook.fbreact.specs.NativeImageEditorSpec>;
					public onCatalystInstanceDestroy(): void;
					public constructor();
					public cropImage(param0: string, param1: com.facebook.react.bridge.ReadableMap, param2: com.facebook.react.bridge.Callback, param3: com.facebook.react.bridge.Callback): void;
					public getName(): string;
					public canOverrideExistingModule(): boolean;
					public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
					public initialize(): void;
					public invalidate(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module fbreact {
			export module specs {
				export abstract class NativeImageLoaderAndroidSpec extends com.facebook.react.bridge.ReactContextBaseJavaModule implements com.facebook.react.bridge.ReactModuleWithSpec, com.facebook.react.turbomodule.core.interfaces.TurboModule {
					public static class: java.lang.Class<com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec>;
					public getSizeWithHeaders(param0: string, param1: com.facebook.react.bridge.ReadableMap, param2: com.facebook.react.bridge.Promise): void;
					public queryCache(param0: com.facebook.react.bridge.ReadableArray, param1: com.facebook.react.bridge.Promise): void;
					public onCatalystInstanceDestroy(): void;
					public constructor();
					public getName(): string;
					public canOverrideExistingModule(): boolean;
					public getSize(param0: string, param1: com.facebook.react.bridge.Promise): void;
					public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
					public abortRequest(param0: number): void;
					public prefetchImage(param0: string, param1: number, param2: com.facebook.react.bridge.Promise): void;
					public initialize(): void;
					public invalidate(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module fbreact {
			export module specs {
				export abstract class NativeImageLoaderIOSSpec extends com.facebook.react.bridge.ReactContextBaseJavaModule implements com.facebook.react.bridge.ReactModuleWithSpec, com.facebook.react.turbomodule.core.interfaces.TurboModule {
					public static class: java.lang.Class<com.facebook.fbreact.specs.NativeImageLoaderIOSSpec>;
					public getSizeWithHeaders(param0: string, param1: com.facebook.react.bridge.ReadableMap, param2: com.facebook.react.bridge.Promise): void;
					public queryCache(param0: com.facebook.react.bridge.ReadableArray, param1: com.facebook.react.bridge.Promise): void;
					public onCatalystInstanceDestroy(): void;
					public constructor();
					public getName(): string;
					public canOverrideExistingModule(): boolean;
					public getSize(param0: string, param1: com.facebook.react.bridge.Promise): void;
					public prefetchImage(param0: string, param1: com.facebook.react.bridge.Promise): void;
					public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
					public initialize(): void;
					public invalidate(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module fbreact {
			export module specs {
				export abstract class NativeImageLoaderSpec extends com.facebook.react.bridge.ReactContextBaseJavaModule implements com.facebook.react.bridge.ReactModuleWithSpec, com.facebook.react.turbomodule.core.interfaces.TurboModule {
					public static class: java.lang.Class<com.facebook.fbreact.specs.NativeImageLoaderSpec>;
					public getSizeWithHeaders(param0: string, param1: com.facebook.react.bridge.ReadableMap, param2: com.facebook.react.bridge.Promise): void;
					public queryCache(param0: com.facebook.react.bridge.ReadableArray, param1: com.facebook.react.bridge.Promise): void;
					public onCatalystInstanceDestroy(): void;
					public constructor();
					public getName(): string;
					public canOverrideExistingModule(): boolean;
					public getSize(param0: string, param1: com.facebook.react.bridge.Promise): void;
					public prefetchImage(param0: string, param1: com.facebook.react.bridge.Promise): void;
					public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
					public initialize(): void;
					public invalidate(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module fbreact {
			export module specs {
				export abstract class NativeImagePickerIOSSpec extends com.facebook.react.bridge.ReactContextBaseJavaModule implements com.facebook.react.bridge.ReactModuleWithSpec, com.facebook.react.turbomodule.core.interfaces.TurboModule {
					public static class: java.lang.Class<com.facebook.fbreact.specs.NativeImagePickerIOSSpec>;
					public canUseCamera(param0: com.facebook.react.bridge.Callback): void;
					public canRecordVideos(param0: com.facebook.react.bridge.Callback): void;
					public openCameraDialog(param0: com.facebook.react.bridge.ReadableMap, param1: com.facebook.react.bridge.Callback, param2: com.facebook.react.bridge.Callback): void;
					public canOverrideExistingModule(): boolean;
					public openSelectDialog(param0: com.facebook.react.bridge.ReadableMap, param1: com.facebook.react.bridge.Callback, param2: com.facebook.react.bridge.Callback): void;
					public clearAllPendingVideos(): void;
					public removePendingVideo(param0: string): void;
					public onCatalystInstanceDestroy(): void;
					public constructor();
					public getName(): string;
					public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
					public initialize(): void;
					public invalidate(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module fbreact {
			export module specs {
				export abstract class NativeImageStoreSpec extends com.facebook.react.bridge.ReactContextBaseJavaModule implements com.facebook.react.bridge.ReactModuleWithSpec, com.facebook.react.turbomodule.core.interfaces.TurboModule {
					public static class: java.lang.Class<com.facebook.fbreact.specs.NativeImageStoreSpec>;
					public getBase64ForTag(param0: string, param1: com.facebook.react.bridge.Callback, param2: com.facebook.react.bridge.Callback): void;
					public removeImageForTag(param0: string): void;
					public onCatalystInstanceDestroy(): void;
					public constructor();
					public getName(): string;
					public canOverrideExistingModule(): boolean;
					public addImageFromBase64(param0: string, param1: com.facebook.react.bridge.Callback, param2: com.facebook.react.bridge.Callback): void;
					public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
					public hasImageForTag(param0: string, param1: com.facebook.react.bridge.Callback): void;
					public initialize(): void;
					public invalidate(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module fbreact {
			export module specs {
				export abstract class NativeJSCHeapCaptureSpec extends com.facebook.react.bridge.ReactContextBaseJavaModule implements com.facebook.react.bridge.ReactModuleWithSpec, com.facebook.react.turbomodule.core.interfaces.TurboModule {
					public static class: java.lang.Class<com.facebook.fbreact.specs.NativeJSCHeapCaptureSpec>;
					public onCatalystInstanceDestroy(): void;
					public constructor();
					public getName(): string;
					public canOverrideExistingModule(): boolean;
					public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
					public captureComplete(param0: string, param1: string): void;
					public initialize(): void;
					public invalidate(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module fbreact {
			export module specs {
				export abstract class NativeJSCSamplingProfilerSpec extends com.facebook.react.bridge.ReactContextBaseJavaModule implements com.facebook.react.bridge.ReactModuleWithSpec, com.facebook.react.turbomodule.core.interfaces.TurboModule {
					public static class: java.lang.Class<com.facebook.fbreact.specs.NativeJSCSamplingProfilerSpec>;
					public onCatalystInstanceDestroy(): void;
					public constructor();
					public getName(): string;
					public canOverrideExistingModule(): boolean;
					public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
					public initialize(): void;
					public operationComplete(param0: number, param1: string, param2: string): void;
					public invalidate(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module fbreact {
			export module specs {
				export abstract class NativeJSDevSupportSpec extends com.facebook.react.bridge.ReactContextBaseJavaModule implements com.facebook.react.bridge.ReactModuleWithSpec, com.facebook.react.turbomodule.core.interfaces.TurboModule {
					public static class: java.lang.Class<com.facebook.fbreact.specs.NativeJSDevSupportSpec>;
					public getConstants(): java.util.Map<string,any>;
					public onCatalystInstanceDestroy(): void;
					public constructor();
					public getName(): string;
					public canOverrideExistingModule(): boolean;
					public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
					public onSuccess(param0: string): void;
					public onFailure(param0: number, param1: string): void;
					public initialize(): void;
					public getTypedExportedConstants(): java.util.Map<string,any>;
					public invalidate(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module fbreact {
			export module specs {
				export abstract class NativeKeyboardObserverSpec extends com.facebook.react.bridge.ReactContextBaseJavaModule implements com.facebook.react.bridge.ReactModuleWithSpec, com.facebook.react.turbomodule.core.interfaces.TurboModule {
					public static class: java.lang.Class<com.facebook.fbreact.specs.NativeKeyboardObserverSpec>;
					public onCatalystInstanceDestroy(): void;
					public constructor();
					public getName(): string;
					public canOverrideExistingModule(): boolean;
					public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
					public addListener(param0: string): void;
					public removeListeners(param0: number): void;
					public initialize(): void;
					public invalidate(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module fbreact {
			export module specs {
				export abstract class NativeLinkingSpec extends com.facebook.react.bridge.ReactContextBaseJavaModule implements com.facebook.react.bridge.ReactModuleWithSpec, com.facebook.react.turbomodule.core.interfaces.TurboModule {
					public static class: java.lang.Class<com.facebook.fbreact.specs.NativeLinkingSpec>;
					public sendIntent(param0: string, param1: com.facebook.react.bridge.ReadableArray, param2: com.facebook.react.bridge.Promise): void;
					public canOverrideExistingModule(): boolean;
					public getInitialURL(param0: com.facebook.react.bridge.Promise): void;
					public openURL(param0: string, param1: com.facebook.react.bridge.Promise): void;
					public addListener(param0: string): void;
					public removeListeners(param0: number): void;
					public onCatalystInstanceDestroy(): void;
					public constructor();
					public getName(): string;
					public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
					public canOpenURL(param0: string, param1: com.facebook.react.bridge.Promise): void;
					public openSettings(param0: com.facebook.react.bridge.Promise): void;
					public initialize(): void;
					public invalidate(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module fbreact {
			export module specs {
				export abstract class NativeLogBoxSpec extends com.facebook.react.bridge.ReactContextBaseJavaModule implements com.facebook.react.bridge.ReactModuleWithSpec, com.facebook.react.turbomodule.core.interfaces.TurboModule {
					public static class: java.lang.Class<com.facebook.fbreact.specs.NativeLogBoxSpec>;
					public show(): void;
					public onCatalystInstanceDestroy(): void;
					public constructor();
					public getName(): string;
					public canOverrideExistingModule(): boolean;
					public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
					public hide(): void;
					public initialize(): void;
					public invalidate(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module fbreact {
			export module specs {
				export abstract class NativeModalManagerSpec extends com.facebook.react.bridge.ReactContextBaseJavaModule implements com.facebook.react.bridge.ReactModuleWithSpec, com.facebook.react.turbomodule.core.interfaces.TurboModule {
					public static class: java.lang.Class<com.facebook.fbreact.specs.NativeModalManagerSpec>;
					public onCatalystInstanceDestroy(): void;
					public constructor();
					public getName(): string;
					public canOverrideExistingModule(): boolean;
					public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
					public addListener(param0: string): void;
					public removeListeners(param0: number): void;
					public initialize(): void;
					public invalidate(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module fbreact {
			export module specs {
				export abstract class NativeNetworkingAndroidSpec extends com.facebook.react.bridge.ReactContextBaseJavaModule implements com.facebook.react.bridge.ReactModuleWithSpec, com.facebook.react.turbomodule.core.interfaces.TurboModule {
					public static class: java.lang.Class<com.facebook.fbreact.specs.NativeNetworkingAndroidSpec>;
					public onCatalystInstanceDestroy(): void;
					public constructor();
					public getName(): string;
					public canOverrideExistingModule(): boolean;
					public sendRequest(param0: string, param1: string, param2: number, param3: com.facebook.react.bridge.ReadableArray, param4: com.facebook.react.bridge.ReadableMap, param5: string, param6: boolean, param7: number, param8: boolean): void;
					public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
					public abortRequest(param0: number): void;
					public addListener(param0: string): void;
					public clearCookies(param0: com.facebook.react.bridge.Callback): void;
					public removeListeners(param0: number): void;
					public initialize(): void;
					public invalidate(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module fbreact {
			export module specs {
				export abstract class NativeNetworkingIOSSpec extends com.facebook.react.bridge.ReactContextBaseJavaModule implements com.facebook.react.bridge.ReactModuleWithSpec, com.facebook.react.turbomodule.core.interfaces.TurboModule {
					public static class: java.lang.Class<com.facebook.fbreact.specs.NativeNetworkingIOSSpec>;
					public onCatalystInstanceDestroy(): void;
					public constructor();
					public getName(): string;
					public canOverrideExistingModule(): boolean;
					public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
					public abortRequest(param0: number): void;
					public addListener(param0: string): void;
					public clearCookies(param0: com.facebook.react.bridge.Callback): void;
					public removeListeners(param0: number): void;
					public initialize(): void;
					public sendRequest(param0: com.facebook.react.bridge.ReadableMap, param1: com.facebook.react.bridge.Callback): void;
					public invalidate(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module fbreact {
			export module specs {
				export abstract class NativePermissionsAndroidSpec extends com.facebook.react.bridge.ReactContextBaseJavaModule implements com.facebook.react.bridge.ReactModuleWithSpec, com.facebook.react.turbomodule.core.interfaces.TurboModule {
					public static class: java.lang.Class<com.facebook.fbreact.specs.NativePermissionsAndroidSpec>;
					public checkPermission(param0: string, param1: com.facebook.react.bridge.Promise): void;
					public onCatalystInstanceDestroy(): void;
					public constructor();
					public getName(): string;
					public canOverrideExistingModule(): boolean;
					public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
					public shouldShowRequestPermissionRationale(param0: string, param1: com.facebook.react.bridge.Promise): void;
					public requestPermission(param0: string, param1: com.facebook.react.bridge.Promise): void;
					public initialize(): void;
					public requestMultiplePermissions(param0: com.facebook.react.bridge.ReadableArray, param1: com.facebook.react.bridge.Promise): void;
					public invalidate(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module fbreact {
			export module specs {
				export abstract class NativePlatformConstantsAndroidSpec extends com.facebook.react.bridge.ReactContextBaseJavaModule implements com.facebook.react.bridge.ReactModuleWithSpec, com.facebook.react.turbomodule.core.interfaces.TurboModule {
					public static class: java.lang.Class<com.facebook.fbreact.specs.NativePlatformConstantsAndroidSpec>;
					public getConstants(): java.util.Map<string,any>;
					public onCatalystInstanceDestroy(): void;
					public constructor();
					public getName(): string;
					public canOverrideExistingModule(): boolean;
					public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
					public getAndroidID(): string;
					public initialize(): void;
					public getTypedExportedConstants(): java.util.Map<string,any>;
					public invalidate(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module fbreact {
			export module specs {
				export abstract class NativePlatformConstantsIOSSpec extends com.facebook.react.bridge.ReactContextBaseJavaModule implements com.facebook.react.bridge.ReactModuleWithSpec, com.facebook.react.turbomodule.core.interfaces.TurboModule {
					public static class: java.lang.Class<com.facebook.fbreact.specs.NativePlatformConstantsIOSSpec>;
					public getConstants(): java.util.Map<string,any>;
					public onCatalystInstanceDestroy(): void;
					public constructor();
					public getName(): string;
					public canOverrideExistingModule(): boolean;
					public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
					public initialize(): void;
					public getTypedExportedConstants(): java.util.Map<string,any>;
					public invalidate(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module fbreact {
			export module specs {
				export abstract class NativePushNotificationManagerIOSSpec extends com.facebook.react.bridge.ReactContextBaseJavaModule implements com.facebook.react.bridge.ReactModuleWithSpec, com.facebook.react.turbomodule.core.interfaces.TurboModule {
					public static class: java.lang.Class<com.facebook.fbreact.specs.NativePushNotificationManagerIOSSpec>;
					public requestPermissions(param0: com.facebook.react.bridge.ReadableMap, param1: com.facebook.react.bridge.Promise): void;
					public setApplicationIconBadgeNumber(param0: number): void;
					public removeAllDeliveredNotifications(): void;
					public cancelLocalNotifications(param0: com.facebook.react.bridge.ReadableMap): void;
					public canOverrideExistingModule(): boolean;
					public abandonPermissions(): void;
					public scheduleLocalNotification(param0: com.facebook.react.bridge.ReadableMap): void;
					public presentLocalNotification(param0: com.facebook.react.bridge.ReadableMap): void;
					public addListener(param0: string): void;
					public removeListeners(param0: number): void;
					public onFinishRemoteNotification(param0: string, param1: string): void;
					public getApplicationIconBadgeNumber(param0: com.facebook.react.bridge.Callback): void;
					public cancelAllLocalNotifications(): void;
					public onCatalystInstanceDestroy(): void;
					public constructor();
					public checkPermissions(param0: com.facebook.react.bridge.Callback): void;
					public getName(): string;
					public removeDeliveredNotifications(param0: com.facebook.react.bridge.ReadableArray): void;
					public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
					public getInitialNotification(param0: com.facebook.react.bridge.Promise): void;
					public getDeliveredNotifications(param0: com.facebook.react.bridge.Callback): void;
					public getScheduledLocalNotifications(param0: com.facebook.react.bridge.Callback): void;
					public initialize(): void;
					public invalidate(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module fbreact {
			export module specs {
				export abstract class NativeRedBoxSpec extends com.facebook.react.bridge.ReactContextBaseJavaModule implements com.facebook.react.bridge.ReactModuleWithSpec, com.facebook.react.turbomodule.core.interfaces.TurboModule {
					public static class: java.lang.Class<com.facebook.fbreact.specs.NativeRedBoxSpec>;
					public onCatalystInstanceDestroy(): void;
					public constructor();
					public getName(): string;
					public canOverrideExistingModule(): boolean;
					public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
					public setExtraData(param0: com.facebook.react.bridge.ReadableMap, param1: string): void;
					public dismiss(): void;
					public initialize(): void;
					public invalidate(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module fbreact {
			export module specs {
				export abstract class NativeSegmentFetcherSpec extends com.facebook.react.bridge.ReactContextBaseJavaModule implements com.facebook.react.bridge.ReactModuleWithSpec, com.facebook.react.turbomodule.core.interfaces.TurboModule {
					public static class: java.lang.Class<com.facebook.fbreact.specs.NativeSegmentFetcherSpec>;
					public onCatalystInstanceDestroy(): void;
					public constructor();
					public getName(): string;
					public canOverrideExistingModule(): boolean;
					public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
					public getSegment(param0: number, param1: com.facebook.react.bridge.ReadableMap, param2: com.facebook.react.bridge.Callback): void;
					public fetchSegment(param0: number, param1: com.facebook.react.bridge.ReadableMap, param2: com.facebook.react.bridge.Callback): void;
					public initialize(): void;
					public invalidate(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module fbreact {
			export module specs {
				export abstract class NativeSettingsManagerSpec extends com.facebook.react.bridge.ReactContextBaseJavaModule implements com.facebook.react.bridge.ReactModuleWithSpec, com.facebook.react.turbomodule.core.interfaces.TurboModule {
					public static class: java.lang.Class<com.facebook.fbreact.specs.NativeSettingsManagerSpec>;
					public setValues(param0: com.facebook.react.bridge.ReadableMap): void;
					public getConstants(): java.util.Map<string,any>;
					public onCatalystInstanceDestroy(): void;
					public constructor();
					public getName(): string;
					public canOverrideExistingModule(): boolean;
					public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
					public deleteValues(param0: com.facebook.react.bridge.ReadableArray): void;
					public initialize(): void;
					public getTypedExportedConstants(): java.util.Map<string,any>;
					public invalidate(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module fbreact {
			export module specs {
				export abstract class NativeShareModuleSpec extends com.facebook.react.bridge.ReactContextBaseJavaModule implements com.facebook.react.bridge.ReactModuleWithSpec, com.facebook.react.turbomodule.core.interfaces.TurboModule {
					public static class: java.lang.Class<com.facebook.fbreact.specs.NativeShareModuleSpec>;
					public share(param0: com.facebook.react.bridge.ReadableMap, param1: string, param2: com.facebook.react.bridge.Promise): void;
					public onCatalystInstanceDestroy(): void;
					public constructor();
					public getName(): string;
					public canOverrideExistingModule(): boolean;
					public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
					public initialize(): void;
					public invalidate(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module fbreact {
			export module specs {
				export abstract class NativeSoundManagerSpec extends com.facebook.react.bridge.ReactContextBaseJavaModule implements com.facebook.react.bridge.ReactModuleWithSpec, com.facebook.react.turbomodule.core.interfaces.TurboModule {
					public static class: java.lang.Class<com.facebook.fbreact.specs.NativeSoundManagerSpec>;
					public playTouchSound(): void;
					public onCatalystInstanceDestroy(): void;
					public constructor();
					public getName(): string;
					public canOverrideExistingModule(): boolean;
					public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
					public initialize(): void;
					public invalidate(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module fbreact {
			export module specs {
				export abstract class NativeSourceCodeSpec extends com.facebook.react.bridge.ReactContextBaseJavaModule implements com.facebook.react.bridge.ReactModuleWithSpec, com.facebook.react.turbomodule.core.interfaces.TurboModule {
					public static class: java.lang.Class<com.facebook.fbreact.specs.NativeSourceCodeSpec>;
					public getConstants(): java.util.Map<string,any>;
					public onCatalystInstanceDestroy(): void;
					public constructor();
					public getName(): string;
					public canOverrideExistingModule(): boolean;
					public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
					public initialize(): void;
					public getTypedExportedConstants(): java.util.Map<string,any>;
					public invalidate(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module fbreact {
			export module specs {
				export abstract class NativeStatusBarManagerAndroidSpec extends com.facebook.react.bridge.ReactContextBaseJavaModule implements com.facebook.react.bridge.ReactModuleWithSpec, com.facebook.react.turbomodule.core.interfaces.TurboModule {
					public static class: java.lang.Class<com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec>;
					public getConstants(): java.util.Map<string,any>;
					public setHidden(param0: boolean): void;
					public setStyle(param0: string): void;
					public canOverrideExistingModule(): boolean;
					public setTranslucent(param0: boolean): void;
					public onCatalystInstanceDestroy(): void;
					public constructor();
					public getName(): string;
					public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
					public setColor(param0: number, param1: boolean): void;
					public initialize(): void;
					public getTypedExportedConstants(): java.util.Map<string,any>;
					public invalidate(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module fbreact {
			export module specs {
				export abstract class NativeStatusBarManagerIOSSpec extends com.facebook.react.bridge.ReactContextBaseJavaModule implements com.facebook.react.bridge.ReactModuleWithSpec, com.facebook.react.turbomodule.core.interfaces.TurboModule {
					public static class: java.lang.Class<com.facebook.fbreact.specs.NativeStatusBarManagerIOSSpec>;
					public getConstants(): java.util.Map<string,any>;
					public canOverrideExistingModule(): boolean;
					public setNetworkActivityIndicatorVisible(param0: boolean): void;
					public addListener(param0: string): void;
					public removeListeners(param0: number): void;
					public onCatalystInstanceDestroy(): void;
					public constructor();
					public getName(): string;
					public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
					public setHidden(param0: boolean, param1: string): void;
					public getHeight(param0: com.facebook.react.bridge.Callback): void;
					public setStyle(param0: string, param1: boolean): void;
					public initialize(): void;
					public getTypedExportedConstants(): java.util.Map<string,any>;
					public invalidate(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module fbreact {
			export module specs {
				export abstract class NativeStatusBarManagerSpec extends com.facebook.react.bridge.ReactContextBaseJavaModule implements com.facebook.react.bridge.ReactModuleWithSpec, com.facebook.react.turbomodule.core.interfaces.TurboModule {
					public static class: java.lang.Class<com.facebook.fbreact.specs.NativeStatusBarManagerSpec>;
					public getConstants(): java.util.Map<string,any>;
					public canOverrideExistingModule(): boolean;
					public setNetworkActivityIndicatorVisible(param0: boolean): void;
					public setTranslucent(param0: boolean): void;
					public setStyle(param0: string, param1: java.lang.Boolean): void;
					public addListener(param0: string): void;
					public removeListeners(param0: number): void;
					public onCatalystInstanceDestroy(): void;
					public constructor();
					public getName(): string;
					public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
					public setHidden(param0: boolean, param1: string): void;
					public getHeight(param0: com.facebook.react.bridge.Callback): void;
					public setColor(param0: number, param1: boolean): void;
					public initialize(): void;
					public getTypedExportedConstants(): java.util.Map<string,any>;
					public invalidate(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module fbreact {
			export module specs {
				export abstract class NativeTVNavigationEventEmitterSpec extends com.facebook.react.bridge.ReactContextBaseJavaModule implements com.facebook.react.bridge.ReactModuleWithSpec, com.facebook.react.turbomodule.core.interfaces.TurboModule {
					public static class: java.lang.Class<com.facebook.fbreact.specs.NativeTVNavigationEventEmitterSpec>;
					public onCatalystInstanceDestroy(): void;
					public constructor();
					public getName(): string;
					public canOverrideExistingModule(): boolean;
					public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
					public addListener(param0: string): void;
					public removeListeners(param0: number): void;
					public initialize(): void;
					public invalidate(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module fbreact {
			export module specs {
				export abstract class NativeTimePickerAndroidSpec extends com.facebook.react.bridge.ReactContextBaseJavaModule implements com.facebook.react.bridge.ReactModuleWithSpec, com.facebook.react.turbomodule.core.interfaces.TurboModule {
					public static class: java.lang.Class<com.facebook.fbreact.specs.NativeTimePickerAndroidSpec>;
					public onCatalystInstanceDestroy(): void;
					public constructor();
					public getName(): string;
					public canOverrideExistingModule(): boolean;
					public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
					public open(param0: com.facebook.react.bridge.ReadableMap, param1: com.facebook.react.bridge.Promise): void;
					public initialize(): void;
					public invalidate(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module fbreact {
			export module specs {
				export abstract class NativeTimingSpec extends com.facebook.react.bridge.ReactContextBaseJavaModule implements com.facebook.react.bridge.ReactModuleWithSpec, com.facebook.react.turbomodule.core.interfaces.TurboModule {
					public static class: java.lang.Class<com.facebook.fbreact.specs.NativeTimingSpec>;
					public createTimer(param0: number, param1: number, param2: number, param3: boolean): void;
					public onCatalystInstanceDestroy(): void;
					public constructor();
					public getName(): string;
					public canOverrideExistingModule(): boolean;
					public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
					public setSendIdleEvents(param0: boolean): void;
					public deleteTimer(param0: number): void;
					public initialize(): void;
					public invalidate(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module fbreact {
			export module specs {
				export abstract class NativeToastAndroidSpec extends com.facebook.react.bridge.ReactContextBaseJavaModule implements com.facebook.react.bridge.ReactModuleWithSpec, com.facebook.react.turbomodule.core.interfaces.TurboModule {
					public static class: java.lang.Class<com.facebook.fbreact.specs.NativeToastAndroidSpec>;
					public getConstants(): java.util.Map<string,any>;
					public onCatalystInstanceDestroy(): void;
					public constructor();
					public getName(): string;
					public canOverrideExistingModule(): boolean;
					public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
					public show(param0: string, param1: number): void;
					public showWithGravityAndOffset(param0: string, param1: number, param2: number, param3: number, param4: number): void;
					public showWithGravity(param0: string, param1: number, param2: number): void;
					public initialize(): void;
					public getTypedExportedConstants(): java.util.Map<string,any>;
					public invalidate(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module fbreact {
			export module specs {
				export abstract class NativeUIManagerSpec extends com.facebook.react.bridge.ReactContextBaseJavaModule implements com.facebook.react.bridge.ReactModuleWithSpec, com.facebook.react.turbomodule.core.interfaces.TurboModule {
					public static class: java.lang.Class<com.facebook.fbreact.specs.NativeUIManagerSpec>;
					public lazilyLoadView(param0: string): com.facebook.react.bridge.WritableMap;
					public canOverrideExistingModule(): boolean;
					public dismissPopupMenu(): void;
					public removeSubviewsFromContainerWithID(param0: number): void;
					public measureInWindow(param0: java.lang.Double, param1: com.facebook.react.bridge.Callback): void;
					public constructor();
					public blur(param0: java.lang.Double): void;
					public manageChildren(param0: java.lang.Double, param1: com.facebook.react.bridge.ReadableArray, param2: com.facebook.react.bridge.ReadableArray, param3: com.facebook.react.bridge.ReadableArray, param4: com.facebook.react.bridge.ReadableArray, param5: com.facebook.react.bridge.ReadableArray): void;
					public clearJSResponder(): void;
					public dispatchViewManagerCommand(param0: java.lang.Double, param1: number, param2: com.facebook.react.bridge.ReadableArray): void;
					public setChildren(param0: java.lang.Double, param1: com.facebook.react.bridge.ReadableArray): void;
					public getConstants(): java.util.Map<string,any>;
					public getConstantsForViewManager(param0: string): com.facebook.react.bridge.WritableMap;
					public updateView(param0: number, param1: string, param2: com.facebook.react.bridge.ReadableMap): void;
					public showPopupMenu(param0: java.lang.Double, param1: com.facebook.react.bridge.ReadableArray, param2: com.facebook.react.bridge.Callback, param3: com.facebook.react.bridge.Callback): void;
					public measure(param0: java.lang.Double, param1: com.facebook.react.bridge.Callback): void;
					public measureLayoutRelativeToParent(param0: java.lang.Double, param1: com.facebook.react.bridge.Callback, param2: com.facebook.react.bridge.Callback): void;
					public focus(param0: java.lang.Double): void;
					public sendAccessibilityEvent(param0: java.lang.Double, param1: number): void;
					public findSubviewIn(param0: java.lang.Double, param1: com.facebook.react.bridge.ReadableArray, param2: com.facebook.react.bridge.Callback): void;
					public replaceExistingNonRootView(param0: java.lang.Double, param1: java.lang.Double): void;
					public configureNextLayoutAnimation(param0: com.facebook.react.bridge.ReadableMap, param1: com.facebook.react.bridge.Callback, param2: com.facebook.react.bridge.Callback): void;
					public playTouchSound(): void;
					public setJSResponder(param0: java.lang.Double, param1: boolean): void;
					public createView(param0: java.lang.Double, param1: string, param2: number, param3: com.facebook.react.bridge.ReadableMap): void;
					public onCatalystInstanceDestroy(): void;
					public setLayoutAnimationEnabledExperimental(param0: boolean): void;
					public getName(): string;
					public measureLayout(param0: java.lang.Double, param1: java.lang.Double, param2: com.facebook.react.bridge.Callback, param3: com.facebook.react.bridge.Callback): void;
					public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
					public getDefaultEventTypes(): com.facebook.react.bridge.WritableArray;
					public initialize(): void;
					public viewIsDescendantOf(param0: java.lang.Double, param1: java.lang.Double, param2: com.facebook.react.bridge.Callback): void;
					public getTypedExportedConstants(): java.util.Map<string,any>;
					public invalidate(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module fbreact {
			export module specs {
				export abstract class NativeVibrationSpec extends com.facebook.react.bridge.ReactContextBaseJavaModule implements com.facebook.react.bridge.ReactModuleWithSpec, com.facebook.react.turbomodule.core.interfaces.TurboModule {
					public static class: java.lang.Class<com.facebook.fbreact.specs.NativeVibrationSpec>;
					public vibrate(param0: number): void;
					public onCatalystInstanceDestroy(): void;
					public constructor();
					public getName(): string;
					public canOverrideExistingModule(): boolean;
					public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
					public cancel(): void;
					public vibrateByPattern(param0: com.facebook.react.bridge.ReadableArray, param1: number): void;
					public initialize(): void;
					public invalidate(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module fbreact {
			export module specs {
				export abstract class NativeWebSocketModuleSpec extends com.facebook.react.bridge.ReactContextBaseJavaModule implements com.facebook.react.bridge.ReactModuleWithSpec, com.facebook.react.turbomodule.core.interfaces.TurboModule {
					public static class: java.lang.Class<com.facebook.fbreact.specs.NativeWebSocketModuleSpec>;
					public sendBinary(param0: string, param1: number): void;
					public canOverrideExistingModule(): boolean;
					public close(param0: number, param1: string, param2: number): void;
					public send(param0: string, param1: number): void;
					public addListener(param0: string): void;
					public removeListeners(param0: number): void;
					public onCatalystInstanceDestroy(): void;
					public constructor();
					public connect(param0: string, param1: com.facebook.react.bridge.ReadableArray, param2: com.facebook.react.bridge.ReadableMap, param3: number): void;
					public getName(): string;
					public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
					public ping(param0: number): void;
					public initialize(): void;
					public invalidate(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module hermes {
			export module instrumentation {
				export class HermesMemoryDumper {
					public static class: java.lang.Class<com.facebook.hermes.instrumentation.HermesMemoryDumper>;
					/**
					 * Constructs a new instance of the com.facebook.hermes.instrumentation.HermesMemoryDumper interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						shouldSaveSnapshot(): boolean;
						getInternalStorage(): string;
						getId(): string;
						setMetaData(param0: string): void;
					});
					public constructor();
					public setMetaData(param0: string): void;
					public getInternalStorage(): string;
					public getId(): string;
					public shouldSaveSnapshot(): boolean;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module hermes {
			export module instrumentation {
				export class HermesSamplingProfiler {
					public static class: java.lang.Class<com.facebook.hermes.instrumentation.HermesSamplingProfiler>;
					public static dumpSampledTraceToFile(param0: string): void;
					public static disable(): void;
					public static enable(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module hermes {
			export module reactexecutor {
				export class HermesExecutor extends com.facebook.react.bridge.JavaScriptExecutor {
					public static class: java.lang.Class<com.facebook.hermes.reactexecutor.HermesExecutor>;
					public getName(): string;
					public static canLoadFile(param0: string): boolean;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module hermes {
			export module reactexecutor {
				export class HermesExecutorFactory extends com.facebook.react.bridge.JavaScriptExecutorFactory {
					public static class: java.lang.Class<com.facebook.hermes.reactexecutor.HermesExecutorFactory>;
					public startSamplingProfiler(): void;
					public constructor(param0: com.facebook.hermes.reactexecutor.RuntimeConfig);
					public toString(): string;
					public create(): com.facebook.react.bridge.JavaScriptExecutor;
					public constructor();
					public stopSamplingProfiler(param0: string): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module hermes {
			export module reactexecutor {
				export class RuntimeConfig {
					public static class: java.lang.Class<com.facebook.hermes.reactexecutor.RuntimeConfig>;
					public heapSizeMB: number;
					public es6Proxy: boolean;
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module hermes {
			export module unicode {
				export class AndroidUnicodeUtils {
					public static class: java.lang.Class<com.facebook.hermes.unicode.AndroidUnicodeUtils>;
					public static localeCompare(param0: string, param1: string): number;
					public constructor();
					public static convertToCase(param0: string, param1: number, param2: boolean): string;
					public static dateFormat(param0: number, param1: boolean, param2: boolean): string;
					public static normalize(param0: string, param1: number): string;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module perftest {
			export class PerfTestConfig {
				public static class: java.lang.Class<com.facebook.perftest.PerfTestConfig>;
				public isRunningInPerfTest(): boolean;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module proguard {
			export module annotations {
				export class KeepGettersAndSetters {
					public static class: java.lang.Class<com.facebook.proguard.annotations.KeepGettersAndSetters>;
					/**
					 * Constructs a new instance of the com.facebook.proguard.annotations.KeepGettersAndSetters interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
					});
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export class BuildConfig {
				public static class: java.lang.Class<com.facebook.react.BuildConfig>;
				public static DEBUG: boolean;
				public static LIBRARY_PACKAGE_NAME: string;
				public static APPLICATION_ID: string;
				public static BUILD_TYPE: string;
				public static FLAVOR: string;
				public static VERSION_CODE: number;
				public static VERSION_NAME: string;
				public static EXOPACKAGE_FLAGS: number;
				public static IS_INTERNAL_BUILD: boolean;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export class CompositeReactPackage implements com.facebook.react.ViewManagerOnDemandReactPackage, com.facebook.react.ReactPackage {
				public static class: java.lang.Class<com.facebook.react.CompositeReactPackage>;
				public getViewManagerNames(param0: com.facebook.react.bridge.ReactApplicationContext): java.util.List<string>;
				public createNativeModules(param0: com.facebook.react.bridge.ReactApplicationContext): java.util.List<com.facebook.react.bridge.NativeModule>;
				public constructor(param0: com.facebook.react.ReactPackage, param1: com.facebook.react.ReactPackage, param2: native.Array<com.facebook.react.ReactPackage>);
				public createViewManagers(param0: com.facebook.react.bridge.ReactApplicationContext): java.util.List<com.facebook.react.uimanager.ViewManager<any,any>>;
				public createViewManager(param0: com.facebook.react.bridge.ReactApplicationContext, param1: string): com.facebook.react.uimanager.ViewManager<any,any>;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export class CoreModulesPackage extends com.facebook.react.TurboReactPackage implements com.facebook.react.ReactPackageLogger {
				public static class: java.lang.Class<com.facebook.react.CoreModulesPackage>;
				public endProcessPackage(): void;
				public getModule(param0: string, param1: com.facebook.react.bridge.ReactApplicationContext): com.facebook.react.bridge.NativeModule;
				public constructor(param0: com.facebook.react.ReactInstanceManager, param1: com.facebook.react.modules.core.DefaultHardwareBackBtnHandler, param2: com.facebook.react.uimanager.UIImplementationProvider, param3: boolean, param4: number);
				public createNativeModules(param0: com.facebook.react.bridge.ReactApplicationContext): java.util.List<com.facebook.react.bridge.NativeModule>;
				public createViewManagers(param0: com.facebook.react.bridge.ReactApplicationContext): java.util.List<com.facebook.react.uimanager.ViewManager<any,any>>;
				public startProcessPackage(): void;
				public getReactModuleInfoProvider(): com.facebook.react.module.model.ReactModuleInfoProvider;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export class DebugCorePackage extends com.facebook.react.TurboReactPackage {
				public static class: java.lang.Class<com.facebook.react.DebugCorePackage>;
				public getModule(param0: string, param1: com.facebook.react.bridge.ReactApplicationContext): com.facebook.react.bridge.NativeModule;
				public createNativeModules(param0: com.facebook.react.bridge.ReactApplicationContext): java.util.List<com.facebook.react.bridge.NativeModule>;
				public createViewManagers(param0: com.facebook.react.bridge.ReactApplicationContext): java.util.List<com.facebook.react.uimanager.ViewManager<any,any>>;
				public getReactModuleInfoProvider(): com.facebook.react.module.model.ReactModuleInfoProvider;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export class EagerModuleProvider extends javax.inject.Provider<com.facebook.react.bridge.NativeModule> {
				public static class: java.lang.Class<com.facebook.react.EagerModuleProvider>;
				public get(): com.facebook.react.bridge.NativeModule;
				public constructor(param0: com.facebook.react.bridge.NativeModule);
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export abstract class HeadlessJsTaskService implements com.facebook.react.jstasks.HeadlessJsTaskEventListener {
				public static class: java.lang.Class<com.facebook.react.HeadlessJsTaskService>;
				public onHeadlessJsTaskFinish(param0: number): void;
				public onBind(param0: globalAndroid.content.Intent): globalAndroid.os.IBinder;
				public onStartCommand(param0: globalAndroid.content.Intent, param1: number, param2: number): number;
				public getTaskConfig(param0: globalAndroid.content.Intent): com.facebook.react.jstasks.HeadlessJsTaskConfig;
				public static acquireWakeLockNow(param0: globalAndroid.content.Context): void;
				public onHeadlessJsTaskStart(param0: number): void;
				public getReactNativeHost(): com.facebook.react.ReactNativeHost;
				public onDestroy(): void;
				public startTask(param0: com.facebook.react.jstasks.HeadlessJsTaskConfig): void;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export abstract class LazyReactPackage extends com.facebook.react.ReactPackage {
				public static class: java.lang.Class<com.facebook.react.LazyReactPackage>;
				public createNativeModules(param0: com.facebook.react.bridge.ReactApplicationContext): java.util.List<com.facebook.react.bridge.NativeModule>;
				public getNativeModuleIterator(param0: com.facebook.react.bridge.ReactApplicationContext): java.lang.Iterable<com.facebook.react.bridge.ModuleHolder>;
				public getViewManagers(param0: com.facebook.react.bridge.ReactApplicationContext): java.util.List<com.facebook.react.bridge.ModuleSpec>;
				public createViewManagers(param0: com.facebook.react.bridge.ReactApplicationContext): java.util.List<com.facebook.react.uimanager.ViewManager<any,any>>;
				public static getReactModuleInfoProviderViaReflection(param0: com.facebook.react.LazyReactPackage): com.facebook.react.module.model.ReactModuleInfoProvider;
				public getNativeModules(param0: com.facebook.react.bridge.ReactApplicationContext): java.util.List<com.facebook.react.bridge.ModuleSpec>;
				public getReactModuleInfoProvider(): com.facebook.react.module.model.ReactModuleInfoProvider;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export class MemoryPressureRouter {
				public static class: java.lang.Class<com.facebook.react.MemoryPressureRouter>;
				public addMemoryPressureListener(param0: com.facebook.react.bridge.MemoryPressureListener): void;
				public removeMemoryPressureListener(param0: com.facebook.react.bridge.MemoryPressureListener): void;
				public onLowMemory(): void;
				public destroy(param0: globalAndroid.content.Context): void;
				public onTrimMemory(param0: number): void;
				public onConfigurationChanged(param0: globalAndroid.content.res.Configuration): void;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export class NativeModuleRegistryBuilder {
				public static class: java.lang.Class<com.facebook.react.NativeModuleRegistryBuilder>;
				public constructor(param0: com.facebook.react.bridge.ReactApplicationContext, param1: com.facebook.react.ReactInstanceManager);
				public build(): com.facebook.react.bridge.NativeModuleRegistry;
				public processPackage(param0: com.facebook.react.ReactPackage): void;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export abstract class ReactActivity implements com.facebook.react.modules.core.DefaultHardwareBackBtnHandler, com.facebook.react.modules.core.PermissionAwareActivity {
				public static class: java.lang.Class<com.facebook.react.ReactActivity>;
				public loadApp(param0: string): void;
				public onBackPressed(): void;
				public checkSelfPermission(param0: string): number;
				public onResume(): void;
				public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
				public onPause(): void;
				public getReactNativeHost(): com.facebook.react.ReactNativeHost;
				public constructor();
				public getMainComponentName(): string;
				public onActivityResult(param0: number, param1: number, param2: globalAndroid.content.Intent): void;
				public requestPermissions(param0: native.Array<string>, param1: number, param2: com.facebook.react.modules.core.PermissionListener): void;
				public createReactActivityDelegate(): com.facebook.react.ReactActivityDelegate;
				public onCreate(param0: globalAndroid.os.Bundle): void;
				public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
				public onRequestPermissionsResult(param0: number, param1: native.Array<string>, param2: native.Array<number>): void;
				public onKeyLongPress(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
				public onNewIntent(param0: globalAndroid.content.Intent): void;
				public checkPermission(param0: string, param1: number, param2: number): number;
				public getReactInstanceManager(): com.facebook.react.ReactInstanceManager;
				public onDestroy(): void;
				public onWindowFocusChanged(param0: boolean): void;
				public invokeDefaultOnBackPressed(): void;
				public shouldShowRequestPermissionRationale(param0: string): boolean;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export class ReactActivityDelegate {
				public static class: java.lang.Class<com.facebook.react.ReactActivityDelegate>;
				public getLaunchOptions(): globalAndroid.os.Bundle;
				public loadApp(param0: string): void;
				public onBackPressed(): boolean;
				public onNewIntent(param0: globalAndroid.content.Intent): boolean;
				public onResume(): void;
				public getPlainActivity(): globalAndroid.app.Activity;
				public getContext(): globalAndroid.content.Context;
				public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
				public constructor(param0: com.facebook.react.ReactActivity, param1: string);
				public onPause(): void;
				public getReactNativeHost(): com.facebook.react.ReactNativeHost;
				public createRootView(): com.facebook.react.ReactRootView;
				public getMainComponentName(): string;
				public onActivityResult(param0: number, param1: number, param2: globalAndroid.content.Intent): void;
				public requestPermissions(param0: native.Array<string>, param1: number, param2: com.facebook.react.modules.core.PermissionListener): void;
				public onCreate(param0: globalAndroid.os.Bundle): void;
				public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
				public onRequestPermissionsResult(param0: number, param1: native.Array<string>, param2: native.Array<number>): void;
				public onKeyLongPress(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
				public getReactInstanceManager(): com.facebook.react.ReactInstanceManager;
				public onDestroy(): void;
				public onWindowFocusChanged(param0: boolean): void;
				/** @deprecated */
				public constructor(param0: globalAndroid.app.Activity, param1: string);
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export class ReactAndroidHWInputDeviceHelper {
				public static class: java.lang.Class<com.facebook.react.ReactAndroidHWInputDeviceHelper>;
				public clearFocus(): void;
				public handleKeyEvent(param0: globalAndroid.view.KeyEvent): void;
				public onFocusChanged(param0: globalAndroid.view.View): void;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export class ReactApplication {
				public static class: java.lang.Class<com.facebook.react.ReactApplication>;
				/**
				 * Constructs a new instance of the com.facebook.react.ReactApplication interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					getReactNativeHost(): com.facebook.react.ReactNativeHost;
				});
				public constructor();
				public getReactNativeHost(): com.facebook.react.ReactNativeHost;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export class ReactDelegate {
				public static class: java.lang.Class<com.facebook.react.ReactDelegate>;
				public onHostResume(): void;
				public onActivityResult(param0: number, param1: number, param2: globalAndroid.content.Intent, param3: boolean): void;
				public loadApp(param0: string): void;
				public onBackPressed(): boolean;
				public onHostPause(): void;
				public loadApp(): void;
				public shouldShowDevMenuOrReload(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
				public getReactInstanceManager(): com.facebook.react.ReactInstanceManager;
				public createRootView(): com.facebook.react.ReactRootView;
				public onHostDestroy(): void;
				public getReactRootView(): com.facebook.react.ReactRootView;
				public constructor(param0: globalAndroid.app.Activity, param1: com.facebook.react.ReactNativeHost, param2: string, param3: globalAndroid.os.Bundle);
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export class ReactFragment implements com.facebook.react.modules.core.PermissionAwareActivity {
				public static class: java.lang.Class<com.facebook.react.ReactFragment>;
				public checkSelfPermission(param0: string): number;
				public onBackPressed(): boolean;
				public onResume(): void;
				public onPause(): void;
				public getReactNativeHost(): com.facebook.react.ReactNativeHost;
				public onCreateView(param0: globalAndroid.view.LayoutInflater, param1: globalAndroid.view.ViewGroup, param2: globalAndroid.os.Bundle): globalAndroid.view.View;
				public constructor();
				public onActivityResult(param0: number, param1: number, param2: globalAndroid.content.Intent): void;
				public requestPermissions(param0: native.Array<string>, param1: number, param2: com.facebook.react.modules.core.PermissionListener): void;
				public onCreate(param0: globalAndroid.os.Bundle): void;
				public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
				public onRequestPermissionsResult(param0: number, param1: native.Array<string>, param2: native.Array<number>): void;
				public checkPermission(param0: string, param1: number, param2: number): number;
				public onDestroy(): void;
				public shouldShowRequestPermissionRationale(param0: string): boolean;
			}
			export module ReactFragment {
				export class Builder {
					public static class: java.lang.Class<com.facebook.react.ReactFragment.Builder>;
					public setComponentName(param0: string): com.facebook.react.ReactFragment.Builder;
					public constructor();
					public setLaunchOptions(param0: globalAndroid.os.Bundle): com.facebook.react.ReactFragment.Builder;
					public build(): com.facebook.react.ReactFragment;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export abstract class ReactFragmentActivity extends com.facebook.react.ReactActivity {
				public static class: java.lang.Class<com.facebook.react.ReactFragmentActivity>;
				public checkSelfPermission(param0: string): number;
				public requestPermissions(param0: native.Array<string>, param1: number, param2: com.facebook.react.modules.core.PermissionListener): void;
				public checkPermission(param0: string, param1: number, param2: number): number;
				public invokeDefaultOnBackPressed(): void;
				public constructor();
				public shouldShowRequestPermissionRationale(param0: string): boolean;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export class ReactInstanceManager {
				public static class: java.lang.Class<com.facebook.react.ReactInstanceManager>;
				public createViewManager(param0: string): com.facebook.react.uimanager.ViewManager<any,any>;
				public onBackPressed(): void;
				public getOrCreateViewManagers(param0: com.facebook.react.bridge.ReactApplicationContext): java.util.List<com.facebook.react.uimanager.ViewManager<any,any>>;
				public addReactInstanceEventListener(param0: com.facebook.react.ReactInstanceManager.ReactInstanceEventListener): void;
				public onHostDestroy(param0: globalAndroid.app.Activity): void;
				public getDevSupportManager(): com.facebook.react.devsupport.interfaces.DevSupportManager;
				public getViewManagerNames(): java.util.List<string>;
				public removeReactInstanceEventListener(param0: com.facebook.react.ReactInstanceManager.ReactInstanceEventListener): void;
				public onHostResume(param0: globalAndroid.app.Activity, param1: com.facebook.react.modules.core.DefaultHardwareBackBtnHandler): void;
				public getMemoryPressureRouter(): com.facebook.react.MemoryPressureRouter;
				public destroy(): void;
				public attachRootView(param0: com.facebook.react.uimanager.ReactRoot): void;
				public onActivityResult(param0: globalAndroid.app.Activity, param1: number, param2: number, param3: globalAndroid.content.Intent): void;
				public detachRootView(param0: com.facebook.react.uimanager.ReactRoot): void;
				public onHostPause(param0: globalAndroid.app.Activity): void;
				public static builder(): com.facebook.react.ReactInstanceManagerBuilder;
				public createReactContextInBackground(): void;
				/** @deprecated */
				public onHostPause(): void;
				public recreateReactContextInBackground(): void;
				public showDevOptionsDialog(): void;
				public onWindowFocusChange(param0: boolean): void;
				public getLifecycleState(): com.facebook.react.common.LifecycleState;
				public onNewIntent(param0: globalAndroid.content.Intent): void;
				public onConfigurationChanged(param0: globalAndroid.content.Context, param1: globalAndroid.content.res.Configuration): void;
				public hasStartedCreatingInitialContext(): boolean;
				public onHostResume(param0: globalAndroid.app.Activity): void;
				public getCurrentReactContext(): com.facebook.react.bridge.ReactContext;
				/** @deprecated */
				public onHostDestroy(): void;
				public getPackages(): java.util.List<com.facebook.react.ReactPackage>;
				public getJsExecutorName(): string;
			}
			export module ReactInstanceManager {
				export class ReactContextInitParams {
					public static class: java.lang.Class<com.facebook.react.ReactInstanceManager.ReactContextInitParams>;
					public constructor(param0: com.facebook.react.ReactInstanceManager, param1: com.facebook.react.bridge.JavaScriptExecutorFactory, param2: com.facebook.react.bridge.JSBundleLoader);
					public getJsExecutorFactory(): com.facebook.react.bridge.JavaScriptExecutorFactory;
					public getJsBundleLoader(): com.facebook.react.bridge.JSBundleLoader;
				}
				export class ReactInstanceEventListener {
					public static class: java.lang.Class<com.facebook.react.ReactInstanceManager.ReactInstanceEventListener>;
					/**
					 * Constructs a new instance of the com.facebook.react.ReactInstanceManager$ReactInstanceEventListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onReactContextInitialized(param0: com.facebook.react.bridge.ReactContext): void;
					});
					public constructor();
					public onReactContextInitialized(param0: com.facebook.react.bridge.ReactContext): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export class ReactInstanceManagerBuilder {
				public static class: java.lang.Class<com.facebook.react.ReactInstanceManagerBuilder>;
				public setCustomPackagerCommandHandlers(param0: java.util.Map<string,com.facebook.react.packagerconnection.RequestHandler>): com.facebook.react.ReactInstanceManagerBuilder;
				public setUseDeveloperSupport(param0: boolean): com.facebook.react.ReactInstanceManagerBuilder;
				public setNativeModuleCallExceptionHandler(param0: com.facebook.react.bridge.NativeModuleCallExceptionHandler): com.facebook.react.ReactInstanceManagerBuilder;
				public setRedBoxHandler(param0: com.facebook.react.devsupport.RedBoxHandler): com.facebook.react.ReactInstanceManagerBuilder;
				public setBundleAssetName(param0: string): com.facebook.react.ReactInstanceManagerBuilder;
				public setDevBundleDownloadListener(param0: com.facebook.react.devsupport.interfaces.DevBundleDownloadListener): com.facebook.react.ReactInstanceManagerBuilder;
				public setLazyViewManagersEnabled(param0: boolean): com.facebook.react.ReactInstanceManagerBuilder;
				public setBridgeIdleDebugListener(param0: com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener): com.facebook.react.ReactInstanceManagerBuilder;
				public setInitialLifecycleState(param0: com.facebook.react.common.LifecycleState): com.facebook.react.ReactInstanceManagerBuilder;
				public setJavaScriptExecutorFactory(param0: com.facebook.react.bridge.JavaScriptExecutorFactory): com.facebook.react.ReactInstanceManagerBuilder;
				public setDefaultHardwareBackBtnHandler(param0: com.facebook.react.modules.core.DefaultHardwareBackBtnHandler): com.facebook.react.ReactInstanceManagerBuilder;
				public build(): com.facebook.react.ReactInstanceManager;
				public addPackage(param0: com.facebook.react.ReactPackage): com.facebook.react.ReactInstanceManagerBuilder;
				public addPackages(param0: java.util.List<com.facebook.react.ReactPackage>): com.facebook.react.ReactInstanceManagerBuilder;
				public setJSIModulesPackage(param0: com.facebook.react.bridge.JSIModulePackage): com.facebook.react.ReactInstanceManagerBuilder;
				public setApplication(param0: globalAndroid.app.Application): com.facebook.react.ReactInstanceManagerBuilder;
				public setMinNumShakes(param0: number): com.facebook.react.ReactInstanceManagerBuilder;
				public setUIImplementationProvider(param0: com.facebook.react.uimanager.UIImplementationProvider): com.facebook.react.ReactInstanceManagerBuilder;
				public setJSBundleLoader(param0: com.facebook.react.bridge.JSBundleLoader): com.facebook.react.ReactInstanceManagerBuilder;
				public setJSBundleFile(param0: string): com.facebook.react.ReactInstanceManagerBuilder;
				public setMinTimeLeftInFrameForNonBatchedOperationMs(param0: number): com.facebook.react.ReactInstanceManagerBuilder;
				public setJSMainModulePath(param0: string): com.facebook.react.ReactInstanceManagerBuilder;
				public setCurrentActivity(param0: globalAndroid.app.Activity): com.facebook.react.ReactInstanceManagerBuilder;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export abstract class ReactInstancePackage extends com.facebook.react.ReactPackage {
				public static class: java.lang.Class<com.facebook.react.ReactInstancePackage>;
				public createNativeModules(param0: com.facebook.react.bridge.ReactApplicationContext): java.util.List<com.facebook.react.bridge.NativeModule>;
				public createNativeModules(param0: com.facebook.react.bridge.ReactApplicationContext, param1: com.facebook.react.ReactInstanceManager): java.util.List<com.facebook.react.bridge.NativeModule>;
				public createViewManagers(param0: com.facebook.react.bridge.ReactApplicationContext): java.util.List<com.facebook.react.uimanager.ViewManager<any,any>>;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export abstract class ReactNativeHost {
				public static class: java.lang.Class<com.facebook.react.ReactNativeHost>;
				public constructor(param0: globalAndroid.app.Application);
				public createReactInstanceManager(): com.facebook.react.ReactInstanceManager;
				public getJavaScriptExecutorFactory(): com.facebook.react.bridge.JavaScriptExecutorFactory;
				public getUIImplementationProvider(): com.facebook.react.uimanager.UIImplementationProvider;
				public getJSIModulePackage(): com.facebook.react.bridge.JSIModulePackage;
				public clear(): void;
				public getRedBoxHandler(): com.facebook.react.devsupport.RedBoxHandler;
				public getJSMainModuleName(): string;
				public getReactInstanceManager(): com.facebook.react.ReactInstanceManager;
				public getApplication(): globalAndroid.app.Application;
				public getJSBundleFile(): string;
				public getPackages(): java.util.List<com.facebook.react.ReactPackage>;
				public getUseDeveloperSupport(): boolean;
				public hasInstance(): boolean;
				public getBundleAssetName(): string;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export class ReactPackage {
				public static class: java.lang.Class<com.facebook.react.ReactPackage>;
				/**
				 * Constructs a new instance of the com.facebook.react.ReactPackage interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					createNativeModules(param0: com.facebook.react.bridge.ReactApplicationContext): java.util.List<com.facebook.react.bridge.NativeModule>;
					createViewManagers(param0: com.facebook.react.bridge.ReactApplicationContext): java.util.List<com.facebook.react.uimanager.ViewManager<any,any>>;
				});
				public constructor();
				public createNativeModules(param0: com.facebook.react.bridge.ReactApplicationContext): java.util.List<com.facebook.react.bridge.NativeModule>;
				public createViewManagers(param0: com.facebook.react.bridge.ReactApplicationContext): java.util.List<com.facebook.react.uimanager.ViewManager<any,any>>;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export class ReactPackageHelper {
				public static class: java.lang.Class<com.facebook.react.ReactPackageHelper>;
				public static getNativeModuleIterator(param0: com.facebook.react.ReactPackage, param1: com.facebook.react.bridge.ReactApplicationContext, param2: com.facebook.react.ReactInstanceManager): java.lang.Iterable<com.facebook.react.bridge.ModuleHolder>;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export class ReactPackageLogger {
				public static class: java.lang.Class<com.facebook.react.ReactPackageLogger>;
				/**
				 * Constructs a new instance of the com.facebook.react.ReactPackageLogger interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					startProcessPackage(): void;
					endProcessPackage(): void;
				});
				public constructor();
				public endProcessPackage(): void;
				public startProcessPackage(): void;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export class ReactRootView implements com.facebook.react.uimanager.RootView, com.facebook.react.uimanager.ReactRoot {
				public static class: java.lang.Class<com.facebook.react.ReactRootView>;
				public onChildStartedNativeGesture(param0: globalAndroid.view.MotionEvent): void;
				public requestDisallowInterceptTouchEvent(param0: boolean): void;
				public requestChildFocus(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
				public getJSModuleName(): string;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
				public setEventListener(param0: com.facebook.react.ReactRootView.ReactRootViewEventListener): void;
				public startReactApplication(param0: com.facebook.react.ReactInstanceManager, param1: string): void;
				public getWidthMeasureSpec(): number;
				public finalize(): void;
				public getHeightMeasureSpec(): number;
				public runApplication(): void;
				public dispatchKeyEvent(param0: globalAndroid.view.KeyEvent): boolean;
				public unmountReactApplication(): void;
				public setRootViewTag(param0: number): void;
				public setIsFabric(param0: boolean): void;
				public constructor(param0: globalAndroid.content.Context);
				public onInterceptTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
				public handleException(param0: java.lang.Throwable): void;
				public getRootViewTag(): number;
				public getReactInstanceManager(): com.facebook.react.ReactInstanceManager;
				public onFocusChanged(param0: boolean, param1: number, param2: globalAndroid.graphics.Rect): void;
				public getAppProperties(): globalAndroid.os.Bundle;
				public constructor(param0: globalAndroid.content.Context, param1: boolean);
				public onLayout(param0: boolean, param1: number, param2: number, param3: number, param4: number): void;
				public getUIManagerType(): number;
				public getRootViewGroup(): globalAndroid.view.ViewGroup;
				public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
				public startReactApplication(param0: com.facebook.react.ReactInstanceManager, param1: string, param2: globalAndroid.os.Bundle): void;
				public onTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
				public dispatchDraw(param0: globalAndroid.graphics.Canvas): void;
				public onStage(param0: number): void;
				public onViewAdded(param0: globalAndroid.view.View): void;
				/** @deprecated */
				public getSurfaceID(): string;
				public getInitialUITemplate(): string;
				public getSurfaceID(): string;
				public setAppProperties(param0: globalAndroid.os.Bundle): void;
				public onAttachedToReactInstance(): void;
				public onMeasure(param0: number, param1: number): void;
				public onDetachedFromWindow(): void;
				public setShouldLogContentAppeared(param0: boolean): void;
				public startReactApplication(param0: com.facebook.react.ReactInstanceManager, param1: string, param2: globalAndroid.os.Bundle, param3: string): void;
				public onAttachedToWindow(): void;
			}
			export module ReactRootView {
				export class CustomGlobalLayoutListener {
					public static class: java.lang.Class<com.facebook.react.ReactRootView.CustomGlobalLayoutListener>;
					public onGlobalLayout(): void;
				}
				export class ReactRootViewEventListener {
					public static class: java.lang.Class<com.facebook.react.ReactRootView.ReactRootViewEventListener>;
					/**
					 * Constructs a new instance of the com.facebook.react.ReactRootView$ReactRootViewEventListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onAttachedToReactInstance(param0: com.facebook.react.ReactRootView): void;
					});
					public constructor();
					public onAttachedToReactInstance(param0: com.facebook.react.ReactRootView): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export abstract class TurboReactPackage extends com.facebook.react.ReactPackage {
				public static class: java.lang.Class<com.facebook.react.TurboReactPackage>;
				public getModule(param0: string, param1: com.facebook.react.bridge.ReactApplicationContext): com.facebook.react.bridge.NativeModule;
				public createNativeModules(param0: com.facebook.react.bridge.ReactApplicationContext): java.util.List<com.facebook.react.bridge.NativeModule>;
				public getNativeModuleIterator(param0: com.facebook.react.bridge.ReactApplicationContext): java.lang.Iterable<com.facebook.react.bridge.ModuleHolder>;
				public getViewManagers(param0: com.facebook.react.bridge.ReactApplicationContext): java.util.List<com.facebook.react.bridge.ModuleSpec>;
				public createViewManagers(param0: com.facebook.react.bridge.ReactApplicationContext): java.util.List<com.facebook.react.uimanager.ViewManager<any,any>>;
				public getReactModuleInfoProvider(): com.facebook.react.module.model.ReactModuleInfoProvider;
				public constructor();
			}
			export module TurboReactPackage {
				export class ModuleHolderProvider extends javax.inject.Provider<com.facebook.react.bridge.NativeModule> {
					public static class: java.lang.Class<com.facebook.react.TurboReactPackage.ModuleHolderProvider>;
					public get(): com.facebook.react.bridge.NativeModule;
					public constructor(param0: com.facebook.react.TurboReactPackage, param1: string, param2: com.facebook.react.bridge.ReactApplicationContext);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export class ViewManagerOnDemandReactPackage {
				public static class: java.lang.Class<com.facebook.react.ViewManagerOnDemandReactPackage>;
				/**
				 * Constructs a new instance of the com.facebook.react.ViewManagerOnDemandReactPackage interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					getViewManagerNames(param0: com.facebook.react.bridge.ReactApplicationContext): java.util.List<string>;
					createViewManager(param0: com.facebook.react.bridge.ReactApplicationContext, param1: string): com.facebook.react.uimanager.ViewManager<any,any>;
				});
				public constructor();
				public getViewManagerNames(param0: com.facebook.react.bridge.ReactApplicationContext): java.util.List<string>;
				public createViewManager(param0: com.facebook.react.bridge.ReactApplicationContext, param1: string): com.facebook.react.uimanager.ViewManager<any,any>;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module animated {
				export class AdditionAnimatedNode extends com.facebook.react.animated.ValueAnimatedNode {
					public static class: java.lang.Class<com.facebook.react.animated.AdditionAnimatedNode>;
					public constructor();
					public constructor(param0: com.facebook.react.bridge.ReadableMap, param1: com.facebook.react.animated.NativeAnimatedNodesManager);
					public update(): void;
					public constructor(param0: com.facebook.react.bridge.ReadableMap);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module animated {
				export abstract class AnimatedNode {
					public static class: java.lang.Class<com.facebook.react.animated.AnimatedNode>;
					public static INITIAL_BFS_COLOR: number;
					public removeChild(param0: com.facebook.react.animated.AnimatedNode): void;
					public update(): void;
					public addChild(param0: com.facebook.react.animated.AnimatedNode): void;
					public onDetachedFromNode(param0: com.facebook.react.animated.AnimatedNode): void;
					public onAttachedToNode(param0: com.facebook.react.animated.AnimatedNode): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module animated {
				export class AnimatedNodeValueListener {
					public static class: java.lang.Class<com.facebook.react.animated.AnimatedNodeValueListener>;
					/**
					 * Constructs a new instance of the com.facebook.react.animated.AnimatedNodeValueListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onValueUpdate(param0: number): void;
					});
					public constructor();
					public onValueUpdate(param0: number): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module animated {
				export abstract class AnimationDriver {
					public static class: java.lang.Class<com.facebook.react.animated.AnimationDriver>;
					public resetConfig(param0: com.facebook.react.bridge.ReadableMap): void;
					public runAnimationStep(param0: number): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module animated {
				export class DecayAnimation extends com.facebook.react.animated.AnimationDriver {
					public static class: java.lang.Class<com.facebook.react.animated.DecayAnimation>;
					public resetConfig(param0: com.facebook.react.bridge.ReadableMap): void;
					public runAnimationStep(param0: number): void;
					public constructor(param0: com.facebook.react.bridge.ReadableMap);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module animated {
				export class DiffClampAnimatedNode extends com.facebook.react.animated.ValueAnimatedNode {
					public static class: java.lang.Class<com.facebook.react.animated.DiffClampAnimatedNode>;
					public constructor();
					public constructor(param0: com.facebook.react.bridge.ReadableMap, param1: com.facebook.react.animated.NativeAnimatedNodesManager);
					public update(): void;
					public constructor(param0: com.facebook.react.bridge.ReadableMap);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module animated {
				export class DivisionAnimatedNode extends com.facebook.react.animated.ValueAnimatedNode {
					public static class: java.lang.Class<com.facebook.react.animated.DivisionAnimatedNode>;
					public constructor();
					public constructor(param0: com.facebook.react.bridge.ReadableMap, param1: com.facebook.react.animated.NativeAnimatedNodesManager);
					public update(): void;
					public constructor(param0: com.facebook.react.bridge.ReadableMap);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module animated {
				export class EventAnimationDriver extends com.facebook.react.uimanager.events.RCTEventEmitter {
					public static class: java.lang.Class<com.facebook.react.animated.EventAnimationDriver>;
					public constructor(param0: java.util.List<string>, param1: com.facebook.react.animated.ValueAnimatedNode);
					public receiveTouches(param0: string, param1: com.facebook.react.bridge.WritableArray, param2: com.facebook.react.bridge.WritableArray): void;
					public receiveEvent(param0: number, param1: string, param2: com.facebook.react.bridge.WritableMap): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module animated {
				export class FrameBasedAnimationDriver extends com.facebook.react.animated.AnimationDriver {
					public static class: java.lang.Class<com.facebook.react.animated.FrameBasedAnimationDriver>;
					public resetConfig(param0: com.facebook.react.bridge.ReadableMap): void;
					public runAnimationStep(param0: number): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module animated {
				export class InterpolationAnimatedNode extends com.facebook.react.animated.ValueAnimatedNode {
					public static class: java.lang.Class<com.facebook.react.animated.InterpolationAnimatedNode>;
					public static EXTRAPOLATE_TYPE_IDENTITY: string;
					public static EXTRAPOLATE_TYPE_CLAMP: string;
					public static EXTRAPOLATE_TYPE_EXTEND: string;
					public constructor();
					public update(): void;
					public constructor(param0: com.facebook.react.bridge.ReadableMap);
					public onDetachedFromNode(param0: com.facebook.react.animated.AnimatedNode): void;
					public onAttachedToNode(param0: com.facebook.react.animated.AnimatedNode): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module animated {
				export class ModulusAnimatedNode extends com.facebook.react.animated.ValueAnimatedNode {
					public static class: java.lang.Class<com.facebook.react.animated.ModulusAnimatedNode>;
					public constructor();
					public constructor(param0: com.facebook.react.bridge.ReadableMap, param1: com.facebook.react.animated.NativeAnimatedNodesManager);
					public update(): void;
					public constructor(param0: com.facebook.react.bridge.ReadableMap);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module animated {
				export class MultiplicationAnimatedNode extends com.facebook.react.animated.ValueAnimatedNode {
					public static class: java.lang.Class<com.facebook.react.animated.MultiplicationAnimatedNode>;
					public constructor();
					public constructor(param0: com.facebook.react.bridge.ReadableMap, param1: com.facebook.react.animated.NativeAnimatedNodesManager);
					public update(): void;
					public constructor(param0: com.facebook.react.bridge.ReadableMap);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module animated {
				export class NativeAnimatedModule extends com.facebook.fbreact.specs.NativeAnimatedModuleSpec implements com.facebook.react.bridge.LifecycleEventListener, com.facebook.react.uimanager.UIManagerModuleListener {
					public static class: java.lang.Class<com.facebook.react.animated.NativeAnimatedModule>;
					public static NAME: string;
					public setNodesManager(param0: com.facebook.react.animated.NativeAnimatedNodesManager): void;
					public setAnimatedNodeOffset(param0: number, param1: number): void;
					public canOverrideExistingModule(): boolean;
					public onHostDestroy(): void;
					public addListener(param0: string): void;
					public startAnimatingNode(param0: number, param1: number, param2: com.facebook.react.bridge.ReadableMap, param3: com.facebook.react.bridge.Callback): void;
					public removeListeners(param0: number): void;
					public onHostPause(): void;
					public createAnimatedNode(param0: number, param1: com.facebook.react.bridge.ReadableMap): void;
					public restoreDefaultValues(param0: number): void;
					public flattenAnimatedNodeOffset(param0: number): void;
					public extractAnimatedNodeOffset(param0: number): void;
					public constructor();
					public connectAnimatedNodes(param0: number, param1: number): void;
					public stopListeningToAnimatedNodeValue(param0: number): void;
					public willDispatchViewUpdates(param0: com.facebook.react.uimanager.UIManagerModule): void;
					public connectAnimatedNodeToView(param0: number, param1: number): void;
					public disconnectAnimatedNodeFromView(param0: number, param1: number): void;
					public addAnimatedEventToView(param0: number, param1: string, param2: com.facebook.react.bridge.ReadableMap): void;
					public stopAnimation(param0: number): void;
					public setAnimatedNodeValue(param0: number, param1: number): void;
					public onCatalystInstanceDestroy(): void;
					public onHostResume(): void;
					public getName(): string;
					public dropAnimatedNode(param0: number): void;
					public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
					public disconnectAnimatedNodes(param0: number, param1: number): void;
					public removeAnimatedEventFromView(param0: number, param1: string, param2: number): void;
					public initialize(): void;
					public startListeningToAnimatedNodeValue(param0: number): void;
					public invalidate(): void;
				}
				export module NativeAnimatedModule {
					export class UIThreadOperation {
						public static class: java.lang.Class<com.facebook.react.animated.NativeAnimatedModule.UIThreadOperation>;
						/**
						 * Constructs a new instance of the com.facebook.react.animated.NativeAnimatedModule$UIThreadOperation interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							execute(param0: com.facebook.react.animated.NativeAnimatedNodesManager): void;
						});
						public constructor();
						public execute(param0: com.facebook.react.animated.NativeAnimatedNodesManager): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module animated {
				export class NativeAnimatedNodesManager extends com.facebook.react.uimanager.events.EventDispatcherListener {
					public static class: java.lang.Class<com.facebook.react.animated.NativeAnimatedNodesManager>;
					public stopListeningToAnimatedNodeValue(param0: number): void;
					public connectAnimatedNodeToView(param0: number, param1: number): void;
					public setAnimatedNodeOffset(param0: number, param1: number): void;
					public disconnectAnimatedNodeFromView(param0: number, param1: number): void;
					public addAnimatedEventToView(param0: number, param1: string, param2: com.facebook.react.bridge.ReadableMap): void;
					public startListeningToAnimatedNodeValue(param0: number, param1: com.facebook.react.animated.AnimatedNodeValueListener): void;
					public runUpdates(param0: number): void;
					public startAnimatingNode(param0: number, param1: number, param2: com.facebook.react.bridge.ReadableMap, param3: com.facebook.react.bridge.Callback): void;
					public createAnimatedNode(param0: number, param1: com.facebook.react.bridge.ReadableMap): void;
					public restoreDefaultValues(param0: number): void;
					public constructor(param0: com.facebook.react.uimanager.UIManagerModule);
					public stopAnimation(param0: number): void;
					public setAnimatedNodeValue(param0: number, param1: number): void;
					public flattenAnimatedNodeOffset(param0: number): void;
					public extractAnimatedNodeOffset(param0: number): void;
					public dropAnimatedNode(param0: number): void;
					public hasActiveAnimations(): boolean;
					public connectAnimatedNodes(param0: number, param1: number): void;
					public disconnectAnimatedNodes(param0: number, param1: number): void;
					public removeAnimatedEventFromView(param0: number, param1: string, param2: number): void;
					public onEventDispatch(param0: com.facebook.react.uimanager.events.Event<any>): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module animated {
				export class PropsAnimatedNode extends com.facebook.react.animated.AnimatedNode {
					public static class: java.lang.Class<com.facebook.react.animated.PropsAnimatedNode>;
					public updateView(): void;
					public connectToView(param0: number): void;
					public disconnectFromView(param0: number): void;
					public restoreDefaultValues(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module animated {
				export class SpringAnimation extends com.facebook.react.animated.AnimationDriver {
					public static class: java.lang.Class<com.facebook.react.animated.SpringAnimation>;
					public resetConfig(param0: com.facebook.react.bridge.ReadableMap): void;
					public runAnimationStep(param0: number): void;
				}
				export module SpringAnimation {
					export class PhysicsState {
						public static class: java.lang.Class<com.facebook.react.animated.SpringAnimation.PhysicsState>;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module animated {
				export class StyleAnimatedNode extends com.facebook.react.animated.AnimatedNode {
					public static class: java.lang.Class<com.facebook.react.animated.StyleAnimatedNode>;
					public collectViewUpdates(param0: com.facebook.react.bridge.JavaOnlyMap): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module animated {
				export class SubtractionAnimatedNode extends com.facebook.react.animated.ValueAnimatedNode {
					public static class: java.lang.Class<com.facebook.react.animated.SubtractionAnimatedNode>;
					public constructor();
					public constructor(param0: com.facebook.react.bridge.ReadableMap, param1: com.facebook.react.animated.NativeAnimatedNodesManager);
					public update(): void;
					public constructor(param0: com.facebook.react.bridge.ReadableMap);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module animated {
				export class TrackingAnimatedNode extends com.facebook.react.animated.AnimatedNode {
					public static class: java.lang.Class<com.facebook.react.animated.TrackingAnimatedNode>;
					public update(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module animated {
				export class TransformAnimatedNode extends com.facebook.react.animated.AnimatedNode {
					public static class: java.lang.Class<com.facebook.react.animated.TransformAnimatedNode>;
					public collectViewUpdates(param0: com.facebook.react.bridge.JavaOnlyMap): void;
				}
				export module TransformAnimatedNode {
					export class AnimatedTransformConfig extends com.facebook.react.animated.TransformAnimatedNode.TransformConfig {
						public static class: java.lang.Class<com.facebook.react.animated.TransformAnimatedNode.AnimatedTransformConfig>;
						public mNodeTag: number;
					}
					export class StaticTransformConfig extends com.facebook.react.animated.TransformAnimatedNode.TransformConfig {
						public static class: java.lang.Class<com.facebook.react.animated.TransformAnimatedNode.StaticTransformConfig>;
						public mValue: number;
					}
					export class TransformConfig {
						public static class: java.lang.Class<com.facebook.react.animated.TransformAnimatedNode.TransformConfig>;
						public mProperty: string;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module animated {
				export class ValueAnimatedNode extends com.facebook.react.animated.AnimatedNode {
					public static class: java.lang.Class<com.facebook.react.animated.ValueAnimatedNode>;
					public setValueListener(param0: com.facebook.react.animated.AnimatedNodeValueListener): void;
					public getAnimatedObject(): any;
					public constructor();
					public getValue(): number;
					public constructor(param0: com.facebook.react.bridge.ReadableMap);
					public extractOffset(): void;
					public onValueUpdate(): void;
					public flattenOffset(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class ActivityEventListener {
					public static class: java.lang.Class<com.facebook.react.bridge.ActivityEventListener>;
					/**
					 * Constructs a new instance of the com.facebook.react.bridge.ActivityEventListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onActivityResult(param0: globalAndroid.app.Activity, param1: number, param2: number, param3: globalAndroid.content.Intent): void;
						onNewIntent(param0: globalAndroid.content.Intent): void;
					});
					public constructor();
					public onNewIntent(param0: globalAndroid.content.Intent): void;
					public onActivityResult(param0: globalAndroid.app.Activity, param1: number, param2: number, param3: globalAndroid.content.Intent): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class Arguments {
					public static class: java.lang.Class<com.facebook.react.bridge.Arguments>;
					public static fromBundle(param0: globalAndroid.os.Bundle): com.facebook.react.bridge.WritableMap;
					public static makeNativeArray(param0: any): com.facebook.react.bridge.WritableNativeArray;
					public static fromList(param0: java.util.List): com.facebook.react.bridge.WritableArray;
					public static createMap(): com.facebook.react.bridge.WritableMap;
					public static fromArray(param0: any): com.facebook.react.bridge.WritableArray;
					public static makeNativeArray(param0: java.util.List): com.facebook.react.bridge.WritableNativeArray;
					public static makeNativeMap(param0: java.util.Map<string,any>): com.facebook.react.bridge.WritableNativeMap;
					public static toBundle(param0: com.facebook.react.bridge.ReadableMap): globalAndroid.os.Bundle;
					public constructor();
					public static toList(param0: com.facebook.react.bridge.ReadableArray): java.util.ArrayList;
					public static createArray(): com.facebook.react.bridge.WritableArray;
					public static fromJavaArgs(param0: native.Array<any>): com.facebook.react.bridge.WritableNativeArray;
					public static makeNativeMap(param0: globalAndroid.os.Bundle): com.facebook.react.bridge.WritableNativeMap;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class AssertionException {
					public static class: java.lang.Class<com.facebook.react.bridge.AssertionException>;
					public constructor(param0: string);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class BaseActivityEventListener extends com.facebook.react.bridge.ActivityEventListener {
					public static class: java.lang.Class<com.facebook.react.bridge.BaseActivityEventListener>;
					public onNewIntent(param0: globalAndroid.content.Intent): void;
					public constructor();
					public onActivityResult(param0: globalAndroid.app.Activity, param1: number, param2: number, param3: globalAndroid.content.Intent): void;
					/** @deprecated */
					public onActivityResult(param0: number, param1: number, param2: globalAndroid.content.Intent): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export abstract class BaseJavaModule extends com.facebook.react.bridge.NativeModule {
					public static class: java.lang.Class<com.facebook.react.bridge.BaseJavaModule>;
					public static METHOD_TYPE_ASYNC: string;
					public static METHOD_TYPE_PROMISE: string;
					public static METHOD_TYPE_SYNC: string;
					public getConstants(): java.util.Map<string,any>;
					public onCatalystInstanceDestroy(): void;
					public constructor();
					public canOverrideExistingModule(): boolean;
					public getName(): string;
					public initialize(): void;
					public hasConstants(): boolean;
					public invalidate(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class Callback {
					public static class: java.lang.Class<com.facebook.react.bridge.Callback>;
					/**
					 * Constructs a new instance of the com.facebook.react.bridge.Callback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						invoke(param0: native.Array<any>): void;
					});
					public constructor();
					public invoke(param0: native.Array<any>): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class CallbackImpl extends com.facebook.react.bridge.Callback {
					public static class: java.lang.Class<com.facebook.react.bridge.CallbackImpl>;
					public constructor(param0: com.facebook.react.bridge.JSInstance, param1: number);
					public invoke(param0: native.Array<any>): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class CatalystInstance implements com.facebook.react.bridge.MemoryPressureListener, com.facebook.react.bridge.JSInstance, com.facebook.react.bridge.JSBundleLoaderDelegate {
					public static class: java.lang.Class<com.facebook.react.bridge.CatalystInstance>;
					/**
					 * Constructs a new instance of the com.facebook.react.bridge.CatalystInstance interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						runJSBundle(): void;
						hasRunJSBundle(): boolean;
						getSourceURL(): string;
						invokeCallback(param0: number, param1: com.facebook.react.bridge.NativeArrayInterface): void;
						callFunction(param0: string, param1: string, param2: com.facebook.react.bridge.NativeArray): void;
						destroy(): void;
						isDestroyed(): boolean;
						initialize(): void;
						getReactQueueConfiguration(): com.facebook.react.bridge.queue.ReactQueueConfiguration;
						getJSModule(param0: java.lang.Class): com.facebook.react.bridge.JavaScriptModule;
						hasNativeModule(param0: java.lang.Class): boolean;
						getNativeModule(param0: java.lang.Class): com.facebook.react.bridge.NativeModule;
						getNativeModule(param0: string): com.facebook.react.bridge.NativeModule;
						getJSIModule(param0: com.facebook.react.bridge.JSIModuleType): com.facebook.react.bridge.JSIModule;
						getNativeModules(): java.util.Collection<com.facebook.react.bridge.NativeModule>;
						extendNativeModules(param0: com.facebook.react.bridge.NativeModuleRegistry): void;
						addBridgeIdleDebugListener(param0: com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener): void;
						removeBridgeIdleDebugListener(param0: com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener): void;
						registerSegment(param0: number, param1: string): void;
						setGlobalVariable(param0: string, param1: string): void;
						getJavaScriptContextHolder(): com.facebook.react.bridge.JavaScriptContextHolder;
						addJSIModules(param0: java.util.List<com.facebook.react.bridge.JSIModuleSpec<any>>): void;
						getJSCallInvokerHolder(): com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder;
						getNativeCallInvokerHolder(): com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder;
						setTurboModuleManager(param0: com.facebook.react.bridge.JSIModule): void;
						handleMemoryPressure(param0: number): void;
						invokeCallback(param0: number, param1: com.facebook.react.bridge.NativeArrayInterface): void;
						loadScriptFromAssets(param0: globalAndroid.content.res.AssetManager, param1: string, param2: boolean): void;
						loadScriptFromFile(param0: string, param1: string, param2: boolean): void;
						setSourceURLs(param0: string, param1: string): void;
					});
					public constructor();
					public loadScriptFromFile(param0: string, param1: string, param2: boolean): void;
					public getJSIModule(param0: com.facebook.react.bridge.JSIModuleType): com.facebook.react.bridge.JSIModule;
					public getNativeCallInvokerHolder(): com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder;
					public getNativeModule(param0: string): com.facebook.react.bridge.NativeModule;
					public invokeCallback(param0: number, param1: com.facebook.react.bridge.NativeArrayInterface): void;
					public addJSIModules(param0: java.util.List<com.facebook.react.bridge.JSIModuleSpec<any>>): void;
					public getSourceURL(): string;
					public hasNativeModule(param0: java.lang.Class): boolean;
					public getJavaScriptContextHolder(): com.facebook.react.bridge.JavaScriptContextHolder;
					public destroy(): void;
					public runJSBundle(): void;
					public removeBridgeIdleDebugListener(param0: com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener): void;
					public setSourceURLs(param0: string, param1: string): void;
					public getNativeModules(): java.util.Collection<com.facebook.react.bridge.NativeModule>;
					public hasRunJSBundle(): boolean;
					public extendNativeModules(param0: com.facebook.react.bridge.NativeModuleRegistry): void;
					public callFunction(param0: string, param1: string, param2: com.facebook.react.bridge.NativeArray): void;
					public setGlobalVariable(param0: string, param1: string): void;
					public loadScriptFromAssets(param0: globalAndroid.content.res.AssetManager, param1: string, param2: boolean): void;
					public handleMemoryPressure(param0: number): void;
					public registerSegment(param0: number, param1: string): void;
					public getNativeModule(param0: java.lang.Class): com.facebook.react.bridge.NativeModule;
					public getJSModule(param0: java.lang.Class): com.facebook.react.bridge.JavaScriptModule;
					public getReactQueueConfiguration(): com.facebook.react.bridge.queue.ReactQueueConfiguration;
					public getJSCallInvokerHolder(): com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder;
					public isDestroyed(): boolean;
					public setTurboModuleManager(param0: com.facebook.react.bridge.JSIModule): void;
					public addBridgeIdleDebugListener(param0: com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener): void;
					public initialize(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class CatalystInstanceImpl extends com.facebook.react.bridge.CatalystInstance {
					public static class: java.lang.Class<com.facebook.react.bridge.CatalystInstanceImpl>;
					public loadScriptFromFile(param0: string, param1: string, param2: boolean): void;
					public destroyV2(): void;
					public getJSIModule(param0: com.facebook.react.bridge.JSIModuleType): com.facebook.react.bridge.JSIModule;
					public getNativeCallInvokerHolder(): com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder;
					public getNativeModule(param0: string): com.facebook.react.bridge.NativeModule;
					public invokeCallback(param0: number, param1: com.facebook.react.bridge.NativeArrayInterface): void;
					public addJSIModules(param0: java.util.List<com.facebook.react.bridge.JSIModuleSpec<any>>): void;
					public getSourceURL(): string;
					public hasNativeModule(param0: java.lang.Class): boolean;
					public callFunction(param0: com.facebook.react.bridge.CatalystInstanceImpl.PendingJSCall): void;
					public getJavaScriptContextHolder(): com.facebook.react.bridge.JavaScriptContextHolder;
					public getJSCallInvokerHolder(): com.facebook.react.turbomodule.core.CallInvokerHolderImpl;
					public destroy(): void;
					public runJSBundle(): void;
					public setSourceURLs(param0: string, param1: string): void;
					public removeBridgeIdleDebugListener(param0: com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener): void;
					public getNativeModules(): java.util.Collection<com.facebook.react.bridge.NativeModule>;
					public extendNativeModules(param0: com.facebook.react.bridge.NativeModuleRegistry): void;
					public hasRunJSBundle(): boolean;
					public callFunction(param0: string, param1: string, param2: com.facebook.react.bridge.NativeArray): void;
					public loadScriptFromAssets(param0: globalAndroid.content.res.AssetManager, param1: string, param2: boolean): void;
					public setGlobalVariable(param0: string, param1: string): void;
					public getNativeCallInvokerHolder(): com.facebook.react.turbomodule.core.CallInvokerHolderImpl;
					public handleMemoryPressure(param0: number): void;
					public registerSegment(param0: number, param1: string): void;
					public getNativeModule(param0: java.lang.Class): com.facebook.react.bridge.NativeModule;
					public getJSModule(param0: java.lang.Class): com.facebook.react.bridge.JavaScriptModule;
					public getReactQueueConfiguration(): com.facebook.react.bridge.queue.ReactQueueConfiguration;
					public destroyV1(): void;
					public getJSCallInvokerHolder(): com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder;
					public isDestroyed(): boolean;
					public setTurboModuleManager(param0: com.facebook.react.bridge.JSIModule): void;
					public addBridgeIdleDebugListener(param0: com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener): void;
					public initialize(): void;
				}
				export module CatalystInstanceImpl {
					export class BridgeCallback extends com.facebook.react.bridge.ReactCallback {
						public static class: java.lang.Class<com.facebook.react.bridge.CatalystInstanceImpl.BridgeCallback>;
						public onBatchComplete(): void;
						public decrementPendingJSCalls(): void;
						public incrementPendingJSCalls(): void;
					}
					export class Builder {
						public static class: java.lang.Class<com.facebook.react.bridge.CatalystInstanceImpl.Builder>;
						public setReactQueueConfigurationSpec(param0: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec): com.facebook.react.bridge.CatalystInstanceImpl.Builder;
						public setJSBundleLoader(param0: com.facebook.react.bridge.JSBundleLoader): com.facebook.react.bridge.CatalystInstanceImpl.Builder;
						public constructor();
						public setJSExecutor(param0: com.facebook.react.bridge.JavaScriptExecutor): com.facebook.react.bridge.CatalystInstanceImpl.Builder;
						public setNativeModuleCallExceptionHandler(param0: com.facebook.react.bridge.NativeModuleCallExceptionHandler): com.facebook.react.bridge.CatalystInstanceImpl.Builder;
						public build(): com.facebook.react.bridge.CatalystInstanceImpl;
						public setRegistry(param0: com.facebook.react.bridge.NativeModuleRegistry): com.facebook.react.bridge.CatalystInstanceImpl.Builder;
					}
					export class JSProfilerTraceListener extends com.facebook.systrace.TraceListener {
						public static class: java.lang.Class<com.facebook.react.bridge.CatalystInstanceImpl.JSProfilerTraceListener>;
						public constructor(param0: com.facebook.react.bridge.CatalystInstanceImpl);
						public onTraceStarted(): void;
						public onTraceStopped(): void;
					}
					export class NativeExceptionHandler extends com.facebook.react.bridge.queue.QueueThreadExceptionHandler {
						public static class: java.lang.Class<com.facebook.react.bridge.CatalystInstanceImpl.NativeExceptionHandler>;
						public handleException(param0: java.lang.Exception): void;
					}
					export class PendingJSCall {
						public static class: java.lang.Class<com.facebook.react.bridge.CatalystInstanceImpl.PendingJSCall>;
						public mModule: string;
						public mMethod: string;
						public mArguments: com.facebook.react.bridge.NativeArray;
						public constructor(param0: string, param1: string, param2: com.facebook.react.bridge.NativeArray);
						public toString(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class ColorPropConverter {
					public static class: java.lang.Class<com.facebook.react.bridge.ColorPropConverter>;
					public constructor();
					public static getColor(param0: any, param1: globalAndroid.content.Context): java.lang.Integer;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export abstract class ContextBaseJavaModule extends com.facebook.react.bridge.BaseJavaModule {
					public static class: java.lang.Class<com.facebook.react.bridge.ContextBaseJavaModule>;
					public constructor(param0: globalAndroid.content.Context);
					public onCatalystInstanceDestroy(): void;
					public constructor();
					public getName(): string;
					public canOverrideExistingModule(): boolean;
					public getContext(): globalAndroid.content.Context;
					public initialize(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class CxxCallbackImpl extends com.facebook.react.bridge.Callback {
					public static class: java.lang.Class<com.facebook.react.bridge.CxxCallbackImpl>;
					public invoke(param0: native.Array<any>): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class CxxModuleWrapper extends com.facebook.react.bridge.CxxModuleWrapperBase {
					public static class: java.lang.Class<com.facebook.react.bridge.CxxModuleWrapper>;
					public static makeDso(param0: string, param1: string): com.facebook.react.bridge.CxxModuleWrapper;
					public onCatalystInstanceDestroy(): void;
					public getName(): string;
					public canOverrideExistingModule(): boolean;
					public constructor(param0: com.facebook.jni.HybridData);
					public initialize(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class CxxModuleWrapperBase extends com.facebook.react.bridge.NativeModule {
					public static class: java.lang.Class<com.facebook.react.bridge.CxxModuleWrapperBase>;
					public resetModule(param0: com.facebook.jni.HybridData): void;
					public onCatalystInstanceDestroy(): void;
					public getName(): string;
					public canOverrideExistingModule(): boolean;
					public constructor(param0: com.facebook.jni.HybridData);
					public initialize(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class DefaultNativeModuleCallExceptionHandler extends com.facebook.react.bridge.NativeModuleCallExceptionHandler {
					public static class: java.lang.Class<com.facebook.react.bridge.DefaultNativeModuleCallExceptionHandler>;
					public handleException(param0: java.lang.Exception): void;
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class Dynamic {
					public static class: java.lang.Class<com.facebook.react.bridge.Dynamic>;
					/**
					 * Constructs a new instance of the com.facebook.react.bridge.Dynamic interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						isNull(): boolean;
						asBoolean(): boolean;
						asDouble(): number;
						asInt(): number;
						asString(): string;
						asArray(): com.facebook.react.bridge.ReadableArray;
						asMap(): com.facebook.react.bridge.ReadableMap;
						getType(): com.facebook.react.bridge.ReadableType;
						recycle(): void;
					});
					public constructor();
					public asMap(): com.facebook.react.bridge.ReadableMap;
					public asInt(): number;
					public recycle(): void;
					public asBoolean(): boolean;
					public isNull(): boolean;
					public asString(): string;
					public asArray(): com.facebook.react.bridge.ReadableArray;
					public getType(): com.facebook.react.bridge.ReadableType;
					public asDouble(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class DynamicFromArray extends com.facebook.react.bridge.Dynamic {
					public static class: java.lang.Class<com.facebook.react.bridge.DynamicFromArray>;
					public asMap(): com.facebook.react.bridge.ReadableMap;
					public asInt(): number;
					public static create(param0: com.facebook.react.bridge.ReadableArray, param1: number): com.facebook.react.bridge.DynamicFromArray;
					public recycle(): void;
					public asBoolean(): boolean;
					public isNull(): boolean;
					public asString(): string;
					public asArray(): com.facebook.react.bridge.ReadableArray;
					public getType(): com.facebook.react.bridge.ReadableType;
					public asDouble(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class DynamicFromMap extends com.facebook.react.bridge.Dynamic {
					public static class: java.lang.Class<com.facebook.react.bridge.DynamicFromMap>;
					public asMap(): com.facebook.react.bridge.ReadableMap;
					public asInt(): number;
					public static create(param0: com.facebook.react.bridge.ReadableMap, param1: string): com.facebook.react.bridge.DynamicFromMap;
					public recycle(): void;
					public asBoolean(): boolean;
					public isNull(): boolean;
					public asString(): string;
					public asArray(): com.facebook.react.bridge.ReadableArray;
					public getType(): com.facebook.react.bridge.ReadableType;
					public asDouble(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class DynamicFromObject extends com.facebook.react.bridge.Dynamic {
					public static class: java.lang.Class<com.facebook.react.bridge.DynamicFromObject>;
					public asMap(): com.facebook.react.bridge.ReadableMap;
					public asInt(): number;
					public recycle(): void;
					public asBoolean(): boolean;
					public isNull(): boolean;
					public constructor(param0: any);
					public asString(): string;
					public asArray(): com.facebook.react.bridge.ReadableArray;
					public getType(): com.facebook.react.bridge.ReadableType;
					public asDouble(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class FallbackJSBundleLoader extends com.facebook.react.bridge.JSBundleLoader {
					public static class: java.lang.Class<com.facebook.react.bridge.FallbackJSBundleLoader>;
					public constructor();
					public constructor(param0: java.util.List<com.facebook.react.bridge.JSBundleLoader>);
					public loadScript(param0: com.facebook.react.bridge.JSBundleLoaderDelegate): string;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export abstract class GuardedAsyncTask<Params, Progress>  extends globalAndroid.os.AsyncTask<any,any,java.lang.Void> {
					public static class: java.lang.Class<com.facebook.react.bridge.GuardedAsyncTask<any,any>>;
					/** @deprecated */
					public constructor(param0: com.facebook.react.bridge.ReactContext);
					public doInBackgroundGuarded(param0: native.Array<any>): void;
					public doInBackground(param0: native.Array<any>): java.lang.Void;
					public constructor(param0: com.facebook.react.bridge.NativeModuleCallExceptionHandler);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export abstract class GuardedResultAsyncTask<Result>  extends globalAndroid.os.AsyncTask<java.lang.Void,java.lang.Void,any> {
					public static class: java.lang.Class<com.facebook.react.bridge.GuardedResultAsyncTask<any>>;
					/** @deprecated */
					public constructor(param0: com.facebook.react.bridge.ReactContext);
					public doInBackground(param0: native.Array<java.lang.Void>): any;
					public constructor(param0: com.facebook.react.bridge.NativeModuleCallExceptionHandler);
					public onPostExecuteGuarded(param0: any): void;
					public onPostExecute(param0: any): void;
					public doInBackgroundGuarded(): any;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export abstract class GuardedRunnable {
					public static class: java.lang.Class<com.facebook.react.bridge.GuardedRunnable>;
					/** @deprecated */
					public constructor(param0: com.facebook.react.bridge.ReactContext);
					public runGuarded(): void;
					public run(): void;
					public constructor(param0: com.facebook.react.bridge.NativeModuleCallExceptionHandler);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class Inspector {
					public static class: java.lang.Class<com.facebook.react.bridge.Inspector>;
					public static connect(param0: number, param1: com.facebook.react.bridge.Inspector.RemoteConnection): com.facebook.react.bridge.Inspector.LocalConnection;
					public static getPages(): java.util.List<com.facebook.react.bridge.Inspector.Page>;
				}
				export module Inspector {
					export class LocalConnection {
						public static class: java.lang.Class<com.facebook.react.bridge.Inspector.LocalConnection>;
						public sendMessage(param0: string): void;
						public disconnect(): void;
					}
					export class Page {
						public static class: java.lang.Class<com.facebook.react.bridge.Inspector.Page>;
						public getVM(): string;
						public toString(): string;
						public getId(): number;
						public getTitle(): string;
					}
					export class RemoteConnection {
						public static class: java.lang.Class<com.facebook.react.bridge.Inspector.RemoteConnection>;
						/**
						 * Constructs a new instance of the com.facebook.react.bridge.Inspector$RemoteConnection interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onMessage(param0: string): void;
							onDisconnect(): void;
						});
						public constructor();
						public onMessage(param0: string): void;
						public onDisconnect(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class InvalidIteratorException {
					public static class: java.lang.Class<com.facebook.react.bridge.InvalidIteratorException>;
					public constructor(param0: string);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class JSApplicationCausedNativeException {
					public static class: java.lang.Class<com.facebook.react.bridge.JSApplicationCausedNativeException>;
					public constructor(param0: string, param1: java.lang.Throwable);
					public constructor(param0: string);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class JSApplicationIllegalArgumentException extends com.facebook.react.bridge.JSApplicationCausedNativeException {
					public static class: java.lang.Class<com.facebook.react.bridge.JSApplicationIllegalArgumentException>;
					public constructor(param0: string, param1: java.lang.Throwable);
					public constructor(param0: string);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export abstract class JSBundleLoader {
					public static class: java.lang.Class<com.facebook.react.bridge.JSBundleLoader>;
					public static createFileLoader(param0: string, param1: string, param2: boolean): com.facebook.react.bridge.JSBundleLoader;
					public constructor();
					public static createFileLoader(param0: string): com.facebook.react.bridge.JSBundleLoader;
					public static createAssetLoader(param0: globalAndroid.content.Context, param1: string, param2: boolean): com.facebook.react.bridge.JSBundleLoader;
					public static createCachedBundleFromNetworkLoader(param0: string, param1: string): com.facebook.react.bridge.JSBundleLoader;
					public static createRemoteDebuggerBundleLoader(param0: string, param1: string): com.facebook.react.bridge.JSBundleLoader;
					public loadScript(param0: com.facebook.react.bridge.JSBundleLoaderDelegate): string;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class JSBundleLoaderDelegate {
					public static class: java.lang.Class<com.facebook.react.bridge.JSBundleLoaderDelegate>;
					/**
					 * Constructs a new instance of the com.facebook.react.bridge.JSBundleLoaderDelegate interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						loadScriptFromAssets(param0: globalAndroid.content.res.AssetManager, param1: string, param2: boolean): void;
						loadScriptFromFile(param0: string, param1: string, param2: boolean): void;
						setSourceURLs(param0: string, param1: string): void;
					});
					public constructor();
					public loadScriptFromFile(param0: string, param1: string, param2: boolean): void;
					public loadScriptFromAssets(param0: globalAndroid.content.res.AssetManager, param1: string, param2: boolean): void;
					public setSourceURLs(param0: string, param1: string): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class JSCJavaScriptExecutor extends com.facebook.react.bridge.JavaScriptExecutor {
					public static class: java.lang.Class<com.facebook.react.bridge.JSCJavaScriptExecutor>;
					public getName(): string;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class JSCJavaScriptExecutorFactory extends com.facebook.react.bridge.JavaScriptExecutorFactory {
					public static class: java.lang.Class<com.facebook.react.bridge.JSCJavaScriptExecutorFactory>;
					public constructor(param0: string, param1: string);
					public startSamplingProfiler(): void;
					public toString(): string;
					public create(): com.facebook.react.bridge.JavaScriptExecutor;
					public stopSamplingProfiler(param0: string): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class JSIModule {
					public static class: java.lang.Class<com.facebook.react.bridge.JSIModule>;
					/**
					 * Constructs a new instance of the com.facebook.react.bridge.JSIModule interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						initialize(): void;
						onCatalystInstanceDestroy(): void;
					});
					public constructor();
					public onCatalystInstanceDestroy(): void;
					public initialize(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class JSIModuleHolder {
					public static class: java.lang.Class<com.facebook.react.bridge.JSIModuleHolder>;
					public notifyJSInstanceDestroy(): void;
					public getJSIModule(): com.facebook.react.bridge.JSIModule;
					public constructor(param0: com.facebook.react.bridge.JSIModuleSpec<any>);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class JSIModulePackage {
					public static class: java.lang.Class<com.facebook.react.bridge.JSIModulePackage>;
					/**
					 * Constructs a new instance of the com.facebook.react.bridge.JSIModulePackage interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						getJSIModules(param0: com.facebook.react.bridge.ReactApplicationContext, param1: com.facebook.react.bridge.JavaScriptContextHolder): java.util.List<com.facebook.react.bridge.JSIModuleSpec<any>>;
					});
					public constructor();
					public getJSIModules(param0: com.facebook.react.bridge.ReactApplicationContext, param1: com.facebook.react.bridge.JavaScriptContextHolder): java.util.List<com.facebook.react.bridge.JSIModuleSpec<any>>;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class JSIModuleProvider<T>  extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.react.bridge.JSIModuleProvider<any>>;
					/**
					 * Constructs a new instance of the com.facebook.react.bridge.JSIModuleProvider<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						get(): T;
					});
					public constructor();
					public get(): T;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class JSIModuleRegistry {
					public static class: java.lang.Class<com.facebook.react.bridge.JSIModuleRegistry>;
					public notifyJSInstanceDestroy(): void;
					public constructor();
					public registerModules(param0: java.util.List<com.facebook.react.bridge.JSIModuleSpec<any>>): void;
					public getModule(param0: com.facebook.react.bridge.JSIModuleType): com.facebook.react.bridge.JSIModule;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class JSIModuleSpec<T>  extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.react.bridge.JSIModuleSpec<any>>;
					/**
					 * Constructs a new instance of the com.facebook.react.bridge.JSIModuleSpec<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						getJSIModuleType(): com.facebook.react.bridge.JSIModuleType;
						getJSIModuleProvider(): com.facebook.react.bridge.JSIModuleProvider<T>;
					});
					public constructor();
					public getJSIModuleType(): com.facebook.react.bridge.JSIModuleType;
					public getJSIModuleProvider(): com.facebook.react.bridge.JSIModuleProvider<T>;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class JSIModuleType {
					public static class: java.lang.Class<com.facebook.react.bridge.JSIModuleType>;
					public static TurboModuleManager: com.facebook.react.bridge.JSIModuleType;
					public static UIManager: com.facebook.react.bridge.JSIModuleType;
					public static valueOf(param0: string): com.facebook.react.bridge.JSIModuleType;
					public static values(): native.Array<com.facebook.react.bridge.JSIModuleType>;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class JSInstance {
					public static class: java.lang.Class<com.facebook.react.bridge.JSInstance>;
					/**
					 * Constructs a new instance of the com.facebook.react.bridge.JSInstance interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						invokeCallback(param0: number, param1: com.facebook.react.bridge.NativeArrayInterface): void;
					});
					public constructor();
					public invokeCallback(param0: number, param1: com.facebook.react.bridge.NativeArrayInterface): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class JavaJSExecutor {
					public static class: java.lang.Class<com.facebook.react.bridge.JavaJSExecutor>;
					/**
					 * Constructs a new instance of the com.facebook.react.bridge.JavaJSExecutor interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						close(): void;
						loadBundle(param0: string): void;
						executeJSCall(param0: string, param1: string): string;
						setGlobalVariable(param0: string, param1: string): void;
					});
					public constructor();
					public executeJSCall(param0: string, param1: string): string;
					public setGlobalVariable(param0: string, param1: string): void;
					public loadBundle(param0: string): void;
					public close(): void;
				}
				export module JavaJSExecutor {
					export class Factory {
						public static class: java.lang.Class<com.facebook.react.bridge.JavaJSExecutor.Factory>;
						/**
						 * Constructs a new instance of the com.facebook.react.bridge.JavaJSExecutor$Factory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							create(): com.facebook.react.bridge.JavaJSExecutor;
						});
						public constructor();
						public create(): com.facebook.react.bridge.JavaJSExecutor;
					}
					export class ProxyExecutorException {
						public static class: java.lang.Class<com.facebook.react.bridge.JavaJSExecutor.ProxyExecutorException>;
						public constructor(param0: java.lang.Throwable);
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class JavaMethodWrapper extends com.facebook.react.bridge.NativeModule.NativeMethod {
					public static class: java.lang.Class<com.facebook.react.bridge.JavaMethodWrapper>;
					public constructor(param0: com.facebook.react.bridge.JavaModuleWrapper, param1: java.lang.reflect.Method, param2: boolean);
					public getSignature(): string;
					public getMethod(): java.lang.reflect.Method;
					public getType(): string;
					public invoke(param0: com.facebook.react.bridge.JSInstance, param1: com.facebook.react.bridge.ReadableArray): void;
				}
				export module JavaMethodWrapper {
					export abstract class ArgumentExtractor<T>  extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.react.bridge.JavaMethodWrapper.ArgumentExtractor<any>>;
						public getJSArgumentsNeeded(): number;
						public extractArgument(param0: com.facebook.react.bridge.JSInstance, param1: com.facebook.react.bridge.ReadableArray, param2: number): T;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class JavaModuleWrapper {
					public static class: java.lang.Class<com.facebook.react.bridge.JavaModuleWrapper>;
					public getMethodDescriptors(): java.util.List<com.facebook.react.bridge.JavaModuleWrapper.MethodDescriptor>;
					public getName(): string;
					public invoke(param0: number, param1: com.facebook.react.bridge.ReadableNativeArray): void;
					public constructor(param0: com.facebook.react.bridge.JSInstance, param1: com.facebook.react.bridge.ModuleHolder);
					public getConstants(): com.facebook.react.bridge.NativeMap;
					public getModule(): com.facebook.react.bridge.BaseJavaModule;
				}
				export module JavaModuleWrapper {
					export class MethodDescriptor {
						public static class: java.lang.Class<com.facebook.react.bridge.JavaModuleWrapper.MethodDescriptor>;
						public constructor(param0: com.facebook.react.bridge.JavaModuleWrapper);
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class JavaOnlyArray implements com.facebook.react.bridge.ReadableArray, com.facebook.react.bridge.WritableArray {
					public static class: java.lang.Class<com.facebook.react.bridge.JavaOnlyArray>;
					public size(): number;
					public static from(param0: java.util.List): com.facebook.react.bridge.JavaOnlyArray;
					public pushNull(): void;
					public getDynamic(param0: number): com.facebook.react.bridge.Dynamic;
					public toString(): string;
					public pushArray(param0: com.facebook.react.bridge.ReadableArray): void;
					public static deepClone(param0: com.facebook.react.bridge.ReadableArray): com.facebook.react.bridge.JavaOnlyArray;
					public constructor();
					public pushString(param0: string): void;
					public static of(param0: native.Array<any>): com.facebook.react.bridge.JavaOnlyArray;
					public hashCode(): number;
					public isNull(param0: number): boolean;
					public getDouble(param0: number): number;
					public toArrayList(): java.util.ArrayList<any>;
					public getString(param0: number): string;
					public pushBoolean(param0: boolean): void;
					public getMap(param0: number): com.facebook.react.bridge.ReadableMap;
					public getType(param0: number): com.facebook.react.bridge.ReadableType;
					public equals(param0: any): boolean;
					public pushMap(param0: com.facebook.react.bridge.ReadableMap): void;
					public getInt(param0: number): number;
					public getBoolean(param0: number): boolean;
					public getArray(param0: number): com.facebook.react.bridge.ReadableArray;
					public pushDouble(param0: number): void;
					public pushInt(param0: number): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class JavaOnlyMap implements com.facebook.react.bridge.ReadableMap, com.facebook.react.bridge.WritableMap {
					public static class: java.lang.Class<com.facebook.react.bridge.JavaOnlyMap>;
					public getType(param0: string): com.facebook.react.bridge.ReadableType;
					public isNull(param0: string): boolean;
					public putDouble(param0: string, param1: number): void;
					public getBoolean(param0: string): boolean;
					public toString(): string;
					public putNull(param0: string): void;
					public constructor();
					public getDynamic(param0: string): com.facebook.react.bridge.Dynamic;
					public hashCode(): number;
					public putString(param0: string, param1: string): void;
					public getInt(param0: string): number;
					public copy(): com.facebook.react.bridge.WritableMap;
					public static deepClone(param0: com.facebook.react.bridge.ReadableMap): com.facebook.react.bridge.JavaOnlyMap;
					public getString(param0: string): string;
					public keySetIterator(): com.facebook.react.bridge.ReadableMapKeySetIterator;
					public putInt(param0: string, param1: number): void;
					public equals(param0: any): boolean;
					public putMap(param0: string, param1: com.facebook.react.bridge.ReadableMap): void;
					public hasKey(param0: string): boolean;
					public static of(param0: native.Array<any>): com.facebook.react.bridge.JavaOnlyMap;
					public getEntryIterator(): java.util.Iterator<java.util.Map.Entry<string,any>>;
					public putArray(param0: string, param1: com.facebook.react.bridge.ReadableArray): void;
					public toHashMap(): java.util.HashMap<string,any>;
					public getDouble(param0: string): number;
					public getMap(param0: string): com.facebook.react.bridge.ReadableMap;
					public putBoolean(param0: string, param1: boolean): void;
					public merge(param0: com.facebook.react.bridge.ReadableMap): void;
					public getArray(param0: string): com.facebook.react.bridge.ReadableArray;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class JavaScriptContextHolder {
					public static class: java.lang.Class<com.facebook.react.bridge.JavaScriptContextHolder>;
					public get(): number;
					public clear(): void;
					public constructor(param0: number);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export abstract class JavaScriptExecutor {
					public static class: java.lang.Class<com.facebook.react.bridge.JavaScriptExecutor>;
					public getName(): string;
					public constructor(param0: com.facebook.jni.HybridData);
					public close(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class JavaScriptExecutorFactory {
					public static class: java.lang.Class<com.facebook.react.bridge.JavaScriptExecutorFactory>;
					/**
					 * Constructs a new instance of the com.facebook.react.bridge.JavaScriptExecutorFactory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						create(): com.facebook.react.bridge.JavaScriptExecutor;
						startSamplingProfiler(): void;
						stopSamplingProfiler(param0: string): void;
					});
					public constructor();
					public startSamplingProfiler(): void;
					public create(): com.facebook.react.bridge.JavaScriptExecutor;
					public stopSamplingProfiler(param0: string): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class JavaScriptModule {
					public static class: java.lang.Class<com.facebook.react.bridge.JavaScriptModule>;
					/**
					 * Constructs a new instance of the com.facebook.react.bridge.JavaScriptModule interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
					});
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class JavaScriptModuleRegistry {
					public static class: java.lang.Class<com.facebook.react.bridge.JavaScriptModuleRegistry>;
					public static getJSModuleName(param0: java.lang.Class<any>): string;
					public constructor();
					public getJavaScriptModule(param0: com.facebook.react.bridge.CatalystInstance, param1: java.lang.Class): com.facebook.react.bridge.JavaScriptModule;
				}
				export module JavaScriptModuleRegistry {
					export class JavaScriptModuleInvocationHandler {
						public static class: java.lang.Class<com.facebook.react.bridge.JavaScriptModuleRegistry.JavaScriptModuleInvocationHandler>;
						public constructor(param0: com.facebook.react.bridge.CatalystInstance, param1: java.lang.Class<any>);
						public invoke(param0: any, param1: java.lang.reflect.Method, param2: native.Array<any>): any;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class JsonWriterHelper {
					public static class: java.lang.Class<com.facebook.react.bridge.JsonWriterHelper>;
					public static readableArrayValue(param0: globalAndroid.util.JsonWriter, param1: com.facebook.react.bridge.ReadableArray): void;
					public constructor();
					public static value(param0: globalAndroid.util.JsonWriter, param1: any): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class LifecycleEventListener {
					public static class: java.lang.Class<com.facebook.react.bridge.LifecycleEventListener>;
					/**
					 * Constructs a new instance of the com.facebook.react.bridge.LifecycleEventListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onHostResume(): void;
						onHostPause(): void;
						onHostDestroy(): void;
					});
					public constructor();
					public onHostResume(): void;
					public onHostDestroy(): void;
					public onHostPause(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class MemoryPressure {
					public static class: java.lang.Class<com.facebook.react.bridge.MemoryPressure>;
					public static UI_HIDDEN: com.facebook.react.bridge.MemoryPressure;
					public static MODERATE: com.facebook.react.bridge.MemoryPressure;
					public static CRITICAL: com.facebook.react.bridge.MemoryPressure;
					public static valueOf(param0: string): com.facebook.react.bridge.MemoryPressure;
					public static values(): native.Array<com.facebook.react.bridge.MemoryPressure>;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class MemoryPressureListener {
					public static class: java.lang.Class<com.facebook.react.bridge.MemoryPressureListener>;
					/**
					 * Constructs a new instance of the com.facebook.react.bridge.MemoryPressureListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						handleMemoryPressure(param0: number): void;
					});
					public constructor();
					public handleMemoryPressure(param0: number): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class ModuleHolder {
					public static class: java.lang.Class<com.facebook.react.bridge.ModuleHolder>;
					public getModule(): com.facebook.react.bridge.NativeModule;
					public constructor(param0: com.facebook.react.bridge.NativeModule);
					public destroy(): void;
					public getCanOverrideExistingModule(): boolean;
					public getClassName(): string;
					public constructor(param0: com.facebook.react.module.model.ReactModuleInfo, param1: javax.inject.Provider<any>);
					public getName(): string;
					public isTurboModule(): boolean;
					public isCxxModule(): boolean;
					public getHasConstants(): boolean;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class ModuleSpec {
					public static class: java.lang.Class<com.facebook.react.bridge.ModuleSpec>;
					public getProvider(): javax.inject.Provider<any>;
					public getName(): string;
					public static nativeModuleSpec(param0: java.lang.Class<any>, param1: javax.inject.Provider<any>): com.facebook.react.bridge.ModuleSpec;
					public getType(): java.lang.Class<any>;
					public static viewManagerSpec(param0: javax.inject.Provider<any>): com.facebook.react.bridge.ModuleSpec;
					public static nativeModuleSpec(param0: string, param1: javax.inject.Provider<any>): com.facebook.react.bridge.ModuleSpec;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class NativeArgumentsParseException extends com.facebook.react.bridge.JSApplicationCausedNativeException {
					public static class: java.lang.Class<com.facebook.react.bridge.NativeArgumentsParseException>;
					public constructor(param0: string, param1: java.lang.Throwable);
					public constructor(param0: string);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export abstract class NativeArray extends com.facebook.react.bridge.NativeArrayInterface {
					public static class: java.lang.Class<com.facebook.react.bridge.NativeArray>;
					public toString(): string;
					public constructor(param0: com.facebook.jni.HybridData);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class NativeArrayInterface {
					public static class: java.lang.Class<com.facebook.react.bridge.NativeArrayInterface>;
					/**
					 * Constructs a new instance of the com.facebook.react.bridge.NativeArrayInterface interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						toString(): string;
					});
					public constructor();
					public toString(): string;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export abstract class NativeMap {
					public static class: java.lang.Class<com.facebook.react.bridge.NativeMap>;
					public toString(): string;
					public constructor(param0: com.facebook.jni.HybridData);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class NativeModule {
					public static class: java.lang.Class<com.facebook.react.bridge.NativeModule>;
					/**
					 * Constructs a new instance of the com.facebook.react.bridge.NativeModule interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						getName(): string;
						initialize(): void;
						canOverrideExistingModule(): boolean;
						onCatalystInstanceDestroy(): void;
					});
					public constructor();
					public onCatalystInstanceDestroy(): void;
					public getName(): string;
					public canOverrideExistingModule(): boolean;
					public initialize(): void;
				}
				export module NativeModule {
					export class NativeMethod {
						public static class: java.lang.Class<com.facebook.react.bridge.NativeModule.NativeMethod>;
						/**
						 * Constructs a new instance of the com.facebook.react.bridge.NativeModule$NativeMethod interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							invoke(param0: com.facebook.react.bridge.JSInstance, param1: com.facebook.react.bridge.ReadableArray): void;
							getType(): string;
						});
						public constructor();
						public getType(): string;
						public invoke(param0: com.facebook.react.bridge.JSInstance, param1: com.facebook.react.bridge.ReadableArray): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class NativeModuleCallExceptionHandler {
					public static class: java.lang.Class<com.facebook.react.bridge.NativeModuleCallExceptionHandler>;
					/**
					 * Constructs a new instance of the com.facebook.react.bridge.NativeModuleCallExceptionHandler interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						handleException(param0: java.lang.Exception): void;
					});
					public constructor();
					public handleException(param0: java.lang.Exception): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class NativeModuleRegistry {
					public static class: java.lang.Class<com.facebook.react.bridge.NativeModuleRegistry>;
					public onBatchComplete(): void;
					public getModule(param0: string): com.facebook.react.bridge.NativeModule;
					public hasModule(param0: string): boolean;
					public constructor(param0: com.facebook.react.bridge.ReactApplicationContext, param1: java.util.Map<string,com.facebook.react.bridge.ModuleHolder>);
					public getModule(param0: java.lang.Class): com.facebook.react.bridge.NativeModule;
					public hasModule(param0: java.lang.Class): boolean;
					public getAllModules(): java.util.List<com.facebook.react.bridge.NativeModule>;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class NoSuchKeyException {
					public static class: java.lang.Class<com.facebook.react.bridge.NoSuchKeyException>;
					public constructor(param0: string);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class NotThreadSafeBridgeIdleDebugListener {
					public static class: java.lang.Class<com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener>;
					/**
					 * Constructs a new instance of the com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onTransitionToBridgeIdle(): void;
						onTransitionToBridgeBusy(): void;
						onBridgeDestroyed(): void;
					});
					public constructor();
					public onTransitionToBridgeIdle(): void;
					public onTransitionToBridgeBusy(): void;
					public onBridgeDestroyed(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class ObjectAlreadyConsumedException {
					public static class: java.lang.Class<com.facebook.react.bridge.ObjectAlreadyConsumedException>;
					public constructor(param0: string);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class OnBatchCompleteListener {
					public static class: java.lang.Class<com.facebook.react.bridge.OnBatchCompleteListener>;
					/**
					 * Constructs a new instance of the com.facebook.react.bridge.OnBatchCompleteListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onBatchComplete(): void;
					});
					public constructor();
					public onBatchComplete(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class PerformanceCounter {
					public static class: java.lang.Class<com.facebook.react.bridge.PerformanceCounter>;
					/**
					 * Constructs a new instance of the com.facebook.react.bridge.PerformanceCounter interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						profileNextBatch(): void;
						getPerformanceCounters(): java.util.Map<string,java.lang.Long>;
					});
					public constructor();
					public profileNextBatch(): void;
					public getPerformanceCounters(): java.util.Map<string,java.lang.Long>;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class Promise {
					public static class: java.lang.Class<com.facebook.react.bridge.Promise>;
					/**
					 * Constructs a new instance of the com.facebook.react.bridge.Promise interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						resolve(param0: any): void;
						reject(param0: string, param1: string): void;
						reject(param0: string, param1: java.lang.Throwable): void;
						reject(param0: string, param1: string, param2: java.lang.Throwable): void;
						reject(param0: java.lang.Throwable): void;
						reject(param0: java.lang.Throwable, param1: com.facebook.react.bridge.WritableMap): void;
						reject(param0: string, param1: com.facebook.react.bridge.WritableMap): void;
						reject(param0: string, param1: java.lang.Throwable, param2: com.facebook.react.bridge.WritableMap): void;
						reject(param0: string, param1: string, param2: com.facebook.react.bridge.WritableMap): void;
						reject(param0: string, param1: string, param2: java.lang.Throwable, param3: com.facebook.react.bridge.WritableMap): void;
						reject(param0: string): void;
					});
					public constructor();
					/** @deprecated */
					public reject(param0: string): void;
					public reject(param0: string, param1: string): void;
					public resolve(param0: any): void;
					public reject(param0: java.lang.Throwable): void;
					public reject(param0: string, param1: com.facebook.react.bridge.WritableMap): void;
					public reject(param0: string, param1: string, param2: com.facebook.react.bridge.WritableMap): void;
					public reject(param0: string, param1: java.lang.Throwable): void;
					public reject(param0: string, param1: string, param2: java.lang.Throwable): void;
					public reject(param0: string, param1: java.lang.Throwable, param2: com.facebook.react.bridge.WritableMap): void;
					public reject(param0: string, param1: string, param2: java.lang.Throwable, param3: com.facebook.react.bridge.WritableMap): void;
					public reject(param0: java.lang.Throwable, param1: com.facebook.react.bridge.WritableMap): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class PromiseImpl extends com.facebook.react.bridge.Promise {
					public static class: java.lang.Class<com.facebook.react.bridge.PromiseImpl>;
					public constructor(param0: com.facebook.react.bridge.Callback, param1: com.facebook.react.bridge.Callback);
					/** @deprecated */
					public reject(param0: string): void;
					public reject(param0: string, param1: string): void;
					public resolve(param0: any): void;
					public reject(param0: java.lang.Throwable): void;
					public reject(param0: string, param1: com.facebook.react.bridge.WritableMap): void;
					public reject(param0: string, param1: string, param2: com.facebook.react.bridge.WritableMap): void;
					public reject(param0: string, param1: java.lang.Throwable): void;
					public reject(param0: string, param1: string, param2: java.lang.Throwable): void;
					public reject(param0: string, param1: java.lang.Throwable, param2: com.facebook.react.bridge.WritableMap): void;
					public reject(param0: string, param1: string, param2: java.lang.Throwable, param3: com.facebook.react.bridge.WritableMap): void;
					public reject(param0: java.lang.Throwable, param1: com.facebook.react.bridge.WritableMap): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class ProxyJavaScriptExecutor extends com.facebook.react.bridge.JavaScriptExecutor {
					public static class: java.lang.Class<com.facebook.react.bridge.ProxyJavaScriptExecutor>;
					public constructor(param0: com.facebook.react.bridge.JavaJSExecutor);
					public getName(): string;
					public constructor(param0: com.facebook.jni.HybridData);
					public close(): void;
				}
				export module ProxyJavaScriptExecutor {
					export class Factory extends com.facebook.react.bridge.JavaScriptExecutorFactory {
						public static class: java.lang.Class<com.facebook.react.bridge.ProxyJavaScriptExecutor.Factory>;
						public constructor(param0: com.facebook.react.bridge.JavaJSExecutor.Factory);
						public startSamplingProfiler(): void;
						public stopSamplingProfiler(param0: string): void;
						public create(): com.facebook.react.bridge.JavaScriptExecutor;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class ReactApplicationContext extends com.facebook.react.bridge.ReactContext {
					public static class: java.lang.Class<com.facebook.react.bridge.ReactApplicationContext>;
					public constructor(param0: globalAndroid.content.Context);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class ReactBridge {
					public static class: java.lang.Class<com.facebook.react.bridge.ReactBridge>;
					public static getLoadStartTime(): number;
					public constructor();
					public static isInitialized(): boolean;
					public static getLoadEndTime(): number;
					public static staticInit(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class ReactCallback {
					public static class: java.lang.Class<com.facebook.react.bridge.ReactCallback>;
					/**
					 * Constructs a new instance of the com.facebook.react.bridge.ReactCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onBatchComplete(): void;
						incrementPendingJSCalls(): void;
						decrementPendingJSCalls(): void;
					});
					public constructor();
					public onBatchComplete(): void;
					public decrementPendingJSCalls(): void;
					public incrementPendingJSCalls(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class ReactContext {
					public static class: java.lang.Class<com.facebook.react.bridge.ReactContext>;
					public initializeWithInstance(param0: com.facebook.react.bridge.CatalystInstance): void;
					public assertOnNativeModulesQueueThread(param0: string): void;
					public getCatalystInstance(): com.facebook.react.bridge.CatalystInstance;
					public isOnJSQueueThread(): boolean;
					public hasCurrentActivity(): boolean;
					public onWindowFocusChange(param0: boolean): void;
					public isOnUiQueueThread(): boolean;
					public getJSIModule(param0: com.facebook.react.bridge.JSIModuleType): com.facebook.react.bridge.JSIModule;
					public setNativeModuleCallExceptionHandler(param0: com.facebook.react.bridge.NativeModuleCallExceptionHandler): void;
					public runOnUiQueueThread(param0: java.lang.Runnable): void;
					public getSourceURL(): string;
					public onHostDestroy(): void;
					public assertOnJSQueueThread(): void;
					public initializeMessageQueueThreads(param0: com.facebook.react.bridge.queue.ReactQueueConfiguration): void;
					public hasNativeModule(param0: java.lang.Class): boolean;
					/** @deprecated */
					public isBridgeless(): boolean;
					public onHostPause(): void;
					public hasCatalystInstance(): boolean;
					public getJavaScriptContextHolder(): com.facebook.react.bridge.JavaScriptContextHolder;
					public destroy(): void;
					public removeActivityEventListener(param0: com.facebook.react.bridge.ActivityEventListener): void;
					public isOnNativeModulesQueueThread(): boolean;
					public getLifecycleState(): com.facebook.react.common.LifecycleState;
					public onActivityResult(param0: globalAndroid.app.Activity, param1: number, param2: number, param3: globalAndroid.content.Intent): void;
					public startActivityForResult(param0: globalAndroid.content.Intent, param1: number, param2: globalAndroid.os.Bundle): boolean;
					public onHostResume(param0: globalAndroid.app.Activity): void;
					public assertOnUiQueueThread(): void;
					public getCurrentActivity(): globalAndroid.app.Activity;
					public getNativeModule(param0: java.lang.Class): com.facebook.react.bridge.NativeModule;
					public getJSModule(param0: java.lang.Class): com.facebook.react.bridge.JavaScriptModule;
					public removeLifecycleEventListener(param0: com.facebook.react.bridge.LifecycleEventListener): void;
					public addLifecycleEventListener(param0: com.facebook.react.bridge.LifecycleEventListener): void;
					public addActivityEventListener(param0: com.facebook.react.bridge.ActivityEventListener): void;
					public getSystemService(param0: string): any;
					public resetPerfStats(): void;
					public assertOnNativeModulesQueueThread(): void;
					public constructor(param0: globalAndroid.content.Context);
					public handleException(param0: java.lang.Exception): void;
					public addWindowFocusChangeListener(param0: com.facebook.react.bridge.WindowFocusChangeListener): void;
					public runOnJSQueueThread(param0: java.lang.Runnable): void;
					public runOnNativeModulesQueueThread(param0: java.lang.Runnable): void;
					public onNewIntent(param0: globalAndroid.app.Activity, param1: globalAndroid.content.Intent): void;
					public getExceptionHandler(): com.facebook.react.bridge.NativeModuleCallExceptionHandler;
					public removeWindowFocusChangeListener(param0: com.facebook.react.bridge.WindowFocusChangeListener): void;
					public hasActiveCatalystInstance(): boolean;
				}
				export module ReactContext {
					export class ExceptionHandlerWrapper extends com.facebook.react.bridge.NativeModuleCallExceptionHandler {
						public static class: java.lang.Class<com.facebook.react.bridge.ReactContext.ExceptionHandlerWrapper>;
						public handleException(param0: java.lang.Exception): void;
						public constructor(param0: com.facebook.react.bridge.ReactContext);
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export abstract class ReactContextBaseJavaModule extends com.facebook.react.bridge.BaseJavaModule {
					public static class: java.lang.Class<com.facebook.react.bridge.ReactContextBaseJavaModule>;
					public getCurrentActivity(): globalAndroid.app.Activity;
					public getReactApplicationContext(): com.facebook.react.bridge.ReactApplicationContext;
					public onCatalystInstanceDestroy(): void;
					public constructor();
					public getName(): string;
					public canOverrideExistingModule(): boolean;
					public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
					public getReactApplicationContextIfActiveOrWarn(): com.facebook.react.bridge.ReactApplicationContext;
					public initialize(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class ReactMarker {
					public static class: java.lang.Class<com.facebook.react.bridge.ReactMarker>;
					public static removeFabricListener(param0: com.facebook.react.bridge.ReactMarker.FabricMarkerListener): void;
					public static logMarker(param0: com.facebook.react.bridge.ReactMarkerConstants): void;
					public static logMarker(param0: com.facebook.react.bridge.ReactMarkerConstants, param1: number): void;
					public static addListener(param0: com.facebook.react.bridge.ReactMarker.MarkerListener): void;
					public static logFabricMarker(param0: com.facebook.react.bridge.ReactMarkerConstants, param1: string, param2: number): void;
					public static logMarker(param0: com.facebook.react.bridge.ReactMarkerConstants, param1: string, param2: number): void;
					public static logMarker(param0: string, param1: number): void;
					public static logMarker(param0: string): void;
					public static clearMarkerListeners(): void;
					public static clearFabricMarkerListeners(): void;
					public static logMarker(param0: string, param1: string, param2: number): void;
					public static logMarker(param0: string, param1: string): void;
					public static logFabricMarker(param0: com.facebook.react.bridge.ReactMarkerConstants, param1: string, param2: number, param3: number): void;
					public constructor();
					public static removeListener(param0: com.facebook.react.bridge.ReactMarker.MarkerListener): void;
					public static addFabricListener(param0: com.facebook.react.bridge.ReactMarker.FabricMarkerListener): void;
					public static logMarker(param0: com.facebook.react.bridge.ReactMarkerConstants, param1: string): void;
				}
				export module ReactMarker {
					export class FabricMarkerListener {
						public static class: java.lang.Class<com.facebook.react.bridge.ReactMarker.FabricMarkerListener>;
						/**
						 * Constructs a new instance of the com.facebook.react.bridge.ReactMarker$FabricMarkerListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							logFabricMarker(param0: com.facebook.react.bridge.ReactMarkerConstants, param1: string, param2: number, param3: number): void;
						});
						public constructor();
						public logFabricMarker(param0: com.facebook.react.bridge.ReactMarkerConstants, param1: string, param2: number, param3: number): void;
					}
					export class MarkerListener {
						public static class: java.lang.Class<com.facebook.react.bridge.ReactMarker.MarkerListener>;
						/**
						 * Constructs a new instance of the com.facebook.react.bridge.ReactMarker$MarkerListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							logMarker(param0: com.facebook.react.bridge.ReactMarkerConstants, param1: string, param2: number): void;
						});
						public constructor();
						public logMarker(param0: com.facebook.react.bridge.ReactMarkerConstants, param1: string, param2: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class ReactMarkerConstants {
					public static class: java.lang.Class<com.facebook.react.bridge.ReactMarkerConstants>;
					public static CREATE_REACT_CONTEXT_START: com.facebook.react.bridge.ReactMarkerConstants;
					public static CREATE_REACT_CONTEXT_END: com.facebook.react.bridge.ReactMarkerConstants;
					public static PROCESS_PACKAGES_START: com.facebook.react.bridge.ReactMarkerConstants;
					public static PROCESS_PACKAGES_END: com.facebook.react.bridge.ReactMarkerConstants;
					public static BUILD_NATIVE_MODULE_REGISTRY_START: com.facebook.react.bridge.ReactMarkerConstants;
					public static BUILD_NATIVE_MODULE_REGISTRY_END: com.facebook.react.bridge.ReactMarkerConstants;
					public static CREATE_CATALYST_INSTANCE_START: com.facebook.react.bridge.ReactMarkerConstants;
					public static CREATE_CATALYST_INSTANCE_END: com.facebook.react.bridge.ReactMarkerConstants;
					public static DESTROY_CATALYST_INSTANCE_START: com.facebook.react.bridge.ReactMarkerConstants;
					public static DESTROY_CATALYST_INSTANCE_END: com.facebook.react.bridge.ReactMarkerConstants;
					public static RUN_JS_BUNDLE_START: com.facebook.react.bridge.ReactMarkerConstants;
					public static RUN_JS_BUNDLE_END: com.facebook.react.bridge.ReactMarkerConstants;
					public static NATIVE_MODULE_INITIALIZE_START: com.facebook.react.bridge.ReactMarkerConstants;
					public static NATIVE_MODULE_INITIALIZE_END: com.facebook.react.bridge.ReactMarkerConstants;
					public static SETUP_REACT_CONTEXT_START: com.facebook.react.bridge.ReactMarkerConstants;
					public static SETUP_REACT_CONTEXT_END: com.facebook.react.bridge.ReactMarkerConstants;
					public static CHANGE_THREAD_PRIORITY: com.facebook.react.bridge.ReactMarkerConstants;
					public static CREATE_UI_MANAGER_MODULE_START: com.facebook.react.bridge.ReactMarkerConstants;
					public static CREATE_UI_MANAGER_MODULE_END: com.facebook.react.bridge.ReactMarkerConstants;
					public static CREATE_VIEW_MANAGERS_START: com.facebook.react.bridge.ReactMarkerConstants;
					public static CREATE_VIEW_MANAGERS_END: com.facebook.react.bridge.ReactMarkerConstants;
					public static CREATE_UI_MANAGER_MODULE_CONSTANTS_START: com.facebook.react.bridge.ReactMarkerConstants;
					public static CREATE_UI_MANAGER_MODULE_CONSTANTS_END: com.facebook.react.bridge.ReactMarkerConstants;
					public static NATIVE_MODULE_SETUP_START: com.facebook.react.bridge.ReactMarkerConstants;
					public static NATIVE_MODULE_SETUP_END: com.facebook.react.bridge.ReactMarkerConstants;
					public static CREATE_MODULE_START: com.facebook.react.bridge.ReactMarkerConstants;
					public static CREATE_MODULE_END: com.facebook.react.bridge.ReactMarkerConstants;
					public static PROCESS_CORE_REACT_PACKAGE_START: com.facebook.react.bridge.ReactMarkerConstants;
					public static PROCESS_CORE_REACT_PACKAGE_END: com.facebook.react.bridge.ReactMarkerConstants;
					public static CREATE_I18N_MODULE_CONSTANTS_START: com.facebook.react.bridge.ReactMarkerConstants;
					public static CREATE_I18N_MODULE_CONSTANTS_END: com.facebook.react.bridge.ReactMarkerConstants;
					public static I18N_MODULE_CONSTANTS_CONVERT_START: com.facebook.react.bridge.ReactMarkerConstants;
					public static I18N_MODULE_CONSTANTS_CONVERT_END: com.facebook.react.bridge.ReactMarkerConstants;
					public static CREATE_I18N_ASSETS_MODULE_START: com.facebook.react.bridge.ReactMarkerConstants;
					public static CREATE_I18N_ASSETS_MODULE_END: com.facebook.react.bridge.ReactMarkerConstants;
					public static GET_CONSTANTS_START: com.facebook.react.bridge.ReactMarkerConstants;
					public static GET_CONSTANTS_END: com.facebook.react.bridge.ReactMarkerConstants;
					public static INITIALIZE_MODULE_START: com.facebook.react.bridge.ReactMarkerConstants;
					public static INITIALIZE_MODULE_END: com.facebook.react.bridge.ReactMarkerConstants;
					public static ON_HOST_RESUME_START: com.facebook.react.bridge.ReactMarkerConstants;
					public static ON_HOST_RESUME_END: com.facebook.react.bridge.ReactMarkerConstants;
					public static ON_HOST_PAUSE_START: com.facebook.react.bridge.ReactMarkerConstants;
					public static ON_HOST_PAUSE_END: com.facebook.react.bridge.ReactMarkerConstants;
					public static CONVERT_CONSTANTS_START: com.facebook.react.bridge.ReactMarkerConstants;
					public static CONVERT_CONSTANTS_END: com.facebook.react.bridge.ReactMarkerConstants;
					public static PRE_REACT_CONTEXT_END: com.facebook.react.bridge.ReactMarkerConstants;
					public static UNPACKING_JS_BUNDLE_LOADER_CHECK_START: com.facebook.react.bridge.ReactMarkerConstants;
					public static UNPACKING_JS_BUNDLE_LOADER_CHECK_END: com.facebook.react.bridge.ReactMarkerConstants;
					public static UNPACKING_JS_BUNDLE_LOADER_EXTRACTED: com.facebook.react.bridge.ReactMarkerConstants;
					public static UNPACKING_JS_BUNDLE_LOADER_BLOCKED: com.facebook.react.bridge.ReactMarkerConstants;
					public static loadApplicationScript_startStringConvert: com.facebook.react.bridge.ReactMarkerConstants;
					public static loadApplicationScript_endStringConvert: com.facebook.react.bridge.ReactMarkerConstants;
					public static PRE_SETUP_REACT_CONTEXT_START: com.facebook.react.bridge.ReactMarkerConstants;
					public static PRE_SETUP_REACT_CONTEXT_END: com.facebook.react.bridge.ReactMarkerConstants;
					public static PRE_RUN_JS_BUNDLE_START: com.facebook.react.bridge.ReactMarkerConstants;
					public static ATTACH_MEASURED_ROOT_VIEWS_START: com.facebook.react.bridge.ReactMarkerConstants;
					public static ATTACH_MEASURED_ROOT_VIEWS_END: com.facebook.react.bridge.ReactMarkerConstants;
					public static CONTENT_APPEARED: com.facebook.react.bridge.ReactMarkerConstants;
					public static RELOAD: com.facebook.react.bridge.ReactMarkerConstants;
					public static DOWNLOAD_START: com.facebook.react.bridge.ReactMarkerConstants;
					public static DOWNLOAD_END: com.facebook.react.bridge.ReactMarkerConstants;
					public static REACT_CONTEXT_THREAD_START: com.facebook.react.bridge.ReactMarkerConstants;
					public static REACT_CONTEXT_THREAD_END: com.facebook.react.bridge.ReactMarkerConstants;
					public static GET_REACT_INSTANCE_MANAGER_START: com.facebook.react.bridge.ReactMarkerConstants;
					public static GET_REACT_INSTANCE_MANAGER_END: com.facebook.react.bridge.ReactMarkerConstants;
					public static GET_REACT_INSTANCE_HOLDER_SPEC_START: com.facebook.react.bridge.ReactMarkerConstants;
					public static GET_REACT_INSTANCE_HOLDER_SPEC_END: com.facebook.react.bridge.ReactMarkerConstants;
					public static BUILD_REACT_INSTANCE_MANAGER_START: com.facebook.react.bridge.ReactMarkerConstants;
					public static BUILD_REACT_INSTANCE_MANAGER_END: com.facebook.react.bridge.ReactMarkerConstants;
					public static PROCESS_INFRA_PACKAGE_START: com.facebook.react.bridge.ReactMarkerConstants;
					public static PROCESS_INFRA_PACKAGE_END: com.facebook.react.bridge.ReactMarkerConstants;
					public static PROCESS_PRODUCT_PACKAGE_START: com.facebook.react.bridge.ReactMarkerConstants;
					public static PROCESS_PRODUCT_PACKAGE_END: com.facebook.react.bridge.ReactMarkerConstants;
					public static CREATE_MC_MODULE_START: com.facebook.react.bridge.ReactMarkerConstants;
					public static CREATE_MC_MODULE_END: com.facebook.react.bridge.ReactMarkerConstants;
					public static CREATE_MC_MODULE_GET_METADATA_START: com.facebook.react.bridge.ReactMarkerConstants;
					public static CREATE_MC_MODULE_GET_METADATA_END: com.facebook.react.bridge.ReactMarkerConstants;
					public static REGISTER_JS_SEGMENT_START: com.facebook.react.bridge.ReactMarkerConstants;
					public static REGISTER_JS_SEGMENT_STOP: com.facebook.react.bridge.ReactMarkerConstants;
					public static VM_INIT: com.facebook.react.bridge.ReactMarkerConstants;
					public static ON_FRAGMENT_CREATE: com.facebook.react.bridge.ReactMarkerConstants;
					public static JAVASCRIPT_EXECUTOR_FACTORY_INJECT_START: com.facebook.react.bridge.ReactMarkerConstants;
					public static JAVASCRIPT_EXECUTOR_FACTORY_INJECT_END: com.facebook.react.bridge.ReactMarkerConstants;
					public static LOAD_REACT_NATIVE_SO_FILE_START: com.facebook.react.bridge.ReactMarkerConstants;
					public static LOAD_REACT_NATIVE_SO_FILE_END: com.facebook.react.bridge.ReactMarkerConstants;
					public static LOAD_REACT_NATIVE_FABRIC_SO_FILE_START: com.facebook.react.bridge.ReactMarkerConstants;
					public static LOAD_REACT_NATIVE_FABRIC_SO_FILE_END: com.facebook.react.bridge.ReactMarkerConstants;
					public static FABRIC_COMMIT_START: com.facebook.react.bridge.ReactMarkerConstants;
					public static FABRIC_COMMIT_END: com.facebook.react.bridge.ReactMarkerConstants;
					public static FABRIC_FINISH_TRANSACTION_START: com.facebook.react.bridge.ReactMarkerConstants;
					public static FABRIC_FINISH_TRANSACTION_END: com.facebook.react.bridge.ReactMarkerConstants;
					public static FABRIC_DIFF_START: com.facebook.react.bridge.ReactMarkerConstants;
					public static FABRIC_DIFF_END: com.facebook.react.bridge.ReactMarkerConstants;
					public static FABRIC_LAYOUT_START: com.facebook.react.bridge.ReactMarkerConstants;
					public static FABRIC_LAYOUT_END: com.facebook.react.bridge.ReactMarkerConstants;
					public static FABRIC_BATCH_EXECUTION_START: com.facebook.react.bridge.ReactMarkerConstants;
					public static FABRIC_BATCH_EXECUTION_END: com.facebook.react.bridge.ReactMarkerConstants;
					public static FABRIC_UPDATE_UI_MAIN_THREAD_START: com.facebook.react.bridge.ReactMarkerConstants;
					public static FABRIC_UPDATE_UI_MAIN_THREAD_END: com.facebook.react.bridge.ReactMarkerConstants;
					public static valueOf(param0: string): com.facebook.react.bridge.ReactMarkerConstants;
					public static values(): native.Array<com.facebook.react.bridge.ReactMarkerConstants>;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class ReactMethod {
					public static class: java.lang.Class<com.facebook.react.bridge.ReactMethod>;
					/**
					 * Constructs a new instance of the com.facebook.react.bridge.ReactMethod interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						isBlockingSynchronousMethod(): boolean;
					});
					public constructor();
					public isBlockingSynchronousMethod(): boolean;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class ReactModuleWithSpec {
					public static class: java.lang.Class<com.facebook.react.bridge.ReactModuleWithSpec>;
					/**
					 * Constructs a new instance of the com.facebook.react.bridge.ReactModuleWithSpec interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
					});
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class ReactNoCrashSoftException {
					public static class: java.lang.Class<com.facebook.react.bridge.ReactNoCrashSoftException>;
					public constructor(param0: string, param1: java.lang.Throwable);
					public constructor(param0: string);
					public constructor(param0: java.lang.Throwable);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class ReactSoftException {
					public static class: java.lang.Class<com.facebook.react.bridge.ReactSoftException>;
					public constructor();
					public static removeListener(param0: com.facebook.react.bridge.ReactSoftException.ReactSoftExceptionListener): void;
					public static addListener(param0: com.facebook.react.bridge.ReactSoftException.ReactSoftExceptionListener): void;
					public static logSoftException(param0: string, param1: java.lang.Throwable): void;
					public static clearListeners(): void;
				}
				export module ReactSoftException {
					export class ReactSoftExceptionListener {
						public static class: java.lang.Class<com.facebook.react.bridge.ReactSoftException.ReactSoftExceptionListener>;
						/**
						 * Constructs a new instance of the com.facebook.react.bridge.ReactSoftException$ReactSoftExceptionListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							logSoftException(param0: string, param1: java.lang.Throwable): void;
						});
						public constructor();
						public logSoftException(param0: string, param1: java.lang.Throwable): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class ReadableArray {
					public static class: java.lang.Class<com.facebook.react.bridge.ReadableArray>;
					/**
					 * Constructs a new instance of the com.facebook.react.bridge.ReadableArray interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						size(): number;
						isNull(param0: number): boolean;
						getBoolean(param0: number): boolean;
						getDouble(param0: number): number;
						getInt(param0: number): number;
						getString(param0: number): string;
						getArray(param0: number): com.facebook.react.bridge.ReadableArray;
						getMap(param0: number): com.facebook.react.bridge.ReadableMap;
						getDynamic(param0: number): com.facebook.react.bridge.Dynamic;
						getType(param0: number): com.facebook.react.bridge.ReadableType;
						toArrayList(): java.util.ArrayList<any>;
					});
					public constructor();
					public getDynamic(param0: number): com.facebook.react.bridge.Dynamic;
					public getInt(param0: number): number;
					public isNull(param0: number): boolean;
					public getDouble(param0: number): number;
					public getBoolean(param0: number): boolean;
					public toArrayList(): java.util.ArrayList<any>;
					public getArray(param0: number): com.facebook.react.bridge.ReadableArray;
					public getString(param0: number): string;
					public size(): number;
					public getMap(param0: number): com.facebook.react.bridge.ReadableMap;
					public getType(param0: number): com.facebook.react.bridge.ReadableType;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class ReadableMap {
					public static class: java.lang.Class<com.facebook.react.bridge.ReadableMap>;
					/**
					 * Constructs a new instance of the com.facebook.react.bridge.ReadableMap interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						hasKey(param0: string): boolean;
						isNull(param0: string): boolean;
						getBoolean(param0: string): boolean;
						getDouble(param0: string): number;
						getInt(param0: string): number;
						getString(param0: string): string;
						getArray(param0: string): com.facebook.react.bridge.ReadableArray;
						getMap(param0: string): com.facebook.react.bridge.ReadableMap;
						getDynamic(param0: string): com.facebook.react.bridge.Dynamic;
						getType(param0: string): com.facebook.react.bridge.ReadableType;
						getEntryIterator(): java.util.Iterator<java.util.Map.Entry<string,any>>;
						keySetIterator(): com.facebook.react.bridge.ReadableMapKeySetIterator;
						toHashMap(): java.util.HashMap<string,any>;
					});
					public constructor();
					public getType(param0: string): com.facebook.react.bridge.ReadableType;
					public getInt(param0: string): number;
					public isNull(param0: string): boolean;
					public getString(param0: string): string;
					public keySetIterator(): com.facebook.react.bridge.ReadableMapKeySetIterator;
					public getBoolean(param0: string): boolean;
					public hasKey(param0: string): boolean;
					public getEntryIterator(): java.util.Iterator<java.util.Map.Entry<string,any>>;
					public getDynamic(param0: string): com.facebook.react.bridge.Dynamic;
					public toHashMap(): java.util.HashMap<string,any>;
					public getDouble(param0: string): number;
					public getMap(param0: string): com.facebook.react.bridge.ReadableMap;
					public getArray(param0: string): com.facebook.react.bridge.ReadableArray;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class ReadableMapKeySetIterator {
					public static class: java.lang.Class<com.facebook.react.bridge.ReadableMapKeySetIterator>;
					/**
					 * Constructs a new instance of the com.facebook.react.bridge.ReadableMapKeySetIterator interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						hasNextKey(): boolean;
						nextKey(): string;
					});
					public constructor();
					public nextKey(): string;
					public hasNextKey(): boolean;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class ReadableNativeArray extends com.facebook.react.bridge.NativeArray implements com.facebook.react.bridge.ReadableArray {
					public static class: java.lang.Class<com.facebook.react.bridge.ReadableNativeArray>;
					public isNull(param0: number): boolean;
					public constructor(param0: com.facebook.jni.HybridData);
					public getDouble(param0: number): number;
					public toArrayList(): java.util.ArrayList<any>;
					public getString(param0: number): string;
					public size(): number;
					public getMap(param0: number): com.facebook.react.bridge.ReadableMap;
					public getType(param0: number): com.facebook.react.bridge.ReadableType;
					public getDynamic(param0: number): com.facebook.react.bridge.Dynamic;
					public equals(param0: any): boolean;
					public getInt(param0: number): number;
					public toString(): string;
					public static getJNIPassCounter(): number;
					public getBoolean(param0: number): boolean;
					public getArray(param0: number): com.facebook.react.bridge.ReadableArray;
					public getArray(param0: number): com.facebook.react.bridge.ReadableNativeArray;
					public hashCode(): number;
					public getMap(param0: number): com.facebook.react.bridge.ReadableNativeMap;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class ReadableNativeMap extends com.facebook.react.bridge.NativeMap implements com.facebook.react.bridge.ReadableMap {
					public static class: java.lang.Class<com.facebook.react.bridge.ReadableNativeMap>;
					public getType(param0: string): com.facebook.react.bridge.ReadableType;
					public constructor(param0: com.facebook.jni.HybridData);
					public getInt(param0: string): number;
					public isNull(param0: string): boolean;
					public getString(param0: string): string;
					public keySetIterator(): com.facebook.react.bridge.ReadableMapKeySetIterator;
					public equals(param0: any): boolean;
					public getBoolean(param0: string): boolean;
					public hasKey(param0: string): boolean;
					public getEntryIterator(): java.util.Iterator<java.util.Map.Entry<string,any>>;
					public static getJNIPassCounter(): number;
					public getDynamic(param0: string): com.facebook.react.bridge.Dynamic;
					public toHashMap(): java.util.HashMap<string,any>;
					public getDouble(param0: string): number;
					public getMap(param0: string): com.facebook.react.bridge.ReadableMap;
					public hashCode(): number;
					public getArray(param0: string): com.facebook.react.bridge.ReadableArray;
					public getMap(param0: string): com.facebook.react.bridge.ReadableNativeMap;
				}
				export module ReadableNativeMap {
					export class ReadableNativeMapKeySetIterator extends com.facebook.react.bridge.ReadableMapKeySetIterator {
						public static class: java.lang.Class<com.facebook.react.bridge.ReadableNativeMap.ReadableNativeMapKeySetIterator>;
						public constructor(param0: com.facebook.react.bridge.ReadableNativeMap);
						public nextKey(): string;
						public hasNextKey(): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class ReadableType {
					public static class: java.lang.Class<com.facebook.react.bridge.ReadableType>;
					public static Null: com.facebook.react.bridge.ReadableType;
					public static Boolean: com.facebook.react.bridge.ReadableType;
					public static Number: com.facebook.react.bridge.ReadableType;
					public static String: com.facebook.react.bridge.ReadableType;
					public static Map: com.facebook.react.bridge.ReadableType;
					public static Array: com.facebook.react.bridge.ReadableType;
					public static values(): native.Array<com.facebook.react.bridge.ReadableType>;
					public static valueOf(param0: string): com.facebook.react.bridge.ReadableType;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class RetryableMountingLayerException {
					public static class: java.lang.Class<com.facebook.react.bridge.RetryableMountingLayerException>;
					public constructor(param0: string, param1: java.lang.Throwable);
					public constructor(param0: java.lang.Throwable);
					public constructor(param0: string);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class SoftAssertions {
					public static class: java.lang.Class<com.facebook.react.bridge.SoftAssertions>;
					public constructor();
					public static assertUnreachable(param0: string): void;
					public static assertNotNull(param0: any): any;
					public static assertCondition(param0: boolean, param1: string): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class Systrace extends com.facebook.react.bridge.JavaScriptModule {
					public static class: java.lang.Class<com.facebook.react.bridge.Systrace>;
					/**
					 * Constructs a new instance of the com.facebook.react.bridge.Systrace interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						setEnabled(param0: boolean): void;
					});
					public constructor();
					public setEnabled(param0: boolean): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class UIManager implements com.facebook.react.bridge.JSIModule, com.facebook.react.bridge.PerformanceCounter {
					public static class: java.lang.Class<com.facebook.react.bridge.UIManager>;
					/**
					 * Constructs a new instance of the com.facebook.react.bridge.UIManager interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						addRootView(param0: globalAndroid.view.View, param1: com.facebook.react.bridge.WritableMap, param2: string): number;
						updateRootLayoutSpecs(param0: number, param1: number, param2: number): void;
						dispatchCommand(param0: number, param1: number, param2: com.facebook.react.bridge.ReadableArray): void;
						dispatchCommand(param0: number, param1: string, param2: com.facebook.react.bridge.ReadableArray): void;
						getEventDispatcher(): any;
						synchronouslyUpdateViewOnUIThread(param0: number, param1: com.facebook.react.bridge.ReadableMap): void;
						sendAccessibilityEvent(param0: number, param1: number): void;
						initialize(): void;
						onCatalystInstanceDestroy(): void;
						profileNextBatch(): void;
						getPerformanceCounters(): java.util.Map<string,java.lang.Long>;
					});
					public constructor();
					public dispatchCommand(param0: number, param1: string, param2: com.facebook.react.bridge.ReadableArray): void;
					public addRootView(param0: globalAndroid.view.View, param1: com.facebook.react.bridge.WritableMap, param2: string): number;
					public onCatalystInstanceDestroy(): void;
					public updateRootLayoutSpecs(param0: number, param1: number, param2: number): void;
					public profileNextBatch(): void;
					public synchronouslyUpdateViewOnUIThread(param0: number, param1: com.facebook.react.bridge.ReadableMap): void;
					public getPerformanceCounters(): java.util.Map<string,java.lang.Long>;
					public sendAccessibilityEvent(param0: number, param1: number): void;
					public getEventDispatcher(): any;
					public initialize(): void;
					public dispatchCommand(param0: number, param1: number, param2: com.facebook.react.bridge.ReadableArray): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class UiThreadUtil {
					public static class: java.lang.Class<com.facebook.react.bridge.UiThreadUtil>;
					public static runOnUiThread(param0: java.lang.Runnable, param1: number): void;
					public constructor();
					public static assertNotOnUiThread(): void;
					public static assertOnUiThread(): void;
					public static runOnUiThread(param0: java.lang.Runnable): void;
					public static isOnUiThread(): boolean;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class UnexpectedNativeTypeException {
					public static class: java.lang.Class<com.facebook.react.bridge.UnexpectedNativeTypeException>;
					public constructor(param0: string);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class WindowFocusChangeListener {
					public static class: java.lang.Class<com.facebook.react.bridge.WindowFocusChangeListener>;
					/**
					 * Constructs a new instance of the com.facebook.react.bridge.WindowFocusChangeListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onWindowFocusChange(param0: boolean): void;
					});
					public constructor();
					public onWindowFocusChange(param0: boolean): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class WritableArray extends com.facebook.react.bridge.ReadableArray {
					public static class: java.lang.Class<com.facebook.react.bridge.WritableArray>;
					/**
					 * Constructs a new instance of the com.facebook.react.bridge.WritableArray interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						pushNull(): void;
						pushBoolean(param0: boolean): void;
						pushDouble(param0: number): void;
						pushInt(param0: number): void;
						pushString(param0: string): void;
						pushArray(param0: com.facebook.react.bridge.ReadableArray): void;
						pushMap(param0: com.facebook.react.bridge.ReadableMap): void;
						size(): number;
						isNull(param0: number): boolean;
						getBoolean(param0: number): boolean;
						getDouble(param0: number): number;
						getInt(param0: number): number;
						getString(param0: number): string;
						getArray(param0: number): com.facebook.react.bridge.ReadableArray;
						getMap(param0: number): com.facebook.react.bridge.ReadableMap;
						getDynamic(param0: number): com.facebook.react.bridge.Dynamic;
						getType(param0: number): com.facebook.react.bridge.ReadableType;
						toArrayList(): java.util.ArrayList<any>;
					});
					public constructor();
					public isNull(param0: number): boolean;
					public getDouble(param0: number): number;
					public toArrayList(): java.util.ArrayList<any>;
					public getString(param0: number): string;
					public pushBoolean(param0: boolean): void;
					public size(): number;
					public getMap(param0: number): com.facebook.react.bridge.ReadableMap;
					public pushNull(): void;
					public getType(param0: number): com.facebook.react.bridge.ReadableType;
					public getDynamic(param0: number): com.facebook.react.bridge.Dynamic;
					public pushMap(param0: com.facebook.react.bridge.ReadableMap): void;
					public getInt(param0: number): number;
					public pushArray(param0: com.facebook.react.bridge.ReadableArray): void;
					public pushString(param0: string): void;
					public getBoolean(param0: number): boolean;
					public getArray(param0: number): com.facebook.react.bridge.ReadableArray;
					public pushDouble(param0: number): void;
					public pushInt(param0: number): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class WritableMap extends com.facebook.react.bridge.ReadableMap {
					public static class: java.lang.Class<com.facebook.react.bridge.WritableMap>;
					/**
					 * Constructs a new instance of the com.facebook.react.bridge.WritableMap interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						putNull(param0: string): void;
						putBoolean(param0: string, param1: boolean): void;
						putDouble(param0: string, param1: number): void;
						putInt(param0: string, param1: number): void;
						putString(param0: string, param1: string): void;
						putArray(param0: string, param1: com.facebook.react.bridge.ReadableArray): void;
						putMap(param0: string, param1: com.facebook.react.bridge.ReadableMap): void;
						merge(param0: com.facebook.react.bridge.ReadableMap): void;
						copy(): com.facebook.react.bridge.WritableMap;
						hasKey(param0: string): boolean;
						isNull(param0: string): boolean;
						getBoolean(param0: string): boolean;
						getDouble(param0: string): number;
						getInt(param0: string): number;
						getString(param0: string): string;
						getArray(param0: string): com.facebook.react.bridge.ReadableArray;
						getMap(param0: string): com.facebook.react.bridge.ReadableMap;
						getDynamic(param0: string): com.facebook.react.bridge.Dynamic;
						getType(param0: string): com.facebook.react.bridge.ReadableType;
						getEntryIterator(): java.util.Iterator<java.util.Map.Entry<string,any>>;
						keySetIterator(): com.facebook.react.bridge.ReadableMapKeySetIterator;
						toHashMap(): java.util.HashMap<string,any>;
					});
					public constructor();
					public putString(param0: string, param1: string): void;
					public getType(param0: string): com.facebook.react.bridge.ReadableType;
					public copy(): com.facebook.react.bridge.WritableMap;
					public getInt(param0: string): number;
					public isNull(param0: string): boolean;
					public getString(param0: string): string;
					public keySetIterator(): com.facebook.react.bridge.ReadableMapKeySetIterator;
					public putDouble(param0: string, param1: number): void;
					public putInt(param0: string, param1: number): void;
					public getBoolean(param0: string): boolean;
					public putMap(param0: string, param1: com.facebook.react.bridge.ReadableMap): void;
					public putNull(param0: string): void;
					public hasKey(param0: string): boolean;
					public getEntryIterator(): java.util.Iterator<java.util.Map.Entry<string,any>>;
					public putArray(param0: string, param1: com.facebook.react.bridge.ReadableArray): void;
					public getDynamic(param0: string): com.facebook.react.bridge.Dynamic;
					public toHashMap(): java.util.HashMap<string,any>;
					public getDouble(param0: string): number;
					public getMap(param0: string): com.facebook.react.bridge.ReadableMap;
					public putBoolean(param0: string, param1: boolean): void;
					public merge(param0: com.facebook.react.bridge.ReadableMap): void;
					public getArray(param0: string): com.facebook.react.bridge.ReadableArray;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class WritableNativeArray extends com.facebook.react.bridge.ReadableNativeArray implements com.facebook.react.bridge.WritableArray {
					public static class: java.lang.Class<com.facebook.react.bridge.WritableNativeArray>;
					public isNull(param0: number): boolean;
					public constructor(param0: com.facebook.jni.HybridData);
					public getDouble(param0: number): number;
					public toArrayList(): java.util.ArrayList<any>;
					public getString(param0: number): string;
					public pushBoolean(param0: boolean): void;
					public size(): number;
					public getMap(param0: number): com.facebook.react.bridge.ReadableMap;
					public pushNull(): void;
					public getType(param0: number): com.facebook.react.bridge.ReadableType;
					public getDynamic(param0: number): com.facebook.react.bridge.Dynamic;
					public pushMap(param0: com.facebook.react.bridge.ReadableMap): void;
					public getInt(param0: number): number;
					public toString(): string;
					public pushArray(param0: com.facebook.react.bridge.ReadableArray): void;
					public constructor();
					public pushString(param0: string): void;
					public getBoolean(param0: number): boolean;
					public getArray(param0: number): com.facebook.react.bridge.ReadableArray;
					public getArray(param0: number): com.facebook.react.bridge.ReadableNativeArray;
					public pushDouble(param0: number): void;
					public pushInt(param0: number): void;
					public getMap(param0: number): com.facebook.react.bridge.ReadableNativeMap;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export class WritableNativeMap extends com.facebook.react.bridge.ReadableNativeMap implements com.facebook.react.bridge.WritableMap {
					public static class: java.lang.Class<com.facebook.react.bridge.WritableNativeMap>;
					public getType(param0: string): com.facebook.react.bridge.ReadableType;
					public constructor(param0: com.facebook.jni.HybridData);
					public isNull(param0: string): boolean;
					public putDouble(param0: string, param1: number): void;
					public getBoolean(param0: string): boolean;
					public putNull(param0: string): void;
					public constructor();
					public getDynamic(param0: string): com.facebook.react.bridge.Dynamic;
					public getMap(param0: string): com.facebook.react.bridge.ReadableNativeMap;
					public putString(param0: string, param1: string): void;
					public copy(): com.facebook.react.bridge.WritableMap;
					public getInt(param0: string): number;
					public getString(param0: string): string;
					public keySetIterator(): com.facebook.react.bridge.ReadableMapKeySetIterator;
					public putInt(param0: string, param1: number): void;
					public putMap(param0: string, param1: com.facebook.react.bridge.ReadableMap): void;
					public hasKey(param0: string): boolean;
					public getEntryIterator(): java.util.Iterator<java.util.Map.Entry<string,any>>;
					public putArray(param0: string, param1: com.facebook.react.bridge.ReadableArray): void;
					public toHashMap(): java.util.HashMap<string,any>;
					public getDouble(param0: string): number;
					public getMap(param0: string): com.facebook.react.bridge.ReadableMap;
					public putBoolean(param0: string, param1: boolean): void;
					public merge(param0: com.facebook.react.bridge.ReadableMap): void;
					public getArray(param0: string): com.facebook.react.bridge.ReadableArray;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export module queue {
					export class MessageQueueThread {
						public static class: java.lang.Class<com.facebook.react.bridge.queue.MessageQueueThread>;
						/**
						 * Constructs a new instance of the com.facebook.react.bridge.queue.MessageQueueThread interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							runOnQueue(param0: java.lang.Runnable): void;
							callOnQueue(param0: java.util.concurrent.Callable): java.util.concurrent.Future;
							isOnThread(): boolean;
							assertIsOnThread(): void;
							assertIsOnThread(param0: string): void;
							quitSynchronous(): void;
							getPerfStats(): com.facebook.react.bridge.queue.MessageQueueThreadPerfStats;
							resetPerfStats(): void;
						});
						public constructor();
						public runOnQueue(param0: java.lang.Runnable): void;
						public assertIsOnThread(): void;
						public getPerfStats(): com.facebook.react.bridge.queue.MessageQueueThreadPerfStats;
						public isOnThread(): boolean;
						public quitSynchronous(): void;
						public callOnQueue(param0: java.util.concurrent.Callable): java.util.concurrent.Future;
						public assertIsOnThread(param0: string): void;
						public resetPerfStats(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export module queue {
					export class MessageQueueThreadHandler {
						public static class: java.lang.Class<com.facebook.react.bridge.queue.MessageQueueThreadHandler>;
						public dispatchMessage(param0: globalAndroid.os.Message): void;
						public constructor(param0: globalAndroid.os.Looper, param1: com.facebook.react.bridge.queue.QueueThreadExceptionHandler);
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export module queue {
					export class MessageQueueThreadImpl extends com.facebook.react.bridge.queue.MessageQueueThread {
						public static class: java.lang.Class<com.facebook.react.bridge.queue.MessageQueueThreadImpl>;
						public runOnQueue(param0: java.lang.Runnable): void;
						public assertIsOnThread(): void;
						public getPerfStats(): com.facebook.react.bridge.queue.MessageQueueThreadPerfStats;
						public isOnThread(): boolean;
						public static create(param0: com.facebook.react.bridge.queue.MessageQueueThreadSpec, param1: com.facebook.react.bridge.queue.QueueThreadExceptionHandler): com.facebook.react.bridge.queue.MessageQueueThreadImpl;
						public quitSynchronous(): void;
						public callOnQueue(param0: java.util.concurrent.Callable): java.util.concurrent.Future;
						public assertIsOnThread(param0: string): void;
						public getLooper(): globalAndroid.os.Looper;
						public getName(): string;
						public resetPerfStats(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export module queue {
					export class MessageQueueThreadPerfStats {
						public static class: java.lang.Class<com.facebook.react.bridge.queue.MessageQueueThreadPerfStats>;
						public wallTime: number;
						public cpuTime: number;
						public constructor();
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export module queue {
					export class MessageQueueThreadSpec {
						public static class: java.lang.Class<com.facebook.react.bridge.queue.MessageQueueThreadSpec>;
						public static DEFAULT_STACK_SIZE_BYTES: number;
						public static mainThreadSpec(): com.facebook.react.bridge.queue.MessageQueueThreadSpec;
						public static newBackgroundThreadSpec(param0: string, param1: number): com.facebook.react.bridge.queue.MessageQueueThreadSpec;
						public getStackSize(): number;
						public static newUIBackgroundTreadSpec(param0: string): com.facebook.react.bridge.queue.MessageQueueThreadSpec;
						public static newBackgroundThreadSpec(param0: string): com.facebook.react.bridge.queue.MessageQueueThreadSpec;
						public getThreadType(): com.facebook.react.bridge.queue.MessageQueueThreadSpec.ThreadType;
						public getName(): string;
					}
					export module MessageQueueThreadSpec {
						export class ThreadType {
							public static class: java.lang.Class<com.facebook.react.bridge.queue.MessageQueueThreadSpec.ThreadType>;
							public static MAIN_UI: com.facebook.react.bridge.queue.MessageQueueThreadSpec.ThreadType;
							public static NEW_BACKGROUND: com.facebook.react.bridge.queue.MessageQueueThreadSpec.ThreadType;
							public static valueOf(param0: string): com.facebook.react.bridge.queue.MessageQueueThreadSpec.ThreadType;
							public static values(): native.Array<com.facebook.react.bridge.queue.MessageQueueThreadSpec.ThreadType>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export module queue {
					export class NativeRunnable {
						public static class: java.lang.Class<com.facebook.react.bridge.queue.NativeRunnable>;
						public run(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export module queue {
					export class QueueThreadExceptionHandler {
						public static class: java.lang.Class<com.facebook.react.bridge.queue.QueueThreadExceptionHandler>;
						/**
						 * Constructs a new instance of the com.facebook.react.bridge.queue.QueueThreadExceptionHandler interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							handleException(param0: java.lang.Exception): void;
						});
						public constructor();
						public handleException(param0: java.lang.Exception): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export module queue {
					export class ReactQueueConfiguration {
						public static class: java.lang.Class<com.facebook.react.bridge.queue.ReactQueueConfiguration>;
						/**
						 * Constructs a new instance of the com.facebook.react.bridge.queue.ReactQueueConfiguration interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getUIQueueThread(): com.facebook.react.bridge.queue.MessageQueueThread;
							getNativeModulesQueueThread(): com.facebook.react.bridge.queue.MessageQueueThread;
							getJSQueueThread(): com.facebook.react.bridge.queue.MessageQueueThread;
							destroy(): void;
						});
						public constructor();
						public getNativeModulesQueueThread(): com.facebook.react.bridge.queue.MessageQueueThread;
						public getUIQueueThread(): com.facebook.react.bridge.queue.MessageQueueThread;
						public getJSQueueThread(): com.facebook.react.bridge.queue.MessageQueueThread;
						public destroy(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export module queue {
					export class ReactQueueConfigurationImpl extends com.facebook.react.bridge.queue.ReactQueueConfiguration {
						public static class: java.lang.Class<com.facebook.react.bridge.queue.ReactQueueConfigurationImpl>;
						public getNativeModulesQueueThread(): com.facebook.react.bridge.queue.MessageQueueThread;
						public getUIQueueThread(): com.facebook.react.bridge.queue.MessageQueueThread;
						public getJSQueueThread(): com.facebook.react.bridge.queue.MessageQueueThread;
						public destroy(): void;
						public static create(param0: com.facebook.react.bridge.queue.ReactQueueConfigurationSpec, param1: com.facebook.react.bridge.queue.QueueThreadExceptionHandler): com.facebook.react.bridge.queue.ReactQueueConfigurationImpl;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module bridge {
				export module queue {
					export class ReactQueueConfigurationSpec {
						public static class: java.lang.Class<com.facebook.react.bridge.queue.ReactQueueConfigurationSpec>;
						public static builder(): com.facebook.react.bridge.queue.ReactQueueConfigurationSpec.Builder;
						public getNativeModulesQueueThreadSpec(): com.facebook.react.bridge.queue.MessageQueueThreadSpec;
						public static createDefault(): com.facebook.react.bridge.queue.ReactQueueConfigurationSpec;
						public getJSQueueThreadSpec(): com.facebook.react.bridge.queue.MessageQueueThreadSpec;
					}
					export module ReactQueueConfigurationSpec {
						export class Builder {
							public static class: java.lang.Class<com.facebook.react.bridge.queue.ReactQueueConfigurationSpec.Builder>;
							public constructor();
							public build(): com.facebook.react.bridge.queue.ReactQueueConfigurationSpec;
							public setJSQueueThreadSpec(param0: com.facebook.react.bridge.queue.MessageQueueThreadSpec): com.facebook.react.bridge.queue.ReactQueueConfigurationSpec.Builder;
							public setNativeModulesQueueThreadSpec(param0: com.facebook.react.bridge.queue.MessageQueueThreadSpec): com.facebook.react.bridge.queue.ReactQueueConfigurationSpec.Builder;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module common {
				export class ArrayUtils {
					public static class: java.lang.Class<com.facebook.react.common.ArrayUtils>;
					public constructor();
					public static copyListToArray(param0: java.util.List<java.lang.Integer>): native.Array<number>;
					public static copyArray(param0: native.Array<number>): native.Array<number>;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module common {
				export class ClearableSynchronizedPool<T>  extends androidx.core.util.Pools.Pool<any> {
					public static class: java.lang.Class<com.facebook.react.common.ClearableSynchronizedPool<any>>;
					public clear(): void;
					public acquire(): any;
					public release(param0: any): boolean;
					public constructor(param0: number);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module common {
				export class DebugServerException {
					public static class: java.lang.Class<com.facebook.react.common.DebugServerException>;
					public static parse(param0: string, param1: string): com.facebook.react.common.DebugServerException;
					public constructor(param0: string, param1: java.lang.Throwable);
					public constructor(param0: string);
					public static makeGeneric(param0: string, param1: string, param2: string, param3: java.lang.Throwable): com.facebook.react.common.DebugServerException;
					public static makeGeneric(param0: string, param1: string, param2: java.lang.Throwable): com.facebook.react.common.DebugServerException;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module common {
				export class HasJavascriptExceptionMetadata {
					public static class: java.lang.Class<com.facebook.react.common.HasJavascriptExceptionMetadata>;
					/**
					 * Constructs a new instance of the com.facebook.react.common.HasJavascriptExceptionMetadata interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						getExtraDataAsJson(): string;
					});
					public constructor();
					public getExtraDataAsJson(): string;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module common {
				export class JavascriptException implements com.facebook.react.common.HasJavascriptExceptionMetadata {
					public static class: java.lang.Class<com.facebook.react.common.JavascriptException>;
					public constructor(param0: string);
					public setExtraDataAsJson(param0: string): com.facebook.react.common.JavascriptException;
					public getExtraDataAsJson(): string;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module common {
				export class LifecycleState {
					public static class: java.lang.Class<com.facebook.react.common.LifecycleState>;
					public static BEFORE_CREATE: com.facebook.react.common.LifecycleState;
					public static BEFORE_RESUME: com.facebook.react.common.LifecycleState;
					public static RESUMED: com.facebook.react.common.LifecycleState;
					public static values(): native.Array<com.facebook.react.common.LifecycleState>;
					public static valueOf(param0: string): com.facebook.react.common.LifecycleState;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module common {
				export class LongArray {
					public static class: java.lang.Class<com.facebook.react.common.LongArray>;
					public get(param0: number): number;
					public isEmpty(): boolean;
					public dropTail(param0: number): void;
					public set(param0: number, param1: number): void;
					public add(param0: number): void;
					public size(): number;
					public static createWithInitialCapacity(param0: number): com.facebook.react.common.LongArray;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module common {
				export class MapBuilder {
					public static class: java.lang.Class<com.facebook.react.common.MapBuilder>;
					public static of(param0: any, param1: any): java.util.Map;
					public static of(param0: any, param1: any, param2: any, param3: any, param4: any, param5: any, param6: any, param7: any, param8: any, param9: any, param10: any, param11: any, param12: any, param13: any): java.util.Map;
					public static of(param0: any, param1: any, param2: any, param3: any): java.util.Map;
					public static of(param0: any, param1: any, param2: any, param3: any, param4: any, param5: any, param6: any, param7: any): java.util.Map;
					public static newHashMap(): java.util.HashMap;
					public constructor();
					public static builder(): com.facebook.react.common.MapBuilder.Builder<any,any>;
					public static of(): java.util.Map;
					public static of(param0: any, param1: any, param2: any, param3: any, param4: any, param5: any): java.util.Map;
					public static of(param0: any, param1: any, param2: any, param3: any, param4: any, param5: any, param6: any, param7: any, param8: any, param9: any, param10: any, param11: any): java.util.Map;
					public static of(param0: any, param1: any, param2: any, param3: any, param4: any, param5: any, param6: any, param7: any, param8: any, param9: any): java.util.Map;
				}
				export module MapBuilder {
					export class Builder<K, V>  extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.react.common.MapBuilder.Builder<any,any>>;
						public build(): java.util.Map<K,V>;
						public put(param0: K, param1: V): com.facebook.react.common.MapBuilder.Builder<K,V>;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module common {
				export class ReactConstants {
					public static class: java.lang.Class<com.facebook.react.common.ReactConstants>;
					public static TAG: string;
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module common {
				export class ShakeDetector {
					public static class: java.lang.Class<com.facebook.react.common.ShakeDetector>;
					public onSensorChanged(param0: globalAndroid.hardware.SensorEvent): void;
					public constructor(param0: com.facebook.react.common.ShakeDetector.ShakeListener, param1: number);
					public onAccuracyChanged(param0: globalAndroid.hardware.Sensor, param1: number): void;
					public constructor(param0: com.facebook.react.common.ShakeDetector.ShakeListener);
					public start(param0: globalAndroid.hardware.SensorManager): void;
					public stop(): void;
				}
				export module ShakeDetector {
					export class ShakeListener {
						public static class: java.lang.Class<com.facebook.react.common.ShakeDetector.ShakeListener>;
						/**
						 * Constructs a new instance of the com.facebook.react.common.ShakeDetector$ShakeListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onShake(): void;
						});
						public constructor();
						public onShake(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module common {
				export class SingleThreadAsserter {
					public static class: java.lang.Class<com.facebook.react.common.SingleThreadAsserter>;
					public assertNow(): void;
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module common {
				export class StandardCharsets {
					public static class: java.lang.Class<com.facebook.react.common.StandardCharsets>;
					public static UTF_8: java.nio.charset.Charset;
					public static UTF_16: java.nio.charset.Charset;
					public static UTF_16BE: java.nio.charset.Charset;
					public static UTF_16LE: java.nio.charset.Charset;
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module common {
				export class SystemClock {
					public static class: java.lang.Class<com.facebook.react.common.SystemClock>;
					public static uptimeMillis(): number;
					public constructor();
					public static currentTimeMillis(): number;
					public static nanoTime(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module common {
				export module annotations {
					export class VisibleForTesting {
						public static class: java.lang.Class<com.facebook.react.common.annotations.VisibleForTesting>;
						/**
						 * Constructs a new instance of the com.facebook.react.common.annotations.VisibleForTesting interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
						});
						public constructor();
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module common {
				export module build {
					export class ReactBuildConfig {
						public static class: java.lang.Class<com.facebook.react.common.build.ReactBuildConfig>;
						public static DEBUG: boolean;
						public static IS_INTERNAL_BUILD: boolean;
						public static EXOPACKAGE_FLAGS: number;
						public constructor();
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module common {
				export module futures {
					export class SimpleSettableFuture<T>  extends java.util.concurrent.Future<any> {
						public static class: java.lang.Class<com.facebook.react.common.futures.SimpleSettableFuture<any>>;
						public constructor();
						public isDone(): boolean;
						public getOrThrow(): any;
						public isCancelled(): boolean;
						public cancel(param0: boolean): boolean;
						public getOrThrow(param0: number, param1: java.util.concurrent.TimeUnit): any;
						public setException(param0: java.lang.Exception): void;
						public get(param0: number, param1: java.util.concurrent.TimeUnit): any;
						public set(param0: any): void;
						public get(): any;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module common {
				export module network {
					export class OkHttpCallUtil {
						public static class: java.lang.Class<com.facebook.react.common.network.OkHttpCallUtil>;
						public static cancelTag(param0: okhttp3.OkHttpClient, param1: any): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module config {
				export class ReactFeatureFlags {
					public static class: java.lang.Class<com.facebook.react.config.ReactFeatureFlags>;
					public static useTurboModules: boolean;
					public static enableFabricLogs: boolean;
					public static useViewManagerDelegates: boolean;
					public static useCatalystTeardownV2: boolean;
					public static nullifyCatalystInstanceOnDestroy: boolean;
					public static allowEarlyViewCommandExecution: boolean;
					public static clipChildRectsIfOverflowIsHidden: boolean;
					public static enableTransitionLayoutOnlyViewCleanup: boolean;
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module devsupport {
				export class BundleDownloader {
					public static class: java.lang.Class<com.facebook.react.devsupport.BundleDownloader>;
					public constructor(param0: okhttp3.OkHttpClient);
					public downloadBundleFromURL(param0: com.facebook.react.devsupport.interfaces.DevBundleDownloadListener, param1: java.io.File, param2: string, param3: com.facebook.react.devsupport.BundleDownloader.BundleInfo, param4: okhttp3.Request.Builder): void;
					public downloadBundleFromURL(param0: com.facebook.react.devsupport.interfaces.DevBundleDownloadListener, param1: java.io.File, param2: string, param3: com.facebook.react.devsupport.BundleDownloader.BundleInfo): void;
				}
				export module BundleDownloader {
					export class BundleInfo {
						public static class: java.lang.Class<com.facebook.react.devsupport.BundleDownloader.BundleInfo>;
						public constructor();
						public toJSONString(): string;
						public static fromJSONString(param0: string): com.facebook.react.devsupport.BundleDownloader.BundleInfo;
						public getUrl(): string;
						public getFilesChangedCount(): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module devsupport {
				export class DebugOverlayController {
					public static class: java.lang.Class<com.facebook.react.devsupport.DebugOverlayController>;
					public static requestPermission(param0: globalAndroid.content.Context): void;
					public setFpsDebugViewVisible(param0: boolean): void;
					public constructor(param0: com.facebook.react.bridge.ReactContext);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module devsupport {
				export class DevInternalSettings extends com.facebook.react.modules.debug.interfaces.DeveloperSettings {
					public static class: java.lang.Class<com.facebook.react.devsupport.DevInternalSettings>;
					public isStartSamplingProfilerOnInit(): boolean;
					public isAnimationFpsDebugEnabled(): boolean;
					public isElementInspectorEnabled(): boolean;
					public isJSMinifyEnabled(): boolean;
					public isFpsDebugEnabled(): boolean;
					public onSharedPreferenceChanged(param0: globalAndroid.content.SharedPreferences, param1: string): void;
					public setRemoteJSDebugEnabled(param0: boolean): void;
					public setJSDevModeEnabled(param0: boolean): void;
					public setElementInspectorEnabled(param0: boolean): void;
					public isHotModuleReplacementEnabled(): boolean;
					public isRemoteJSDebugEnabled(): boolean;
					public constructor(param0: globalAndroid.content.Context, param1: com.facebook.react.devsupport.DevInternalSettings.Listener);
					public setFpsDebugEnabled(param0: boolean): void;
					public setHotModuleReplacementEnabled(param0: boolean): void;
					public getPackagerConnectionSettings(): com.facebook.react.packagerconnection.PackagerConnectionSettings;
					public isJSDevModeEnabled(): boolean;
					public isNuclideJSDebugEnabled(): boolean;
					public addMenuItem(param0: string): void;
				}
				export module DevInternalSettings {
					export class Listener {
						public static class: java.lang.Class<com.facebook.react.devsupport.DevInternalSettings.Listener>;
						/**
						 * Constructs a new instance of the com.facebook.react.devsupport.DevInternalSettings$Listener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onInternalSettingsChanged(): void;
						});
						public constructor();
						public onInternalSettingsChanged(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module devsupport {
				export class DevLoadingViewController {
					public static class: java.lang.Class<com.facebook.react.devsupport.DevLoadingViewController>;
					public constructor(param0: globalAndroid.content.Context, param1: com.facebook.react.devsupport.ReactInstanceManagerDevHelper);
					public updateProgress(param0: string, param1: java.lang.Integer, param2: java.lang.Integer): void;
					public static setDevLoadingEnabled(param0: boolean): void;
					public showForRemoteJSEnabled(): void;
					public showMessage(param0: string): void;
					public showForUrl(param0: string): void;
					public hide(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module devsupport {
				export class DevServerHelper {
					public static class: java.lang.Class<com.facebook.react.devsupport.DevServerHelper>;
					public static RELOAD_APP_EXTRA_JS_PROXY: string;
					public openStackFrameCall(param0: com.facebook.react.devsupport.interfaces.StackFrame): void;
					public downloadBundleFromURL(param0: com.facebook.react.devsupport.interfaces.DevBundleDownloadListener, param1: java.io.File, param2: string, param3: com.facebook.react.devsupport.BundleDownloader.BundleInfo, param4: okhttp3.Request.Builder): void;
					public symbolicateStackTrace(param0: java.lang.Iterable<com.facebook.react.devsupport.interfaces.StackFrame>, param1: com.facebook.react.devsupport.DevServerHelper.SymbolicationListener): void;
					public closeInspectorConnection(): void;
					public getWebsocketProxyURL(): string;
					public closePackagerConnection(): void;
					public constructor(param0: com.facebook.react.devsupport.DevInternalSettings, param1: string, param2: com.facebook.react.devsupport.InspectorPackagerConnection.BundleStatusProvider);
					public launchJSDevtools(): void;
					public openPackagerConnection(param0: string, param1: com.facebook.react.devsupport.DevServerHelper.PackagerCommandListener): void;
					public openInspectorConnection(): void;
					public downloadBundleResourceFromUrlSync(param0: string, param1: java.io.File): java.io.File;
					public isPackagerRunning(param0: com.facebook.react.devsupport.interfaces.PackagerStatusCallback): void;
					public getSourceMapUrl(param0: string): string;
					public downloadBundleFromURL(param0: com.facebook.react.devsupport.interfaces.DevBundleDownloadListener, param1: java.io.File, param2: string, param3: com.facebook.react.devsupport.BundleDownloader.BundleInfo): void;
					public getDevServerBundleURL(param0: string): string;
					public getSourceUrl(param0: string): string;
					public disableDebugger(): void;
					public getJSBundleURLForRemoteDebugging(param0: string): string;
				}
				export module DevServerHelper {
					export class BundleType {
						public static class: java.lang.Class<com.facebook.react.devsupport.DevServerHelper.BundleType>;
						public static BUNDLE: com.facebook.react.devsupport.DevServerHelper.BundleType;
						public static MAP: com.facebook.react.devsupport.DevServerHelper.BundleType;
						public typeID(): string;
						public static valueOf(param0: string): com.facebook.react.devsupport.DevServerHelper.BundleType;
						public static values(): native.Array<com.facebook.react.devsupport.DevServerHelper.BundleType>;
					}
					export class OnServerContentChangeListener {
						public static class: java.lang.Class<com.facebook.react.devsupport.DevServerHelper.OnServerContentChangeListener>;
						/**
						 * Constructs a new instance of the com.facebook.react.devsupport.DevServerHelper$OnServerContentChangeListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onServerContentChanged(): void;
						});
						public constructor();
						public onServerContentChanged(): void;
					}
					export class PackagerCommandListener {
						public static class: java.lang.Class<com.facebook.react.devsupport.DevServerHelper.PackagerCommandListener>;
						/**
						 * Constructs a new instance of the com.facebook.react.devsupport.DevServerHelper$PackagerCommandListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onPackagerConnected(): void;
							onPackagerDisconnected(): void;
							onPackagerReloadCommand(): void;
							onPackagerDevMenuCommand(): void;
							onCaptureHeapCommand(param0: com.facebook.react.packagerconnection.Responder): void;
							customCommandHandlers(): java.util.Map<string,com.facebook.react.packagerconnection.RequestHandler>;
						});
						public constructor();
						public onPackagerDevMenuCommand(): void;
						public onPackagerDisconnected(): void;
						public onPackagerConnected(): void;
						public customCommandHandlers(): java.util.Map<string,com.facebook.react.packagerconnection.RequestHandler>;
						public onPackagerReloadCommand(): void;
						public onCaptureHeapCommand(param0: com.facebook.react.packagerconnection.Responder): void;
					}
					export class PackagerCustomCommandProvider {
						public static class: java.lang.Class<com.facebook.react.devsupport.DevServerHelper.PackagerCustomCommandProvider>;
						/**
						 * Constructs a new instance of the com.facebook.react.devsupport.DevServerHelper$PackagerCustomCommandProvider interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
						});
						public constructor();
					}
					export class SymbolicationListener {
						public static class: java.lang.Class<com.facebook.react.devsupport.DevServerHelper.SymbolicationListener>;
						/**
						 * Constructs a new instance of the com.facebook.react.devsupport.DevServerHelper$SymbolicationListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onSymbolicationComplete(param0: java.lang.Iterable<com.facebook.react.devsupport.interfaces.StackFrame>): void;
						});
						public constructor();
						public onSymbolicationComplete(param0: java.lang.Iterable<com.facebook.react.devsupport.interfaces.StackFrame>): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module devsupport {
				export class DevSettingsActivity {
					public static class: java.lang.Class<com.facebook.react.devsupport.DevSettingsActivity>;
					public onCreate(param0: globalAndroid.os.Bundle): void;
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module devsupport {
				export abstract class DevSupportManagerBase implements com.facebook.react.devsupport.interfaces.DevSupportManager, com.facebook.react.devsupport.DevServerHelper.PackagerCommandListener, com.facebook.react.devsupport.DevInternalSettings.Listener {
					public static class: java.lang.Class<com.facebook.react.devsupport.DevSupportManagerBase>;
					public static EMOJI_HUNDRED_POINTS_SYMBOL: string;
					public static EMOJI_FACE_WITH_NO_GOOD_GESTURE: string;
					public onPackagerConnected(): void;
					public getDevSettings(): com.facebook.react.modules.debug.interfaces.DeveloperSettings;
					public createRootView(param0: string): globalAndroid.view.View;
					public handleReloadJS(): void;
					public onNewReactContextCreated(param0: com.facebook.react.bridge.ReactContext): void;
					public setRemoteJSDebugEnabled(param0: boolean): void;
					public onPackagerReloadCommand(): void;
					public customCommandHandlers(): java.util.Map<string,com.facebook.react.packagerconnection.RequestHandler>;
					public constructor(param0: globalAndroid.content.Context, param1: com.facebook.react.devsupport.ReactInstanceManagerDevHelper, param2: string, param3: boolean, param4: com.facebook.react.devsupport.RedBoxHandler, param5: com.facebook.react.devsupport.interfaces.DevBundleDownloadListener, param6: number, param7: java.util.Map<string,com.facebook.react.packagerconnection.RequestHandler>);
					public getLastErrorTitle(): string;
					public setHotModuleReplacementEnabled(param0: boolean): void;
					public getSourceMapUrl(): string;
					public reloadJSFromServer(param0: string, param1: com.facebook.react.devsupport.DevSupportManagerBase.BundleLoadCallback): void;
					public registerErrorCustomizer(param0: com.facebook.react.devsupport.interfaces.ErrorCustomizer): void;
					public onPackagerDisconnected(): void;
					public hasUpToDateJSBundleInCache(): boolean;
					public onCaptureHeapCommand(param0: com.facebook.react.packagerconnection.Responder): void;
					public constructor(param0: globalAndroid.content.Context, param1: com.facebook.react.devsupport.ReactInstanceManagerDevHelper, param2: string, param3: boolean, param4: number);
					public getJSBundleURLForRemoteDebugging(): string;
					public destroyRootView(param0: globalAndroid.view.View): void;
					public updateJSError(param0: string, param1: com.facebook.react.bridge.ReadableArray, param2: number): void;
					public getSourceUrl(): string;
					public reloadJSFromServer(param0: string): void;
					public showNewJavaError(param0: string, param1: java.lang.Throwable): void;
					public onInternalSettingsChanged(): void;
					public startInspector(): void;
					public getLastErrorStack(): native.Array<com.facebook.react.devsupport.interfaces.StackFrame>;
					public addCustomDevOption(param0: string, param1: com.facebook.react.devsupport.interfaces.DevOptionHandler): void;
					public getDevSupportEnabled(): boolean;
					public getDownloadedJSBundleFile(): string;
					public showDevOptionsDialog(): void;
					public handleException(param0: java.lang.Exception): void;
					public onReactInstanceDestroyed(param0: com.facebook.react.bridge.ReactContext): void;
					public downloadBundleResourceFromUrlSync(param0: string, param1: java.io.File): java.io.File;
					public isPackagerRunning(param0: com.facebook.react.devsupport.interfaces.PackagerStatusCallback): void;
					public setFpsDebugEnabled(param0: boolean): void;
					public stopInspector(): void;
					public toggleElementInspector(): void;
					public reloadSettings(): void;
					public setDevSupportEnabled(param0: boolean): void;
					public setPackagerLocationCustomizer(param0: com.facebook.react.devsupport.interfaces.DevSupportManager.PackagerLocationCustomizer): void;
					public showNewJSError(param0: string, param1: com.facebook.react.bridge.ReadableArray, param2: number): void;
					public hideRedboxDialog(): void;
					public hasBundleInAssets(param0: string): boolean;
					public onPackagerDevMenuCommand(): void;
				}
				export module DevSupportManagerBase {
					export class BundleLoadCallback {
						public static class: java.lang.Class<com.facebook.react.devsupport.DevSupportManagerBase.BundleLoadCallback>;
						/**
						 * Constructs a new instance of the com.facebook.react.devsupport.DevSupportManagerBase$BundleLoadCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onSuccess(): void;
						});
						public constructor();
						public onSuccess(): void;
					}
					export class ErrorType {
						public static class: java.lang.Class<com.facebook.react.devsupport.DevSupportManagerBase.ErrorType>;
						public static JS: com.facebook.react.devsupport.DevSupportManagerBase.ErrorType;
						public static NATIVE: com.facebook.react.devsupport.DevSupportManagerBase.ErrorType;
						public static values(): native.Array<com.facebook.react.devsupport.DevSupportManagerBase.ErrorType>;
						public static valueOf(param0: string): com.facebook.react.devsupport.DevSupportManagerBase.ErrorType;
					}
					export class ExceptionLogger {
						public static class: java.lang.Class<com.facebook.react.devsupport.DevSupportManagerBase.ExceptionLogger>;
						/**
						 * Constructs a new instance of the com.facebook.react.devsupport.DevSupportManagerBase$ExceptionLogger interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							log(param0: java.lang.Exception): void;
						});
						public constructor();
						public log(param0: java.lang.Exception): void;
					}
					export class JSExceptionLogger extends com.facebook.react.devsupport.DevSupportManagerBase.ExceptionLogger {
						public static class: java.lang.Class<com.facebook.react.devsupport.DevSupportManagerBase.JSExceptionLogger>;
						public log(param0: java.lang.Exception): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module devsupport {
				export class DevSupportManagerFactory {
					public static class: java.lang.Class<com.facebook.react.devsupport.DevSupportManagerFactory>;
					public constructor();
					public static create(param0: globalAndroid.content.Context, param1: com.facebook.react.devsupport.ReactInstanceManagerDevHelper, param2: string, param3: boolean, param4: com.facebook.react.devsupport.RedBoxHandler, param5: com.facebook.react.devsupport.interfaces.DevBundleDownloadListener, param6: number, param7: java.util.Map<string,com.facebook.react.packagerconnection.RequestHandler>): com.facebook.react.devsupport.interfaces.DevSupportManager;
					public static create(param0: globalAndroid.content.Context, param1: com.facebook.react.devsupport.ReactInstanceManagerDevHelper, param2: string, param3: boolean, param4: number): com.facebook.react.devsupport.interfaces.DevSupportManager;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module devsupport {
				export class DevSupportManagerImpl extends com.facebook.react.devsupport.DevSupportManagerBase {
					public static class: java.lang.Class<com.facebook.react.devsupport.DevSupportManagerImpl>;
					public onPackagerConnected(): void;
					public getDevSettings(): com.facebook.react.modules.debug.interfaces.DeveloperSettings;
					public createRootView(param0: string): globalAndroid.view.View;
					public handleReloadJS(): void;
					public onNewReactContextCreated(param0: com.facebook.react.bridge.ReactContext): void;
					public setRemoteJSDebugEnabled(param0: boolean): void;
					public onPackagerReloadCommand(): void;
					public customCommandHandlers(): java.util.Map<string,com.facebook.react.packagerconnection.RequestHandler>;
					public constructor(param0: globalAndroid.content.Context, param1: com.facebook.react.devsupport.ReactInstanceManagerDevHelper, param2: string, param3: boolean, param4: com.facebook.react.devsupport.RedBoxHandler, param5: com.facebook.react.devsupport.interfaces.DevBundleDownloadListener, param6: number, param7: java.util.Map<string,com.facebook.react.packagerconnection.RequestHandler>);
					public getLastErrorTitle(): string;
					public setHotModuleReplacementEnabled(param0: boolean): void;
					public getSourceMapUrl(): string;
					public reloadJSFromServer(param0: string, param1: com.facebook.react.devsupport.DevSupportManagerBase.BundleLoadCallback): void;
					public registerErrorCustomizer(param0: com.facebook.react.devsupport.interfaces.ErrorCustomizer): void;
					public onPackagerDisconnected(): void;
					public onCaptureHeapCommand(param0: com.facebook.react.packagerconnection.Responder): void;
					public hasUpToDateJSBundleInCache(): boolean;
					public constructor(param0: globalAndroid.content.Context, param1: com.facebook.react.devsupport.ReactInstanceManagerDevHelper, param2: string, param3: boolean, param4: number);
					public getJSBundleURLForRemoteDebugging(): string;
					public destroyRootView(param0: globalAndroid.view.View): void;
					public updateJSError(param0: string, param1: com.facebook.react.bridge.ReadableArray, param2: number): void;
					public getSourceUrl(): string;
					public reloadJSFromServer(param0: string): void;
					public showNewJavaError(param0: string, param1: java.lang.Throwable): void;
					public onInternalSettingsChanged(): void;
					public startInspector(): void;
					public getLastErrorStack(): native.Array<com.facebook.react.devsupport.interfaces.StackFrame>;
					public addCustomDevOption(param0: string, param1: com.facebook.react.devsupport.interfaces.DevOptionHandler): void;
					public getDevSupportEnabled(): boolean;
					public getDownloadedJSBundleFile(): string;
					public showDevOptionsDialog(): void;
					public onReactInstanceDestroyed(param0: com.facebook.react.bridge.ReactContext): void;
					public downloadBundleResourceFromUrlSync(param0: string, param1: java.io.File): java.io.File;
					public isPackagerRunning(param0: com.facebook.react.devsupport.interfaces.PackagerStatusCallback): void;
					public setFpsDebugEnabled(param0: boolean): void;
					public stopInspector(): void;
					public toggleElementInspector(): void;
					public reloadSettings(): void;
					public setDevSupportEnabled(param0: boolean): void;
					public setPackagerLocationCustomizer(param0: com.facebook.react.devsupport.interfaces.DevSupportManager.PackagerLocationCustomizer): void;
					public showNewJSError(param0: string, param1: com.facebook.react.bridge.ReadableArray, param2: number): void;
					public hideRedboxDialog(): void;
					public onPackagerDevMenuCommand(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module devsupport {
				export class DisabledDevSupportManager extends com.facebook.react.devsupport.interfaces.DevSupportManager {
					public static class: java.lang.Class<com.facebook.react.devsupport.DisabledDevSupportManager>;
					public getDevSettings(): com.facebook.react.modules.debug.interfaces.DeveloperSettings;
					public createRootView(param0: string): globalAndroid.view.View;
					public handleReloadJS(): void;
					public onNewReactContextCreated(param0: com.facebook.react.bridge.ReactContext): void;
					public setRemoteJSDebugEnabled(param0: boolean): void;
					public getLastErrorTitle(): string;
					public constructor();
					public setHotModuleReplacementEnabled(param0: boolean): void;
					public getSourceMapUrl(): string;
					public registerErrorCustomizer(param0: com.facebook.react.devsupport.interfaces.ErrorCustomizer): void;
					public hasUpToDateJSBundleInCache(): boolean;
					public getJSBundleURLForRemoteDebugging(): string;
					public destroyRootView(param0: globalAndroid.view.View): void;
					public updateJSError(param0: string, param1: com.facebook.react.bridge.ReadableArray, param2: number): void;
					public getSourceUrl(): string;
					public reloadJSFromServer(param0: string): void;
					public showNewJavaError(param0: string, param1: java.lang.Throwable): void;
					public startInspector(): void;
					public getLastErrorStack(): native.Array<com.facebook.react.devsupport.interfaces.StackFrame>;
					public addCustomDevOption(param0: string, param1: com.facebook.react.devsupport.interfaces.DevOptionHandler): void;
					public getDevSupportEnabled(): boolean;
					public getDownloadedJSBundleFile(): string;
					public showDevOptionsDialog(): void;
					public handleException(param0: java.lang.Exception): void;
					public onReactInstanceDestroyed(param0: com.facebook.react.bridge.ReactContext): void;
					public downloadBundleResourceFromUrlSync(param0: string, param1: java.io.File): java.io.File;
					public setFpsDebugEnabled(param0: boolean): void;
					public isPackagerRunning(param0: com.facebook.react.devsupport.interfaces.PackagerStatusCallback): void;
					public stopInspector(): void;
					public toggleElementInspector(): void;
					public reloadSettings(): void;
					public setDevSupportEnabled(param0: boolean): void;
					public setPackagerLocationCustomizer(param0: com.facebook.react.devsupport.interfaces.DevSupportManager.PackagerLocationCustomizer): void;
					public showNewJSError(param0: string, param1: com.facebook.react.bridge.ReadableArray, param2: number): void;
					public hideRedboxDialog(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module devsupport {
				export class DoubleTapReloadRecognizer {
					public static class: java.lang.Class<com.facebook.react.devsupport.DoubleTapReloadRecognizer>;
					public constructor();
					public didDoubleTapR(param0: number, param1: globalAndroid.view.View): boolean;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module devsupport {
				export class FpsView {
					public static class: java.lang.Class<com.facebook.react.devsupport.FpsView>;
					public onDetachedFromWindow(): void;
					public constructor(param0: com.facebook.react.bridge.ReactContext);
					public onAttachedToWindow(): void;
				}
				export module FpsView {
					export class FPSMonitorRunnable {
						public static class: java.lang.Class<com.facebook.react.devsupport.FpsView.FPSMonitorRunnable>;
						public run(): void;
						public start(): void;
						public stop(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module devsupport {
				export class HMRClient extends com.facebook.react.bridge.JavaScriptModule {
					public static class: java.lang.Class<com.facebook.react.devsupport.HMRClient>;
					/**
					 * Constructs a new instance of the com.facebook.react.devsupport.HMRClient interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						setup(param0: string, param1: string, param2: string, param3: number, param4: boolean): void;
						enable(): void;
						disable(): void;
					});
					public constructor();
					public setup(param0: string, param1: string, param2: string, param3: number, param4: boolean): void;
					public disable(): void;
					public enable(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module devsupport {
				export class InspectorPackagerConnection {
					public static class: java.lang.Class<com.facebook.react.devsupport.InspectorPackagerConnection>;
					public connect(): void;
					public sendEventToAllConnections(param0: string): void;
					public constructor(param0: string, param1: string, param2: com.facebook.react.devsupport.InspectorPackagerConnection.BundleStatusProvider);
					public closeQuietly(): void;
				}
				export module InspectorPackagerConnection {
					export class BundleStatus {
						public static class: java.lang.Class<com.facebook.react.devsupport.InspectorPackagerConnection.BundleStatus>;
						public isLastDownloadSucess: java.lang.Boolean;
						public updateTimestamp: number;
						public constructor();
						public constructor(param0: java.lang.Boolean, param1: number);
					}
					export class BundleStatusProvider {
						public static class: java.lang.Class<com.facebook.react.devsupport.InspectorPackagerConnection.BundleStatusProvider>;
						/**
						 * Constructs a new instance of the com.facebook.react.devsupport.InspectorPackagerConnection$BundleStatusProvider interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getBundleStatus(): com.facebook.react.devsupport.InspectorPackagerConnection.BundleStatus;
						});
						public constructor();
						public getBundleStatus(): com.facebook.react.devsupport.InspectorPackagerConnection.BundleStatus;
					}
					export class Connection {
						public static class: java.lang.Class<com.facebook.react.devsupport.InspectorPackagerConnection.Connection>;
						public constructor(param0: com.facebook.react.devsupport.InspectorPackagerConnection, param1: string);
						public onOpen(param0: okhttp3.WebSocket, param1: okhttp3.Response): void;
						public close(): void;
						public onClosed(param0: okhttp3.WebSocket, param1: number, param2: string): void;
						public onFailure(param0: okhttp3.WebSocket, param1: java.lang.Throwable, param2: okhttp3.Response): void;
						public connect(): void;
						public send(param0: org.json.JSONObject): void;
						public onMessage(param0: okhttp3.WebSocket, param1: string): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module devsupport {
				export class JSCHeapCapture extends com.facebook.fbreact.specs.NativeJSCHeapCaptureSpec {
					public static class: java.lang.Class<com.facebook.react.devsupport.JSCHeapCapture>;
					public static TAG: string;
					public captureHeap(param0: string, param1: com.facebook.react.devsupport.JSCHeapCapture.CaptureCallback): void;
					public onCatalystInstanceDestroy(): void;
					public constructor();
					public getName(): string;
					public canOverrideExistingModule(): boolean;
					public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
					public captureComplete(param0: string, param1: string): void;
					public initialize(): void;
					public invalidate(): void;
				}
				export module JSCHeapCapture {
					export class CaptureCallback {
						public static class: java.lang.Class<com.facebook.react.devsupport.JSCHeapCapture.CaptureCallback>;
						/**
						 * Constructs a new instance of the com.facebook.react.devsupport.JSCHeapCapture$CaptureCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onSuccess(param0: java.io.File): void;
							onFailure(param0: com.facebook.react.devsupport.JSCHeapCapture.CaptureException): void;
						});
						public constructor();
						public onFailure(param0: com.facebook.react.devsupport.JSCHeapCapture.CaptureException): void;
						public onSuccess(param0: java.io.File): void;
					}
					export class CaptureException {
						public static class: java.lang.Class<com.facebook.react.devsupport.JSCHeapCapture.CaptureException>;
					}
					export class HeapCapture extends com.facebook.react.bridge.JavaScriptModule {
						public static class: java.lang.Class<com.facebook.react.devsupport.JSCHeapCapture.HeapCapture>;
						/**
						 * Constructs a new instance of the com.facebook.react.devsupport.JSCHeapCapture$HeapCapture interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							captureHeap(param0: string): void;
						});
						public constructor();
						public captureHeap(param0: string): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module devsupport {
				export class JSDebuggerWebSocketClient {
					public static class: java.lang.Class<com.facebook.react.devsupport.JSDebuggerWebSocketClient>;
					public onClosed(param0: okhttp3.WebSocket, param1: number, param2: string): void;
					public loadBundle(param0: string, param1: java.util.HashMap<string,string>, param2: com.facebook.react.devsupport.JSDebuggerWebSocketClient.JSDebuggerCallback): void;
					public onFailure(param0: okhttp3.WebSocket, param1: java.lang.Throwable, param2: okhttp3.Response): void;
					public constructor();
					public closeQuietly(): void;
					public onMessage(param0: okhttp3.WebSocket, param1: string): void;
					public connect(param0: string, param1: com.facebook.react.devsupport.JSDebuggerWebSocketClient.JSDebuggerCallback): void;
					public executeJSCall(param0: string, param1: string, param2: com.facebook.react.devsupport.JSDebuggerWebSocketClient.JSDebuggerCallback): void;
					public onOpen(param0: okhttp3.WebSocket, param1: okhttp3.Response): void;
					public prepareJSRuntime(param0: com.facebook.react.devsupport.JSDebuggerWebSocketClient.JSDebuggerCallback): void;
				}
				export module JSDebuggerWebSocketClient {
					export class JSDebuggerCallback {
						public static class: java.lang.Class<com.facebook.react.devsupport.JSDebuggerWebSocketClient.JSDebuggerCallback>;
						/**
						 * Constructs a new instance of the com.facebook.react.devsupport.JSDebuggerWebSocketClient$JSDebuggerCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onSuccess(param0: string): void;
							onFailure(param0: java.lang.Throwable): void;
						});
						public constructor();
						public onFailure(param0: java.lang.Throwable): void;
						public onSuccess(param0: string): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module devsupport {
				export class JSDevSupport extends com.facebook.fbreact.specs.NativeJSDevSupportSpec {
					public static class: java.lang.Class<com.facebook.react.devsupport.JSDevSupport>;
					public static MODULE_NAME: string;
					public static ERROR_CODE_EXCEPTION: number;
					public static ERROR_CODE_VIEW_NOT_FOUND: number;
					public computeDeepestJSHierarchy(param0: globalAndroid.view.View, param1: com.facebook.react.devsupport.JSDevSupport.DevSupportCallback): void;
					public onCatalystInstanceDestroy(): void;
					public constructor();
					public getJSHierarchy(param0: number, param1: com.facebook.react.devsupport.JSDevSupport.DevSupportCallback): void;
					public getName(): string;
					public canOverrideExistingModule(): boolean;
					public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
					public onSuccess(param0: string): void;
					public onFailure(param0: number, param1: string): void;
					public initialize(): void;
					public getTypedExportedConstants(): java.util.Map<string,any>;
					public invalidate(): void;
				}
				export module JSDevSupport {
					export class DevSupportCallback {
						public static class: java.lang.Class<com.facebook.react.devsupport.JSDevSupport.DevSupportCallback>;
						/**
						 * Constructs a new instance of the com.facebook.react.devsupport.JSDevSupport$DevSupportCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onSuccess(param0: string): void;
							onFailure(param0: number, param1: java.lang.Exception): void;
						});
						public constructor();
						public onSuccess(param0: string): void;
						public onFailure(param0: number, param1: java.lang.Exception): void;
					}
					export class JSDevSupportModule extends com.facebook.react.bridge.JavaScriptModule {
						public static class: java.lang.Class<com.facebook.react.devsupport.JSDevSupport.JSDevSupportModule>;
						/**
						 * Constructs a new instance of the com.facebook.react.devsupport.JSDevSupport$JSDevSupportModule interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getJSHierarchy(param0: number): void;
						});
						public constructor();
						public getJSHierarchy(param0: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module devsupport {
				export class JSException {
					public static class: java.lang.Class<com.facebook.react.devsupport.JSException>;
					public constructor(param0: string, param1: string);
					public getStack(): string;
					public constructor(param0: string, param1: string, param2: java.lang.Throwable);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module devsupport {
				export class LogBoxDialog {
					public static class: java.lang.Class<com.facebook.react.devsupport.LogBoxDialog>;
					public constructor(param0: globalAndroid.app.Activity, param1: globalAndroid.view.View);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module devsupport {
				export class LogBoxModule extends com.facebook.fbreact.specs.NativeLogBoxSpec {
					public static class: java.lang.Class<com.facebook.react.devsupport.LogBoxModule>;
					public static NAME: string;
					public show(): void;
					public onCatalystInstanceDestroy(): void;
					public constructor();
					public getName(): string;
					public canOverrideExistingModule(): boolean;
					public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
					public hide(): void;
					public constructor(param0: com.facebook.react.bridge.ReactApplicationContext, param1: com.facebook.react.devsupport.interfaces.DevSupportManager);
					public initialize(): void;
					public invalidate(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module devsupport {
				export class MultipartStreamReader {
					public static class: java.lang.Class<com.facebook.react.devsupport.MultipartStreamReader>;
					public constructor(param0: okio.BufferedSource, param1: string);
					public readAllParts(param0: com.facebook.react.devsupport.MultipartStreamReader.ChunkListener): boolean;
				}
				export module MultipartStreamReader {
					export class ChunkListener {
						public static class: java.lang.Class<com.facebook.react.devsupport.MultipartStreamReader.ChunkListener>;
						/**
						 * Constructs a new instance of the com.facebook.react.devsupport.MultipartStreamReader$ChunkListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onChunkComplete(param0: java.util.Map<string,string>, param1: okio.Buffer, param2: boolean): void;
							onChunkProgress(param0: java.util.Map<string,string>, param1: number, param2: number): void;
						});
						public constructor();
						public onChunkComplete(param0: java.util.Map<string,string>, param1: okio.Buffer, param2: boolean): void;
						public onChunkProgress(param0: java.util.Map<string,string>, param1: number, param2: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module devsupport {
				export class ReactInstanceManagerDevHelper {
					public static class: java.lang.Class<com.facebook.react.devsupport.ReactInstanceManagerDevHelper>;
					/**
					 * Constructs a new instance of the com.facebook.react.devsupport.ReactInstanceManagerDevHelper interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onReloadWithJSDebugger(param0: com.facebook.react.bridge.JavaJSExecutor.Factory): void;
						onJSBundleLoadedFromServer(): void;
						toggleElementInspector(): void;
						getCurrentActivity(): globalAndroid.app.Activity;
						getJavaScriptExecutorFactory(): com.facebook.react.bridge.JavaScriptExecutorFactory;
						createRootView(param0: string): globalAndroid.view.View;
						destroyRootView(param0: globalAndroid.view.View): void;
					});
					public constructor();
					public getCurrentActivity(): globalAndroid.app.Activity;
					public getJavaScriptExecutorFactory(): com.facebook.react.bridge.JavaScriptExecutorFactory;
					public createRootView(param0: string): globalAndroid.view.View;
					public onReloadWithJSDebugger(param0: com.facebook.react.bridge.JavaJSExecutor.Factory): void;
					public toggleElementInspector(): void;
					public onJSBundleLoadedFromServer(): void;
					public destroyRootView(param0: globalAndroid.view.View): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module devsupport {
				export class RedBoxDialog {
					public static class: java.lang.Class<com.facebook.react.devsupport.RedBoxDialog>;
					public resetReporting(): void;
					public onItemClick(param0: globalAndroid.widget.AdapterView<any>, param1: globalAndroid.view.View, param2: number, param3: number): void;
					public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
					public setExceptionDetails(param0: string, param1: native.Array<com.facebook.react.devsupport.interfaces.StackFrame>): void;
					public constructor(param0: globalAndroid.content.Context, param1: com.facebook.react.devsupport.interfaces.DevSupportManager, param2: com.facebook.react.devsupport.RedBoxHandler);
				}
				export module RedBoxDialog {
					export class OpenStackFrameTask extends globalAndroid.os.AsyncTask<com.facebook.react.devsupport.interfaces.StackFrame,java.lang.Void,java.lang.Void> {
						public static class: java.lang.Class<com.facebook.react.devsupport.RedBoxDialog.OpenStackFrameTask>;
						public doInBackground(param0: native.Array<com.facebook.react.devsupport.interfaces.StackFrame>): java.lang.Void;
					}
					export class StackAdapter {
						public static class: java.lang.Class<com.facebook.react.devsupport.RedBoxDialog.StackAdapter>;
						public isEnabled(param0: number): boolean;
						public areAllItemsEnabled(): boolean;
						public getItemViewType(param0: number): number;
						public constructor(param0: string, param1: native.Array<com.facebook.react.devsupport.interfaces.StackFrame>);
						public getItemId(param0: number): number;
						public getView(param0: number, param1: globalAndroid.view.View, param2: globalAndroid.view.ViewGroup): globalAndroid.view.View;
						public getCount(): number;
						public getItem(param0: number): any;
						public getViewTypeCount(): number;
					}
					export module StackAdapter {
						export class FrameViewHolder {
							public static class: java.lang.Class<com.facebook.react.devsupport.RedBoxDialog.StackAdapter.FrameViewHolder>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module devsupport {
				export class RedBoxHandler {
					public static class: java.lang.Class<com.facebook.react.devsupport.RedBoxHandler>;
					/**
					 * Constructs a new instance of the com.facebook.react.devsupport.RedBoxHandler interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						handleRedbox(param0: string, param1: native.Array<com.facebook.react.devsupport.interfaces.StackFrame>, param2: com.facebook.react.devsupport.RedBoxHandler.ErrorType): void;
						isReportEnabled(): boolean;
						reportRedbox(param0: globalAndroid.content.Context, param1: string, param2: native.Array<com.facebook.react.devsupport.interfaces.StackFrame>, param3: string, param4: com.facebook.react.devsupport.RedBoxHandler.ReportCompletedListener): void;
					});
					public constructor();
					public isReportEnabled(): boolean;
					public handleRedbox(param0: string, param1: native.Array<com.facebook.react.devsupport.interfaces.StackFrame>, param2: com.facebook.react.devsupport.RedBoxHandler.ErrorType): void;
					public reportRedbox(param0: globalAndroid.content.Context, param1: string, param2: native.Array<com.facebook.react.devsupport.interfaces.StackFrame>, param3: string, param4: com.facebook.react.devsupport.RedBoxHandler.ReportCompletedListener): void;
				}
				export module RedBoxHandler {
					export class ErrorType {
						public static class: java.lang.Class<com.facebook.react.devsupport.RedBoxHandler.ErrorType>;
						public static JS: com.facebook.react.devsupport.RedBoxHandler.ErrorType;
						public static NATIVE: com.facebook.react.devsupport.RedBoxHandler.ErrorType;
						public static valueOf(param0: string): com.facebook.react.devsupport.RedBoxHandler.ErrorType;
						public static values(): native.Array<com.facebook.react.devsupport.RedBoxHandler.ErrorType>;
						public getName(): string;
					}
					export class ReportCompletedListener {
						public static class: java.lang.Class<com.facebook.react.devsupport.RedBoxHandler.ReportCompletedListener>;
						/**
						 * Constructs a new instance of the com.facebook.react.devsupport.RedBoxHandler$ReportCompletedListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onReportSuccess(param0: globalAndroid.text.SpannedString): void;
							onReportError(param0: globalAndroid.text.SpannedString): void;
						});
						public constructor();
						public onReportSuccess(param0: globalAndroid.text.SpannedString): void;
						public onReportError(param0: globalAndroid.text.SpannedString): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module devsupport {
				export class StackTraceHelper {
					public static class: java.lang.Class<com.facebook.react.devsupport.StackTraceHelper>;
					public static COLUMN_KEY: string;
					public static LINE_NUMBER_KEY: string;
					public static formatStackTrace(param0: string, param1: native.Array<com.facebook.react.devsupport.interfaces.StackFrame>): string;
					public static formatFrameSource(param0: com.facebook.react.devsupport.interfaces.StackFrame): string;
					public static convertJsStackTrace(param0: org.json.JSONArray): native.Array<com.facebook.react.devsupport.interfaces.StackFrame>;
					public static convertJsStackTrace(param0: string): native.Array<com.facebook.react.devsupport.interfaces.StackFrame>;
					public constructor();
					public static convertJsStackTrace(param0: com.facebook.react.bridge.ReadableArray): native.Array<com.facebook.react.devsupport.interfaces.StackFrame>;
					public static convertJavaStackTrace(param0: java.lang.Throwable): native.Array<com.facebook.react.devsupport.interfaces.StackFrame>;
				}
				export module StackTraceHelper {
					export class StackFrameImpl extends com.facebook.react.devsupport.interfaces.StackFrame {
						public static class: java.lang.Class<com.facebook.react.devsupport.StackTraceHelper.StackFrameImpl>;
						public getLine(): number;
						public isCollapsed(): boolean;
						public getFileName(): string;
						public getMethod(): string;
						public toJSON(): org.json.JSONObject;
						public getFile(): string;
						public getColumn(): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module devsupport {
				export class ViewHierarchyUtil {
					public static class: java.lang.Class<com.facebook.react.devsupport.ViewHierarchyUtil>;
					public static getDeepestLeaf(param0: globalAndroid.view.View): globalAndroid.util.Pair<globalAndroid.view.View,java.lang.Integer>;
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module devsupport {
				export class WebsocketJavaScriptExecutor extends com.facebook.react.bridge.JavaJSExecutor {
					public static class: java.lang.Class<com.facebook.react.devsupport.WebsocketJavaScriptExecutor>;
					public executeJSCall(param0: string, param1: string): string;
					public setGlobalVariable(param0: string, param1: string): void;
					public constructor();
					public loadBundle(param0: string): void;
					public close(): void;
					public connect(param0: string, param1: com.facebook.react.devsupport.WebsocketJavaScriptExecutor.JSExecutorConnectCallback): void;
				}
				export module WebsocketJavaScriptExecutor {
					export class JSExecutorCallbackFuture extends com.facebook.react.devsupport.JSDebuggerWebSocketClient.JSDebuggerCallback {
						public static class: java.lang.Class<com.facebook.react.devsupport.WebsocketJavaScriptExecutor.JSExecutorCallbackFuture>;
						public get(): string;
						public onFailure(param0: java.lang.Throwable): void;
						public onSuccess(param0: string): void;
					}
					export class JSExecutorConnectCallback {
						public static class: java.lang.Class<com.facebook.react.devsupport.WebsocketJavaScriptExecutor.JSExecutorConnectCallback>;
						/**
						 * Constructs a new instance of the com.facebook.react.devsupport.WebsocketJavaScriptExecutor$JSExecutorConnectCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onSuccess(): void;
							onFailure(param0: java.lang.Throwable): void;
						});
						public constructor();
						public onFailure(param0: java.lang.Throwable): void;
						public onSuccess(): void;
					}
					export class WebsocketExecutorTimeoutException {
						public static class: java.lang.Class<com.facebook.react.devsupport.WebsocketJavaScriptExecutor.WebsocketExecutorTimeoutException>;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module devsupport {
				export class WindowOverlayCompat {
					public static class: java.lang.Class<com.facebook.react.devsupport.WindowOverlayCompat>;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module devsupport {
				export module interfaces {
					export class DevBundleDownloadListener {
						public static class: java.lang.Class<com.facebook.react.devsupport.interfaces.DevBundleDownloadListener>;
						/**
						 * Constructs a new instance of the com.facebook.react.devsupport.interfaces.DevBundleDownloadListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onSuccess(): void;
							onProgress(param0: string, param1: java.lang.Integer, param2: java.lang.Integer): void;
							onFailure(param0: java.lang.Exception): void;
						});
						public constructor();
						public onFailure(param0: java.lang.Exception): void;
						public onProgress(param0: string, param1: java.lang.Integer, param2: java.lang.Integer): void;
						public onSuccess(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module devsupport {
				export module interfaces {
					export class DevOptionHandler {
						public static class: java.lang.Class<com.facebook.react.devsupport.interfaces.DevOptionHandler>;
						/**
						 * Constructs a new instance of the com.facebook.react.devsupport.interfaces.DevOptionHandler interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onOptionSelected(): void;
						});
						public constructor();
						public onOptionSelected(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module devsupport {
				export module interfaces {
					export class DevSupportManager extends com.facebook.react.bridge.NativeModuleCallExceptionHandler {
						public static class: java.lang.Class<com.facebook.react.devsupport.interfaces.DevSupportManager>;
						/**
						 * Constructs a new instance of the com.facebook.react.devsupport.interfaces.DevSupportManager interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							showNewJavaError(param0: string, param1: java.lang.Throwable): void;
							addCustomDevOption(param0: string, param1: com.facebook.react.devsupport.interfaces.DevOptionHandler): void;
							createRootView(param0: string): globalAndroid.view.View;
							destroyRootView(param0: globalAndroid.view.View): void;
							showNewJSError(param0: string, param1: com.facebook.react.bridge.ReadableArray, param2: number): void;
							updateJSError(param0: string, param1: com.facebook.react.bridge.ReadableArray, param2: number): void;
							hideRedboxDialog(): void;
							showDevOptionsDialog(): void;
							setDevSupportEnabled(param0: boolean): void;
							startInspector(): void;
							stopInspector(): void;
							getDevSupportEnabled(): boolean;
							getDevSettings(): com.facebook.react.modules.debug.interfaces.DeveloperSettings;
							onNewReactContextCreated(param0: com.facebook.react.bridge.ReactContext): void;
							onReactInstanceDestroyed(param0: com.facebook.react.bridge.ReactContext): void;
							getSourceMapUrl(): string;
							getSourceUrl(): string;
							getJSBundleURLForRemoteDebugging(): string;
							getDownloadedJSBundleFile(): string;
							hasUpToDateJSBundleInCache(): boolean;
							reloadSettings(): void;
							handleReloadJS(): void;
							reloadJSFromServer(param0: string): void;
							isPackagerRunning(param0: com.facebook.react.devsupport.interfaces.PackagerStatusCallback): void;
							setHotModuleReplacementEnabled(param0: boolean): void;
							setRemoteJSDebugEnabled(param0: boolean): void;
							setFpsDebugEnabled(param0: boolean): void;
							toggleElementInspector(): void;
							downloadBundleResourceFromUrlSync(param0: string, param1: java.io.File): java.io.File;
							getLastErrorTitle(): string;
							getLastErrorStack(): native.Array<com.facebook.react.devsupport.interfaces.StackFrame>;
							registerErrorCustomizer(param0: com.facebook.react.devsupport.interfaces.ErrorCustomizer): void;
							setPackagerLocationCustomizer(param0: com.facebook.react.devsupport.interfaces.DevSupportManager.PackagerLocationCustomizer): void;
							handleException(param0: java.lang.Exception): void;
						});
						public constructor();
						public updateJSError(param0: string, param1: com.facebook.react.bridge.ReadableArray, param2: number): void;
						public getDevSettings(): com.facebook.react.modules.debug.interfaces.DeveloperSettings;
						public getSourceUrl(): string;
						public setFpsDebugEnabled(param0: boolean): void;
						public reloadSettings(): void;
						public hasUpToDateJSBundleInCache(): boolean;
						public onReactInstanceDestroyed(param0: com.facebook.react.bridge.ReactContext): void;
						public toggleElementInspector(): void;
						public handleReloadJS(): void;
						public startInspector(): void;
						public reloadJSFromServer(param0: string): void;
						public addCustomDevOption(param0: string, param1: com.facebook.react.devsupport.interfaces.DevOptionHandler): void;
						public getLastErrorStack(): native.Array<com.facebook.react.devsupport.interfaces.StackFrame>;
						public setPackagerLocationCustomizer(param0: com.facebook.react.devsupport.interfaces.DevSupportManager.PackagerLocationCustomizer): void;
						public showDevOptionsDialog(): void;
						public getJSBundleURLForRemoteDebugging(): string;
						public setDevSupportEnabled(param0: boolean): void;
						public setRemoteJSDebugEnabled(param0: boolean): void;
						public handleException(param0: java.lang.Exception): void;
						public showNewJSError(param0: string, param1: com.facebook.react.bridge.ReadableArray, param2: number): void;
						public isPackagerRunning(param0: com.facebook.react.devsupport.interfaces.PackagerStatusCallback): void;
						public setHotModuleReplacementEnabled(param0: boolean): void;
						public showNewJavaError(param0: string, param1: java.lang.Throwable): void;
						public downloadBundleResourceFromUrlSync(param0: string, param1: java.io.File): java.io.File;
						public destroyRootView(param0: globalAndroid.view.View): void;
						public stopInspector(): void;
						public getDownloadedJSBundleFile(): string;
						public registerErrorCustomizer(param0: com.facebook.react.devsupport.interfaces.ErrorCustomizer): void;
						public createRootView(param0: string): globalAndroid.view.View;
						public getSourceMapUrl(): string;
						public onNewReactContextCreated(param0: com.facebook.react.bridge.ReactContext): void;
						public getLastErrorTitle(): string;
						public hideRedboxDialog(): void;
						public getDevSupportEnabled(): boolean;
					}
					export module DevSupportManager {
						export class PackagerLocationCustomizer {
							public static class: java.lang.Class<com.facebook.react.devsupport.interfaces.DevSupportManager.PackagerLocationCustomizer>;
							/**
							 * Constructs a new instance of the com.facebook.react.devsupport.interfaces.DevSupportManager$PackagerLocationCustomizer interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								run(param0: java.lang.Runnable): void;
							});
							public constructor();
							public run(param0: java.lang.Runnable): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module devsupport {
				export module interfaces {
					export class ErrorCustomizer {
						public static class: java.lang.Class<com.facebook.react.devsupport.interfaces.ErrorCustomizer>;
						/**
						 * Constructs a new instance of the com.facebook.react.devsupport.interfaces.ErrorCustomizer interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							customizeErrorInfo(param0: globalAndroid.util.Pair<string,native.Array<com.facebook.react.devsupport.interfaces.StackFrame>>): globalAndroid.util.Pair<string,native.Array<com.facebook.react.devsupport.interfaces.StackFrame>>;
						});
						public constructor();
						public customizeErrorInfo(param0: globalAndroid.util.Pair<string,native.Array<com.facebook.react.devsupport.interfaces.StackFrame>>): globalAndroid.util.Pair<string,native.Array<com.facebook.react.devsupport.interfaces.StackFrame>>;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module devsupport {
				export module interfaces {
					export class PackagerStatusCallback {
						public static class: java.lang.Class<com.facebook.react.devsupport.interfaces.PackagerStatusCallback>;
						/**
						 * Constructs a new instance of the com.facebook.react.devsupport.interfaces.PackagerStatusCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onPackagerStatusFetched(param0: boolean): void;
						});
						public constructor();
						public onPackagerStatusFetched(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module devsupport {
				export module interfaces {
					export class StackFrame {
						public static class: java.lang.Class<com.facebook.react.devsupport.interfaces.StackFrame>;
						/**
						 * Constructs a new instance of the com.facebook.react.devsupport.interfaces.StackFrame interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getFile(): string;
							getMethod(): string;
							getLine(): number;
							getColumn(): number;
							getFileName(): string;
							isCollapsed(): boolean;
							toJSON(): org.json.JSONObject;
						});
						public constructor();
						public getLine(): number;
						public isCollapsed(): boolean;
						public getFileName(): string;
						public getMethod(): string;
						public toJSON(): org.json.JSONObject;
						public getFile(): string;
						public getColumn(): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module fabric {
				export class Binding {
					public static class: java.lang.Class<com.facebook.react.fabric.Binding>;
					public setPixelDensity(param0: number): void;
					public startSurfaceWithConstraints(param0: number, param1: string, param2: com.facebook.react.bridge.NativeMap, param3: number, param4: number, param5: number, param6: number, param7: boolean, param8: boolean): void;
					public constructor();
					public stopSurface(param0: number): void;
					public renderTemplateToSurface(param0: number, param1: string): void;
					public setConstraints(param0: number, param1: number, param2: number, param3: number, param4: number, param5: boolean, param6: boolean): void;
					public unregister(): void;
					public register(param0: com.facebook.react.bridge.JavaScriptContextHolder, param1: com.facebook.react.fabric.FabricUIManager, param2: com.facebook.react.fabric.events.EventBeatManager, param3: com.facebook.react.bridge.queue.MessageQueueThread, param4: com.facebook.react.fabric.ComponentFactoryDelegate, param5: com.facebook.react.fabric.ReactNativeConfig): void;
					public startSurface(param0: number, param1: string, param2: com.facebook.react.bridge.NativeMap): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module fabric {
				export class ComponentFactoryDelegate {
					public static class: java.lang.Class<com.facebook.react.fabric.ComponentFactoryDelegate>;
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module fabric {
				export class FabricComponents {
					public static class: java.lang.Class<com.facebook.react.fabric.FabricComponents>;
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module fabric {
				export class FabricJSIModuleProvider extends com.facebook.react.bridge.JSIModuleProvider<com.facebook.react.bridge.UIManager> {
					public static class: java.lang.Class<com.facebook.react.fabric.FabricJSIModuleProvider>;
					public get(): com.facebook.react.bridge.UIManager;
					public get(): any;
					public constructor(param0: com.facebook.react.bridge.ReactApplicationContext, param1: com.facebook.react.bridge.JavaScriptContextHolder, param2: com.facebook.react.fabric.ComponentFactoryDelegate, param3: com.facebook.react.fabric.ReactNativeConfig);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module fabric {
				export class FabricSoLoader {
					public static class: java.lang.Class<com.facebook.react.fabric.FabricSoLoader>;
					public constructor();
					public static staticInit(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module fabric {
				export class FabricUIManager implements com.facebook.react.bridge.UIManager, com.facebook.react.bridge.LifecycleEventListener {
					public static class: java.lang.Class<com.facebook.react.fabric.FabricUIManager>;
					public static TAG: string;
					public static IS_DEVELOPMENT_ENVIRONMENT: boolean;
					public static ENABLE_FABRIC_LOGS: boolean;
					public addRootView(param0: globalAndroid.view.View, param1: com.facebook.react.bridge.WritableMap, param2: string): number;
					public stopSurface(param0: number): void;
					public setJSResponder(param0: number, param1: number, param2: boolean): void;
					public getEventDispatcher(): com.facebook.react.uimanager.events.EventDispatcher;
					public synchronouslyUpdateViewOnUIThread(param0: number, param1: com.facebook.react.bridge.ReadableMap): void;
					public getPerformanceCounters(): java.util.Map<string,java.lang.Long>;
					public onHostDestroy(): void;
					public onHostPause(): void;
					public dispatchCommand(param0: number, param1: number, param2: com.facebook.react.bridge.ReadableArray): void;
					public dispatchCommand(param0: number, param1: string, param2: com.facebook.react.bridge.ReadableArray): void;
					public startSurface(param0: globalAndroid.view.View, param1: string, param2: com.facebook.react.bridge.WritableMap, param3: number, param4: number): number;
					public onCatalystInstanceDestroy(): void;
					public onHostResume(): void;
					public updateRootLayoutSpecs(param0: number, param1: number, param2: number): void;
					public setBinding(param0: com.facebook.react.fabric.Binding): void;
					/** @deprecated */
					public dispatchCommand(param0: number, param1: number, param2: com.facebook.react.bridge.ReadableArray): void;
					public onRequestEventBeat(): void;
					public receiveEvent(param0: number, param1: string, param2: com.facebook.react.bridge.WritableMap): void;
					public profileNextBatch(): void;
					public clearJSResponder(): void;
					public sendAccessibilityEvent(param0: number, param1: number): void;
					public getEventDispatcher(): any;
					public constructor(param0: com.facebook.react.bridge.ReactApplicationContext, param1: com.facebook.react.uimanager.ViewManagerRegistry, param2: com.facebook.react.uimanager.events.EventDispatcher, param3: com.facebook.react.fabric.events.EventBeatManager);
					public initialize(): void;
				}
				export module FabricUIManager {
					export class DispatchUIFrameCallback extends com.facebook.react.fabric.GuardedFrameCallback {
						public static class: java.lang.Class<com.facebook.react.fabric.FabricUIManager.DispatchUIFrameCallback>;
						public doFrameGuarded(param0: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module fabric {
				export abstract class GuardedFrameCallback extends com.facebook.react.modules.core.ChoreographerCompat.FrameCallback {
					public static class: java.lang.Class<com.facebook.react.fabric.GuardedFrameCallback>;
					/** @deprecated */
					public constructor(param0: com.facebook.react.bridge.ReactContext);
					public doFrameGuarded(param0: number): void;
					public doFrame(param0: number): void;
					public constructor();
					public constructor(param0: com.facebook.react.bridge.NativeModuleCallExceptionHandler);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module fabric {
				export class ReactNativeConfig {
					public static class: java.lang.Class<com.facebook.react.fabric.ReactNativeConfig>;
					/**
					 * Constructs a new instance of the com.facebook.react.fabric.ReactNativeConfig interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						getBool(param0: string): boolean;
						getInt64(param0: string): number;
						getString(param0: string): string;
						getDouble(param0: string): number;
					});
					public constructor();
					public getInt64(param0: string): number;
					public getBool(param0: string): boolean;
					public getDouble(param0: string): number;
					public getString(param0: string): string;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module fabric {
				export class StateWrapperImpl extends com.facebook.react.uimanager.StateWrapper {
					public static class: java.lang.Class<com.facebook.react.fabric.StateWrapperImpl>;
					public updateState(param0: com.facebook.react.bridge.WritableMap): void;
					public updateStateImpl(param0: com.facebook.react.bridge.NativeMap): void;
					public getState(): com.facebook.react.bridge.ReadableNativeMap;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module fabric {
				export module events {
					export class EventBeatManager extends com.facebook.react.uimanager.events.BatchEventDispatchedListener {
						public static class: java.lang.Class<com.facebook.react.fabric.events.EventBeatManager>;
						public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
						public onBatchEventDispatched(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module fabric {
				export module events {
					export class EventEmitterWrapper {
						public static class: java.lang.Class<com.facebook.react.fabric.events.EventEmitterWrapper>;
						public invoke(param0: string, param1: com.facebook.react.bridge.WritableMap): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module fabric {
				export module events {
					export class FabricEventEmitter extends com.facebook.react.uimanager.events.RCTEventEmitter {
						public static class: java.lang.Class<com.facebook.react.fabric.events.FabricEventEmitter>;
						public receiveTouches(param0: string, param1: com.facebook.react.bridge.WritableArray, param2: com.facebook.react.bridge.WritableArray): void;
						public constructor(param0: com.facebook.react.fabric.FabricUIManager);
						public receiveEvent(param0: number, param1: string, param2: com.facebook.react.bridge.WritableMap): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module fabric {
				export module mounting {
					export class LayoutMetricsConversions {
						public static class: java.lang.Class<com.facebook.react.fabric.mounting.LayoutMetricsConversions>;
						public static getYogaSize(param0: number, param1: number): number;
						public constructor();
						public static getMaxSize(param0: number): number;
						public static getYogaMeasureMode(param0: number, param1: number): com.facebook.yoga.YogaMeasureMode;
						public static getMinSize(param0: number): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module fabric {
				export module mounting {
					export class MountingManager {
						public static class: java.lang.Class<com.facebook.react.fabric.mounting.MountingManager>;
						public static TAG: string;
						public updateState(param0: number, param1: com.facebook.react.uimanager.StateWrapper): void;
						public removeViewAt(param0: number, param1: number): void;
						public addRootView(param0: number, param1: globalAndroid.view.View): void;
						public updateProps(param0: number, param1: com.facebook.react.bridge.ReadableMap): void;
						public deleteView(param0: number): void;
						public getEventEmitter(param0: number): com.facebook.react.fabric.events.EventEmitterWrapper;
						public constructor(param0: com.facebook.react.uimanager.ViewManagerRegistry);
						public sendAccessibilityEvent(param0: number, param1: number): void;
						public preallocateView(param0: com.facebook.react.uimanager.ThemedReactContext, param1: string, param2: number, param3: com.facebook.react.bridge.ReadableMap, param4: com.facebook.react.uimanager.StateWrapper, param5: boolean): void;
						public updateLocalData(param0: number, param1: com.facebook.react.bridge.ReadableMap): void;
						public measure(param0: globalAndroid.content.Context, param1: string, param2: com.facebook.react.bridge.ReadableMap, param3: com.facebook.react.bridge.ReadableMap, param4: com.facebook.react.bridge.ReadableMap, param5: number, param6: com.facebook.yoga.YogaMeasureMode, param7: number, param8: com.facebook.yoga.YogaMeasureMode, param9: native.Array<number>): number;
						public createView(param0: com.facebook.react.uimanager.ThemedReactContext, param1: string, param2: number, param3: com.facebook.react.bridge.ReadableMap, param4: com.facebook.react.uimanager.StateWrapper, param5: boolean): void;
						/** @deprecated */
						public receiveCommand(param0: number, param1: number, param2: com.facebook.react.bridge.ReadableArray): void;
						public receiveCommand(param0: number, param1: string, param2: com.facebook.react.bridge.ReadableArray): void;
						public setJSResponder(param0: number, param1: number, param2: boolean): void;
						public updateEventEmitter(param0: number, param1: com.facebook.react.fabric.events.EventEmitterWrapper): void;
						public updateLayout(param0: number, param1: number, param2: number, param3: number, param4: number): void;
						public clearJSResponder(): void;
						public updatePadding(param0: number, param1: number, param2: number, param3: number, param4: number): void;
						public addViewAt(param0: number, param1: number, param2: number): void;
					}
					export module MountingManager {
						export class ViewState {
							public static class: java.lang.Class<com.facebook.react.fabric.mounting.MountingManager.ViewState>;
							public mCurrentProps: com.facebook.react.uimanager.ReactStylesDiffMap;
							public mCurrentLocalData: com.facebook.react.bridge.ReadableMap;
							public mCurrentState: com.facebook.react.bridge.ReadableMap;
							public mEventEmitter: com.facebook.react.fabric.events.EventEmitterWrapper;
							public toString(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module fabric {
				export module mounting {
					export module mountitems {
						export class BatchMountItem extends com.facebook.react.fabric.mounting.mountitems.MountItem {
							public static class: java.lang.Class<com.facebook.react.fabric.mounting.mountitems.BatchMountItem>;
							public constructor(param0: native.Array<com.facebook.react.fabric.mounting.mountitems.MountItem>, param1: number, param2: number);
							public execute(param0: com.facebook.react.fabric.mounting.MountingManager): void;
							public toString(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module fabric {
				export module mounting {
					export module mountitems {
						export class CreateMountItem extends com.facebook.react.fabric.mounting.mountitems.MountItem {
							public static class: java.lang.Class<com.facebook.react.fabric.mounting.mountitems.CreateMountItem>;
							public execute(param0: com.facebook.react.fabric.mounting.MountingManager): void;
							public toString(): string;
							public constructor(param0: com.facebook.react.uimanager.ThemedReactContext, param1: number, param2: number, param3: string, param4: com.facebook.react.bridge.ReadableMap, param5: com.facebook.react.uimanager.StateWrapper, param6: boolean);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module fabric {
				export module mounting {
					export module mountitems {
						export class DeleteMountItem extends com.facebook.react.fabric.mounting.mountitems.MountItem {
							public static class: java.lang.Class<com.facebook.react.fabric.mounting.mountitems.DeleteMountItem>;
							public execute(param0: com.facebook.react.fabric.mounting.MountingManager): void;
							public toString(): string;
							public constructor(param0: number);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module fabric {
				export module mounting {
					export module mountitems {
						export abstract class DispatchCommandMountItem extends com.facebook.react.fabric.mounting.mountitems.MountItem {
							public static class: java.lang.Class<com.facebook.react.fabric.mounting.mountitems.DispatchCommandMountItem>;
							public constructor();
							public getRetries(): number;
							public execute(param0: com.facebook.react.fabric.mounting.MountingManager): void;
							public incrementRetries(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module fabric {
				export module mounting {
					export module mountitems {
						export class DispatchIntCommandMountItem extends com.facebook.react.fabric.mounting.mountitems.DispatchCommandMountItem {
							public static class: java.lang.Class<com.facebook.react.fabric.mounting.mountitems.DispatchIntCommandMountItem>;
							public constructor();
							public constructor(param0: number, param1: number, param2: com.facebook.react.bridge.ReadableArray);
							public execute(param0: com.facebook.react.fabric.mounting.MountingManager): void;
							public toString(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module fabric {
				export module mounting {
					export module mountitems {
						export class DispatchStringCommandMountItem extends com.facebook.react.fabric.mounting.mountitems.DispatchCommandMountItem {
							public static class: java.lang.Class<com.facebook.react.fabric.mounting.mountitems.DispatchStringCommandMountItem>;
							public constructor();
							public constructor(param0: number, param1: string, param2: com.facebook.react.bridge.ReadableArray);
							public execute(param0: com.facebook.react.fabric.mounting.MountingManager): void;
							public toString(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module fabric {
				export module mounting {
					export module mountitems {
						export class InsertMountItem extends com.facebook.react.fabric.mounting.mountitems.MountItem {
							public static class: java.lang.Class<com.facebook.react.fabric.mounting.mountitems.InsertMountItem>;
							public constructor(param0: number, param1: number, param2: number);
							public getParentReactTag(): number;
							public getIndex(): number;
							public execute(param0: com.facebook.react.fabric.mounting.MountingManager): void;
							public toString(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module fabric {
				export module mounting {
					export module mountitems {
						export class MountItem {
							public static class: java.lang.Class<com.facebook.react.fabric.mounting.mountitems.MountItem>;
							/**
							 * Constructs a new instance of the com.facebook.react.fabric.mounting.mountitems.MountItem interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								execute(param0: com.facebook.react.fabric.mounting.MountingManager): void;
							});
							public constructor();
							public execute(param0: com.facebook.react.fabric.mounting.MountingManager): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module fabric {
				export module mounting {
					export module mountitems {
						export class PreAllocateViewMountItem extends com.facebook.react.fabric.mounting.mountitems.MountItem {
							public static class: java.lang.Class<com.facebook.react.fabric.mounting.mountitems.PreAllocateViewMountItem>;
							public execute(param0: com.facebook.react.fabric.mounting.MountingManager): void;
							public toString(): string;
							public constructor(param0: com.facebook.react.uimanager.ThemedReactContext, param1: number, param2: number, param3: string, param4: com.facebook.react.bridge.ReadableMap, param5: com.facebook.react.uimanager.StateWrapper, param6: boolean);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module fabric {
				export module mounting {
					export module mountitems {
						export class RemoveDeleteMultiMountItem extends com.facebook.react.fabric.mounting.mountitems.MountItem {
							public static class: java.lang.Class<com.facebook.react.fabric.mounting.mountitems.RemoveDeleteMultiMountItem>;
							public constructor(param0: native.Array<number>);
							public execute(param0: com.facebook.react.fabric.mounting.MountingManager): void;
							public toString(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module fabric {
				export module mounting {
					export module mountitems {
						export class RemoveMountItem extends com.facebook.react.fabric.mounting.mountitems.MountItem {
							public static class: java.lang.Class<com.facebook.react.fabric.mounting.mountitems.RemoveMountItem>;
							public constructor(param0: number, param1: number, param2: number);
							public getParentReactTag(): number;
							public getIndex(): number;
							public execute(param0: com.facebook.react.fabric.mounting.MountingManager): void;
							public toString(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module fabric {
				export module mounting {
					export module mountitems {
						export class SendAccessibilityEvent extends com.facebook.react.fabric.mounting.mountitems.MountItem {
							public static class: java.lang.Class<com.facebook.react.fabric.mounting.mountitems.SendAccessibilityEvent>;
							public constructor(param0: number, param1: number);
							public execute(param0: com.facebook.react.fabric.mounting.MountingManager): void;
							public toString(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module fabric {
				export module mounting {
					export module mountitems {
						export class UpdateEventEmitterMountItem extends com.facebook.react.fabric.mounting.mountitems.MountItem {
							public static class: java.lang.Class<com.facebook.react.fabric.mounting.mountitems.UpdateEventEmitterMountItem>;
							public constructor(param0: number, param1: com.facebook.react.fabric.events.EventEmitterWrapper);
							public execute(param0: com.facebook.react.fabric.mounting.MountingManager): void;
							public toString(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module fabric {
				export module mounting {
					export module mountitems {
						export class UpdateLayoutMountItem extends com.facebook.react.fabric.mounting.mountitems.MountItem {
							public static class: java.lang.Class<com.facebook.react.fabric.mounting.mountitems.UpdateLayoutMountItem>;
							public getHeight(): number;
							public getWidth(): number;
							public getY(): number;
							public constructor(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number);
							public execute(param0: com.facebook.react.fabric.mounting.MountingManager): void;
							public toString(): string;
							public getLayoutDirection(): number;
							public getX(): number;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module fabric {
				export module mounting {
					export module mountitems {
						export class UpdateLocalDataMountItem extends com.facebook.react.fabric.mounting.mountitems.MountItem {
							public static class: java.lang.Class<com.facebook.react.fabric.mounting.mountitems.UpdateLocalDataMountItem>;
							public getNewLocalData(): com.facebook.react.bridge.ReadableMap;
							public execute(param0: com.facebook.react.fabric.mounting.MountingManager): void;
							public toString(): string;
							public constructor(param0: number, param1: com.facebook.react.bridge.ReadableMap);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module fabric {
				export module mounting {
					export module mountitems {
						export class UpdatePaddingMountItem extends com.facebook.react.fabric.mounting.mountitems.MountItem {
							public static class: java.lang.Class<com.facebook.react.fabric.mounting.mountitems.UpdatePaddingMountItem>;
							public execute(param0: com.facebook.react.fabric.mounting.MountingManager): void;
							public toString(): string;
							public constructor(param0: number, param1: number, param2: number, param3: number, param4: number);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module fabric {
				export module mounting {
					export module mountitems {
						export class UpdatePropsMountItem extends com.facebook.react.fabric.mounting.mountitems.MountItem {
							public static class: java.lang.Class<com.facebook.react.fabric.mounting.mountitems.UpdatePropsMountItem>;
							public execute(param0: com.facebook.react.fabric.mounting.MountingManager): void;
							public toString(): string;
							public constructor(param0: number, param1: com.facebook.react.bridge.ReadableMap);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module fabric {
				export module mounting {
					export module mountitems {
						export class UpdateStateMountItem extends com.facebook.react.fabric.mounting.mountitems.MountItem {
							public static class: java.lang.Class<com.facebook.react.fabric.mounting.mountitems.UpdateStateMountItem>;
							public execute(param0: com.facebook.react.fabric.mounting.MountingManager): void;
							public toString(): string;
							public constructor(param0: number, param1: com.facebook.react.uimanager.StateWrapper);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module jscexecutor {
				export class JSCExecutor extends com.facebook.react.bridge.JavaScriptExecutor {
					public static class: java.lang.Class<com.facebook.react.jscexecutor.JSCExecutor>;
					public getName(): string;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module jscexecutor {
				export class JSCExecutorFactory extends com.facebook.react.bridge.JavaScriptExecutorFactory {
					public static class: java.lang.Class<com.facebook.react.jscexecutor.JSCExecutorFactory>;
					public constructor(param0: string, param1: string);
					public startSamplingProfiler(): void;
					public toString(): string;
					public create(): com.facebook.react.bridge.JavaScriptExecutor;
					public stopSamplingProfiler(param0: string): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module jstasks {
				export class HeadlessJsTaskConfig {
					public static class: java.lang.Class<com.facebook.react.jstasks.HeadlessJsTaskConfig>;
					public constructor(param0: com.facebook.react.jstasks.HeadlessJsTaskConfig);
					public constructor(param0: string, param1: com.facebook.react.bridge.WritableMap, param2: number);
					public constructor(param0: string, param1: com.facebook.react.bridge.WritableMap);
					public constructor(param0: string, param1: com.facebook.react.bridge.WritableMap, param2: number, param3: boolean, param4: com.facebook.react.jstasks.HeadlessJsTaskRetryPolicy);
					public constructor(param0: string, param1: com.facebook.react.bridge.WritableMap, param2: number, param3: boolean);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module jstasks {
				export class HeadlessJsTaskContext {
					public static class: java.lang.Class<com.facebook.react.jstasks.HeadlessJsTaskContext>;
					public addTaskEventListener(param0: com.facebook.react.jstasks.HeadlessJsTaskEventListener): void;
					public isTaskRunning(param0: number): boolean;
					public static getInstance(param0: com.facebook.react.bridge.ReactContext): com.facebook.react.jstasks.HeadlessJsTaskContext;
					public retryTask(param0: number): boolean;
					public finishTask(param0: number): void;
					public hasActiveTasks(): boolean;
					public removeTaskEventListener(param0: com.facebook.react.jstasks.HeadlessJsTaskEventListener): void;
					public startTask(param0: com.facebook.react.jstasks.HeadlessJsTaskConfig): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module jstasks {
				export class HeadlessJsTaskEventListener {
					public static class: java.lang.Class<com.facebook.react.jstasks.HeadlessJsTaskEventListener>;
					/**
					 * Constructs a new instance of the com.facebook.react.jstasks.HeadlessJsTaskEventListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onHeadlessJsTaskStart(param0: number): void;
						onHeadlessJsTaskFinish(param0: number): void;
					});
					public constructor();
					public onHeadlessJsTaskStart(param0: number): void;
					public onHeadlessJsTaskFinish(param0: number): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module jstasks {
				export class HeadlessJsTaskRetryPolicy {
					public static class: java.lang.Class<com.facebook.react.jstasks.HeadlessJsTaskRetryPolicy>;
					/**
					 * Constructs a new instance of the com.facebook.react.jstasks.HeadlessJsTaskRetryPolicy interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						canRetry(): boolean;
						getDelay(): number;
						update(): com.facebook.react.jstasks.HeadlessJsTaskRetryPolicy;
						copy(): com.facebook.react.jstasks.HeadlessJsTaskRetryPolicy;
					});
					public constructor();
					public getDelay(): number;
					public canRetry(): boolean;
					public update(): com.facebook.react.jstasks.HeadlessJsTaskRetryPolicy;
					public copy(): com.facebook.react.jstasks.HeadlessJsTaskRetryPolicy;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module jstasks {
				export class LinearCountingRetryPolicy extends com.facebook.react.jstasks.HeadlessJsTaskRetryPolicy {
					public static class: java.lang.Class<com.facebook.react.jstasks.LinearCountingRetryPolicy>;
					public getDelay(): number;
					public canRetry(): boolean;
					public update(): com.facebook.react.jstasks.HeadlessJsTaskRetryPolicy;
					public copy(): com.facebook.react.jstasks.HeadlessJsTaskRetryPolicy;
					public constructor(param0: number, param1: number);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module jstasks {
				export class NoRetryPolicy extends com.facebook.react.jstasks.HeadlessJsTaskRetryPolicy {
					public static class: java.lang.Class<com.facebook.react.jstasks.NoRetryPolicy>;
					public static INSTANCE: com.facebook.react.jstasks.NoRetryPolicy;
					public getDelay(): number;
					public canRetry(): boolean;
					public update(): com.facebook.react.jstasks.HeadlessJsTaskRetryPolicy;
					public copy(): com.facebook.react.jstasks.HeadlessJsTaskRetryPolicy;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module module {
				export module annotations {
					export class ReactModule {
						public static class: java.lang.Class<com.facebook.react.module.annotations.ReactModule>;
						/**
						 * Constructs a new instance of the com.facebook.react.module.annotations.ReactModule interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							name(): string;
							canOverrideExistingModule(): boolean;
							needsEagerInit(): boolean;
							hasConstants(): boolean;
							isCxxModule(): boolean;
						});
						public constructor();
						public name(): string;
						public canOverrideExistingModule(): boolean;
						public needsEagerInit(): boolean;
						public hasConstants(): boolean;
						public isCxxModule(): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module module {
				export module annotations {
					export class ReactModuleList {
						public static class: java.lang.Class<com.facebook.react.module.annotations.ReactModuleList>;
						/**
						 * Constructs a new instance of the com.facebook.react.module.annotations.ReactModuleList interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							nativeModules(): native.Array<java.lang.Class<any>>;
						});
						public constructor();
						public nativeModules(): native.Array<java.lang.Class<any>>;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module module {
				export module model {
					export class ReactModuleInfo {
						public static class: java.lang.Class<com.facebook.react.module.model.ReactModuleInfo>;
						public isTurboModule(): boolean;
						public constructor(param0: string, param1: string, param2: boolean, param3: boolean, param4: boolean, param5: boolean, param6: boolean);
						public name(): string;
						public className(): string;
						public canOverrideExistingModule(): boolean;
						public needsEagerInit(): boolean;
						public hasConstants(): boolean;
						public isCxxModule(): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module module {
				export module model {
					export class ReactModuleInfoProvider {
						public static class: java.lang.Class<com.facebook.react.module.model.ReactModuleInfoProvider>;
						/**
						 * Constructs a new instance of the com.facebook.react.module.model.ReactModuleInfoProvider interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getReactModuleInfos(): java.util.Map<string,com.facebook.react.module.model.ReactModuleInfo>;
						});
						public constructor();
						public getReactModuleInfos(): java.util.Map<string,com.facebook.react.module.model.ReactModuleInfo>;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module modules {
				export module accessibilityinfo {
					export class AccessibilityInfoModule extends com.facebook.fbreact.specs.NativeAccessibilityInfoSpec implements com.facebook.react.bridge.LifecycleEventListener {
						public static class: java.lang.Class<com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule>;
						public static NAME: string;
						public constructor();
						public setAccessibilityFocus(param0: number): void;
						public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
						public canOverrideExistingModule(): boolean;
						public onCatalystInstanceDestroy(): void;
						public getName(): string;
						public isTouchExplorationEnabled(param0: com.facebook.react.bridge.Callback): void;
						public onHostPause(): void;
						public onHostDestroy(): void;
						public announceForAccessibility(param0: string): void;
						public invalidate(): void;
						public initialize(): void;
						public isReduceMotionEnabled(param0: com.facebook.react.bridge.Callback): void;
						public onHostResume(): void;
					}
					export module AccessibilityInfoModule {
						export class ReactTouchExplorationStateChangeListener {
							public static class: java.lang.Class<com.facebook.react.modules.accessibilityinfo.AccessibilityInfoModule.ReactTouchExplorationStateChangeListener>;
							public onTouchExplorationStateChanged(param0: boolean): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module modules {
				export module appearance {
					export class AppearanceModule extends com.facebook.fbreact.specs.NativeAppearanceSpec {
						public static class: java.lang.Class<com.facebook.react.modules.appearance.AppearanceModule>;
						public static NAME: string;
						public removeListeners(param0: number): void;
						public constructor();
						public getColorScheme(): string;
						public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
						public canOverrideExistingModule(): boolean;
						public constructor(param0: com.facebook.react.bridge.ReactApplicationContext, param1: com.facebook.react.modules.appearance.AppearanceModule.OverrideColorScheme);
						public emitAppearanceChanged(param0: string): void;
						public onCatalystInstanceDestroy(): void;
						public getName(): string;
						public invalidate(): void;
						public addListener(param0: string): void;
						public initialize(): void;
						public onConfigurationChanged(param0: globalAndroid.content.Context): void;
					}
					export module AppearanceModule {
						export class OverrideColorScheme {
							public static class: java.lang.Class<com.facebook.react.modules.appearance.AppearanceModule.OverrideColorScheme>;
							/**
							 * Constructs a new instance of the com.facebook.react.modules.appearance.AppearanceModule$OverrideColorScheme interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								getScheme(): string;
							});
							public constructor();
							public getScheme(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module modules {
				export module appregistry {
					export class AppRegistry extends com.facebook.react.bridge.JavaScriptModule {
						public static class: java.lang.Class<com.facebook.react.modules.appregistry.AppRegistry>;
						/**
						 * Constructs a new instance of the com.facebook.react.modules.appregistry.AppRegistry interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							runApplication(param0: string, param1: com.facebook.react.bridge.WritableMap): void;
							unmountApplicationComponentAtRootTag(param0: number): void;
							startHeadlessTask(param0: number, param1: string, param2: com.facebook.react.bridge.WritableMap): void;
						});
						public constructor();
						public unmountApplicationComponentAtRootTag(param0: number): void;
						public runApplication(param0: string, param1: com.facebook.react.bridge.WritableMap): void;
						public startHeadlessTask(param0: number, param1: string, param2: com.facebook.react.bridge.WritableMap): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module modules {
				export module appstate {
					export class AppStateModule extends com.facebook.fbreact.specs.NativeAppStateSpec implements com.facebook.react.bridge.LifecycleEventListener, com.facebook.react.bridge.WindowFocusChangeListener {
						public static class: java.lang.Class<com.facebook.react.modules.appstate.AppStateModule>;
						public static TAG: string;
						public static NAME: string;
						public static APP_STATE_ACTIVE: string;
						public static APP_STATE_BACKGROUND: string;
						public removeListeners(param0: number): void;
						public constructor();
						public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
						public canOverrideExistingModule(): boolean;
						public getTypedExportedConstants(): java.util.Map<string,any>;
						public onCatalystInstanceDestroy(): void;
						public getName(): string;
						public onHostPause(): void;
						public onHostDestroy(): void;
						public onWindowFocusChange(param0: boolean): void;
						public invalidate(): void;
						public addListener(param0: string): void;
						public initialize(): void;
						public getCurrentAppState(param0: com.facebook.react.bridge.Callback, param1: com.facebook.react.bridge.Callback): void;
						public onHostResume(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module modules {
				export module blob {
					export class BlobCollector {
						public static class: java.lang.Class<com.facebook.react.modules.blob.BlobCollector>;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module modules {
				export module blob {
					export class BlobModule extends com.facebook.fbreact.specs.NativeBlobModuleSpec {
						public static class: java.lang.Class<com.facebook.react.modules.blob.BlobModule>;
						public static NAME: string;
						public constructor();
						public removeWebSocketHandler(param0: number): void;
						public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
						public resolve(param0: string, param1: number, param2: number): native.Array<number>;
						public remove(param0: string): void;
						public canOverrideExistingModule(): boolean;
						public getTypedExportedConstants(): java.util.Map<string,any>;
						public resolve(param0: com.facebook.react.bridge.ReadableMap): native.Array<number>;
						public onCatalystInstanceDestroy(): void;
						public getName(): string;
						public sendOverSocket(param0: com.facebook.react.bridge.ReadableMap, param1: number): void;
						public resolve(param0: globalAndroid.net.Uri): native.Array<number>;
						public invalidate(): void;
						public store(param0: native.Array<number>): string;
						public initialize(): void;
						public store(param0: native.Array<number>, param1: string): void;
						public addNetworkingHandler(): void;
						public addWebSocketHandler(param0: number): void;
						public release(param0: string): void;
						public createFromParts(param0: com.facebook.react.bridge.ReadableArray, param1: string): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module modules {
				export module blob {
					export class BlobProvider {
						public static class: java.lang.Class<com.facebook.react.modules.blob.BlobProvider>;
						public constructor();
						public delete(param0: globalAndroid.net.Uri, param1: string, param2: native.Array<string>): number;
						public query(param0: globalAndroid.net.Uri, param1: native.Array<string>, param2: string, param3: native.Array<string>, param4: string): globalAndroid.database.Cursor;
						public onCreate(): boolean;
						public openFile(param0: globalAndroid.net.Uri, param1: string): globalAndroid.os.ParcelFileDescriptor;
						public getType(param0: globalAndroid.net.Uri): string;
						public update(param0: globalAndroid.net.Uri, param1: globalAndroid.content.ContentValues, param2: string, param3: native.Array<string>): number;
						public insert(param0: globalAndroid.net.Uri, param1: globalAndroid.content.ContentValues): globalAndroid.net.Uri;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module modules {
				export module blob {
					export class FileReaderModule extends com.facebook.fbreact.specs.NativeFileReaderModuleSpec {
						public static class: java.lang.Class<com.facebook.react.modules.blob.FileReaderModule>;
						public static NAME: string;
						public constructor();
						public readAsText(param0: com.facebook.react.bridge.ReadableMap, param1: string, param2: com.facebook.react.bridge.Promise): void;
						public invalidate(): void;
						public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
						public readAsDataURL(param0: com.facebook.react.bridge.ReadableMap, param1: com.facebook.react.bridge.Promise): void;
						public canOverrideExistingModule(): boolean;
						public initialize(): void;
						public onCatalystInstanceDestroy(): void;
						public getName(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module modules {
				export module camera {
					export class CameraRollManager extends com.facebook.fbreact.specs.NativeCameraRollManagerSpec {
						public static class: java.lang.Class<com.facebook.react.modules.camera.CameraRollManager>;
						public static NAME: string;
						public constructor();
						public invalidate(): void;
						public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
						public saveToCameraRoll(param0: string, param1: string, param2: com.facebook.react.bridge.Promise): void;
						public getPhotos(param0: com.facebook.react.bridge.ReadableMap, param1: com.facebook.react.bridge.Promise): void;
						public canOverrideExistingModule(): boolean;
						public initialize(): void;
						public deletePhotos(param0: com.facebook.react.bridge.ReadableArray, param1: com.facebook.react.bridge.Promise): void;
						public onCatalystInstanceDestroy(): void;
						public getName(): string;
					}
					export module CameraRollManager {
						export class GetMediaTask extends com.facebook.react.bridge.GuardedAsyncTask<java.lang.Void,java.lang.Void> {
							public static class: java.lang.Class<com.facebook.react.modules.camera.CameraRollManager.GetMediaTask>;
							public doInBackgroundGuarded(param0: native.Array<java.lang.Void>): void;
							public doInBackgroundGuarded(param0: native.Array<any>): void;
						}
						export class SaveToCameraRoll extends com.facebook.react.bridge.GuardedAsyncTask<java.lang.Void,java.lang.Void> {
							public static class: java.lang.Class<com.facebook.react.modules.camera.CameraRollManager.SaveToCameraRoll>;
							public constructor(param0: com.facebook.react.bridge.NativeModuleCallExceptionHandler);
							/** @deprecated */
							public constructor(param0: com.facebook.react.bridge.ReactContext);
							public constructor(param0: com.facebook.react.bridge.ReactContext, param1: globalAndroid.net.Uri, param2: com.facebook.react.bridge.Promise);
							public doInBackgroundGuarded(param0: native.Array<java.lang.Void>): void;
							public doInBackgroundGuarded(param0: native.Array<any>): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module modules {
				export module camera {
					export class ImageEditingManager extends com.facebook.fbreact.specs.NativeImageEditorSpec {
						public static class: java.lang.Class<com.facebook.react.modules.camera.ImageEditingManager>;
						public static NAME: string;
						public constructor();
						public invalidate(): void;
						public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
						public canOverrideExistingModule(): boolean;
						public initialize(): void;
						public onCatalystInstanceDestroy(): void;
						public getName(): string;
						public cropImage(param0: string, param1: com.facebook.react.bridge.ReadableMap, param2: com.facebook.react.bridge.Callback, param3: com.facebook.react.bridge.Callback): void;
					}
					export module ImageEditingManager {
						export class CleanTask extends com.facebook.react.bridge.GuardedAsyncTask<java.lang.Void,java.lang.Void> {
							public static class: java.lang.Class<com.facebook.react.modules.camera.ImageEditingManager.CleanTask>;
							public doInBackgroundGuarded(param0: native.Array<java.lang.Void>): void;
							public doInBackgroundGuarded(param0: native.Array<any>): void;
						}
						export class CropTask extends com.facebook.react.bridge.GuardedAsyncTask<java.lang.Void,java.lang.Void> {
							public static class: java.lang.Class<com.facebook.react.modules.camera.ImageEditingManager.CropTask>;
							public doInBackgroundGuarded(param0: native.Array<java.lang.Void>): void;
							public setTargetSize(param0: number, param1: number): void;
							public doInBackgroundGuarded(param0: native.Array<any>): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module modules {
				export module camera {
					export class ImageStoreManager extends com.facebook.fbreact.specs.NativeImageStoreSpec {
						public static class: java.lang.Class<com.facebook.react.modules.camera.ImageStoreManager>;
						public static NAME: string;
						public addImageFromBase64(param0: string, param1: com.facebook.react.bridge.Callback, param2: com.facebook.react.bridge.Callback): void;
						public constructor();
						public invalidate(): void;
						public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
						public canOverrideExistingModule(): boolean;
						public initialize(): void;
						public getBase64ForTag(param0: string, param1: com.facebook.react.bridge.Callback, param2: com.facebook.react.bridge.Callback): void;
						public onCatalystInstanceDestroy(): void;
						public getName(): string;
						public removeImageForTag(param0: string): void;
						public hasImageForTag(param0: string, param1: com.facebook.react.bridge.Callback): void;
					}
					export module ImageStoreManager {
						export class GetBase64Task extends com.facebook.react.bridge.GuardedAsyncTask<java.lang.Void,java.lang.Void> {
							public static class: java.lang.Class<com.facebook.react.modules.camera.ImageStoreManager.GetBase64Task>;
							public doInBackgroundGuarded(param0: native.Array<java.lang.Void>): void;
							public doInBackgroundGuarded(param0: native.Array<any>): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module modules {
				export module clipboard {
					export class ClipboardModule extends com.facebook.react.bridge.ContextBaseJavaModule {
						public static class: java.lang.Class<com.facebook.react.modules.clipboard.ClipboardModule>;
						public static NAME: string;
						public setString(param0: string): void;
						public constructor();
						public constructor(param0: globalAndroid.content.Context);
						public getString(param0: com.facebook.react.bridge.Promise): void;
						public canOverrideExistingModule(): boolean;
						public initialize(): void;
						public onCatalystInstanceDestroy(): void;
						public getName(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module modules {
				export module common {
					export class ModuleDataCleaner {
						public static class: java.lang.Class<com.facebook.react.modules.common.ModuleDataCleaner>;
						public constructor();
						public static cleanDataFromModules(param0: com.facebook.react.bridge.CatalystInstance): void;
					}
					export module ModuleDataCleaner {
						export class Cleanable {
							public static class: java.lang.Class<com.facebook.react.modules.common.ModuleDataCleaner.Cleanable>;
							/**
							 * Constructs a new instance of the com.facebook.react.modules.common.ModuleDataCleaner$Cleanable interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								clearSensitiveData(): void;
							});
							public constructor();
							public clearSensitiveData(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module modules {
				export module core {
					export class ChoreographerCompat {
						public static class: java.lang.Class<com.facebook.react.modules.core.ChoreographerCompat>;
						public static getInstance(): com.facebook.react.modules.core.ChoreographerCompat;
						public removeFrameCallback(param0: com.facebook.react.modules.core.ChoreographerCompat.FrameCallback): void;
						public postFrameCallbackDelayed(param0: com.facebook.react.modules.core.ChoreographerCompat.FrameCallback, param1: number): void;
						public postFrameCallback(param0: com.facebook.react.modules.core.ChoreographerCompat.FrameCallback): void;
					}
					export module ChoreographerCompat {
						export abstract class FrameCallback {
							public static class: java.lang.Class<com.facebook.react.modules.core.ChoreographerCompat.FrameCallback>;
							public constructor();
							public doFrame(param0: number): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module modules {
				export module core {
					export class DefaultHardwareBackBtnHandler {
						public static class: java.lang.Class<com.facebook.react.modules.core.DefaultHardwareBackBtnHandler>;
						/**
						 * Constructs a new instance of the com.facebook.react.modules.core.DefaultHardwareBackBtnHandler interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							invokeDefaultOnBackPressed(): void;
						});
						public constructor();
						public invokeDefaultOnBackPressed(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module modules {
				export module core {
					export class DeviceEventManagerModule extends com.facebook.fbreact.specs.NativeDeviceEventManagerSpec {
						public static class: java.lang.Class<com.facebook.react.modules.core.DeviceEventManagerModule>;
						public static NAME: string;
						public invokeDefaultBackPressHandler(): void;
						public constructor();
						public constructor(param0: com.facebook.react.bridge.ReactApplicationContext, param1: com.facebook.react.modules.core.DefaultHardwareBackBtnHandler);
						public invalidate(): void;
						public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
						public canOverrideExistingModule(): boolean;
						public initialize(): void;
						public onCatalystInstanceDestroy(): void;
						public emitNewIntentReceived(param0: globalAndroid.net.Uri): void;
						public getName(): string;
						public emitHardwareBackPressed(): void;
					}
					export module DeviceEventManagerModule {
						export class RCTDeviceEventEmitter extends com.facebook.react.bridge.JavaScriptModule {
							public static class: java.lang.Class<com.facebook.react.modules.core.DeviceEventManagerModule.RCTDeviceEventEmitter>;
							/**
							 * Constructs a new instance of the com.facebook.react.modules.core.DeviceEventManagerModule$RCTDeviceEventEmitter interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								emit(param0: string, param1: any): void;
							});
							public constructor();
							public emit(param0: string, param1: any): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module modules {
				export module core {
					export class ExceptionsManagerModule extends com.facebook.fbreact.specs.NativeExceptionsManagerSpec {
						public static class: java.lang.Class<com.facebook.react.modules.core.ExceptionsManagerModule>;
						public static NAME: string;
						public reportSoftException(param0: string, param1: com.facebook.react.bridge.ReadableArray, param2: number): void;
						public updateExceptionMessage(param0: string, param1: com.facebook.react.bridge.ReadableArray, param2: number): void;
						public constructor();
						public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
						public canOverrideExistingModule(): boolean;
						public reportException(param0: com.facebook.react.bridge.ReadableMap): void;
						public constructor(param0: com.facebook.react.devsupport.interfaces.DevSupportManager);
						public onCatalystInstanceDestroy(): void;
						public getName(): string;
						public dismissRedbox(): void;
						public invalidate(): void;
						public initialize(): void;
						public reportFatalException(param0: string, param1: com.facebook.react.bridge.ReadableArray, param2: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module modules {
				export module core {
					export class HeadlessJsTaskSupportModule extends com.facebook.fbreact.specs.NativeHeadlessJsTaskSupportSpec {
						public static class: java.lang.Class<com.facebook.react.modules.core.HeadlessJsTaskSupportModule>;
						public static NAME: string;
						public constructor();
						public invalidate(): void;
						public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
						public canOverrideExistingModule(): boolean;
						public initialize(): void;
						public onCatalystInstanceDestroy(): void;
						public notifyTaskRetry(param0: number, param1: com.facebook.react.bridge.Promise): void;
						public notifyTaskFinished(param0: number): void;
						public getName(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module modules {
				export module core {
					export class JSTimers extends com.facebook.react.bridge.JavaScriptModule {
						public static class: java.lang.Class<com.facebook.react.modules.core.JSTimers>;
						/**
						 * Constructs a new instance of the com.facebook.react.modules.core.JSTimers interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							callTimers(param0: com.facebook.react.bridge.WritableArray): void;
							callIdleCallbacks(param0: number): void;
							emitTimeDriftWarning(param0: string): void;
						});
						public constructor();
						public emitTimeDriftWarning(param0: string): void;
						public callTimers(param0: com.facebook.react.bridge.WritableArray): void;
						public callIdleCallbacks(param0: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module modules {
				export module core {
					export class JavaScriptTimerManager {
						public static class: java.lang.Class<com.facebook.react.modules.core.JavaScriptTimerManager>;
						/**
						 * Constructs a new instance of the com.facebook.react.modules.core.JavaScriptTimerManager interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							callTimers(param0: com.facebook.react.bridge.WritableArray): void;
							callIdleCallbacks(param0: number): void;
							emitTimeDriftWarning(param0: string): void;
						});
						public constructor();
						public emitTimeDriftWarning(param0: string): void;
						public callTimers(param0: com.facebook.react.bridge.WritableArray): void;
						public callIdleCallbacks(param0: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module modules {
				export module core {
					export class JavaTimerManager {
						public static class: java.lang.Class<com.facebook.react.modules.core.JavaTimerManager>;
						public onHostDestroy(): void;
						public setSendIdleEvents(param0: boolean): void;
						public constructor(param0: com.facebook.react.bridge.ReactApplicationContext, param1: com.facebook.react.modules.core.JavaScriptTimerManager, param2: com.facebook.react.modules.core.ReactChoreographer, param3: com.facebook.react.devsupport.interfaces.DevSupportManager);
						public onInstanceDestroy(): void;
						public deleteTimer(param0: number): void;
						public onHostResume(): void;
						public onHostPause(): void;
						public onHeadlessJsTaskStart(param0: number): void;
						public onHeadlessJsTaskFinish(param0: number): void;
						public createTimer(param0: number, param1: number, param2: boolean): void;
						public createAndMaybeCallTimer(param0: number, param1: number, param2: number, param3: boolean): void;
					}
					export module JavaTimerManager {
						export class IdleCallbackRunnable {
							public static class: java.lang.Class<com.facebook.react.modules.core.JavaTimerManager.IdleCallbackRunnable>;
							public cancel(): void;
							public constructor(param0: com.facebook.react.modules.core.JavaTimerManager, param1: number);
							public run(): void;
						}
						export class IdleFrameCallback extends com.facebook.react.modules.core.ChoreographerCompat.FrameCallback {
							public static class: java.lang.Class<com.facebook.react.modules.core.JavaTimerManager.IdleFrameCallback>;
							public doFrame(param0: number): void;
						}
						export class Timer {
							public static class: java.lang.Class<com.facebook.react.modules.core.JavaTimerManager.Timer>;
						}
						export class TimerFrameCallback extends com.facebook.react.modules.core.ChoreographerCompat.FrameCallback {
							public static class: java.lang.Class<com.facebook.react.modules.core.JavaTimerManager.TimerFrameCallback>;
							public doFrame(param0: number): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module modules {
				export module core {
					export class PermissionAwareActivity {
						public static class: java.lang.Class<com.facebook.react.modules.core.PermissionAwareActivity>;
						/**
						 * Constructs a new instance of the com.facebook.react.modules.core.PermissionAwareActivity interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							checkPermission(param0: string, param1: number, param2: number): number;
							checkSelfPermission(param0: string): number;
							shouldShowRequestPermissionRationale(param0: string): boolean;
							requestPermissions(param0: native.Array<string>, param1: number, param2: com.facebook.react.modules.core.PermissionListener): void;
						});
						public constructor();
						public checkSelfPermission(param0: string): number;
						public checkPermission(param0: string, param1: number, param2: number): number;
						public shouldShowRequestPermissionRationale(param0: string): boolean;
						public requestPermissions(param0: native.Array<string>, param1: number, param2: com.facebook.react.modules.core.PermissionListener): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module modules {
				export module core {
					export class PermissionListener {
						public static class: java.lang.Class<com.facebook.react.modules.core.PermissionListener>;
						/**
						 * Constructs a new instance of the com.facebook.react.modules.core.PermissionListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onRequestPermissionsResult(param0: number, param1: native.Array<string>, param2: native.Array<number>): boolean;
						});
						public constructor();
						public onRequestPermissionsResult(param0: number, param1: native.Array<string>, param2: native.Array<number>): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module modules {
				export module core {
					export class RCTNativeAppEventEmitter extends com.facebook.react.bridge.JavaScriptModule {
						public static class: java.lang.Class<com.facebook.react.modules.core.RCTNativeAppEventEmitter>;
						/**
						 * Constructs a new instance of the com.facebook.react.modules.core.RCTNativeAppEventEmitter interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							emit(param0: string, param1: any): void;
						});
						public constructor();
						public emit(param0: string, param1: any): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module modules {
				export module core {
					export class ReactChoreographer {
						public static class: java.lang.Class<com.facebook.react.modules.core.ReactChoreographer>;
						public removeFrameCallback(param0: com.facebook.react.modules.core.ReactChoreographer.CallbackType, param1: com.facebook.react.modules.core.ChoreographerCompat.FrameCallback): void;
						public static initialize(): void;
						public initializeChoreographer(param0: java.lang.Runnable): void;
						public postFrameCallback(param0: com.facebook.react.modules.core.ReactChoreographer.CallbackType, param1: com.facebook.react.modules.core.ChoreographerCompat.FrameCallback): void;
						public static getInstance(): com.facebook.react.modules.core.ReactChoreographer;
					}
					export module ReactChoreographer {
						export class CallbackType {
							public static class: java.lang.Class<com.facebook.react.modules.core.ReactChoreographer.CallbackType>;
							public static PERF_MARKERS: com.facebook.react.modules.core.ReactChoreographer.CallbackType;
							public static DISPATCH_UI: com.facebook.react.modules.core.ReactChoreographer.CallbackType;
							public static NATIVE_ANIMATED_MODULE: com.facebook.react.modules.core.ReactChoreographer.CallbackType;
							public static TIMERS_EVENTS: com.facebook.react.modules.core.ReactChoreographer.CallbackType;
							public static IDLE_EVENT: com.facebook.react.modules.core.ReactChoreographer.CallbackType;
							public static values(): native.Array<com.facebook.react.modules.core.ReactChoreographer.CallbackType>;
							public static valueOf(param0: string): com.facebook.react.modules.core.ReactChoreographer.CallbackType;
						}
						export class ReactChoreographerDispatcher extends com.facebook.react.modules.core.ChoreographerCompat.FrameCallback {
							public static class: java.lang.Class<com.facebook.react.modules.core.ReactChoreographer.ReactChoreographerDispatcher>;
							public doFrame(param0: number): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module modules {
				export module core {
					export class TimingModule extends com.facebook.fbreact.specs.NativeTimingSpec implements com.facebook.react.bridge.LifecycleEventListener, com.facebook.react.jstasks.HeadlessJsTaskEventListener {
						public static class: java.lang.Class<com.facebook.react.modules.core.TimingModule>;
						public static NAME: string;
						public constructor();
						public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
						public setSendIdleEvents(param0: boolean): void;
						public canOverrideExistingModule(): boolean;
						public deleteTimer(param0: number): void;
						public onCatalystInstanceDestroy(): void;
						public getName(): string;
						public onHostPause(): void;
						public hasActiveTimersInRange(param0: number): boolean;
						public onHostDestroy(): void;
						public invalidate(): void;
						public initialize(): void;
						public createTimer(param0: number, param1: number, param2: number, param3: boolean): void;
						public constructor(param0: com.facebook.react.bridge.ReactApplicationContext, param1: com.facebook.react.devsupport.interfaces.DevSupportManager);
						public onHostResume(): void;
						public onHeadlessJsTaskStart(param0: number): void;
						public onHeadlessJsTaskFinish(param0: number): void;
					}
					export module TimingModule {
						export class BridgeTimerManager extends com.facebook.react.modules.core.JavaScriptTimerManager {
							public static class: java.lang.Class<com.facebook.react.modules.core.TimingModule.BridgeTimerManager>;
							public callTimers(param0: com.facebook.react.bridge.WritableArray): void;
							public callIdleCallbacks(param0: number): void;
							public constructor(param0: com.facebook.react.modules.core.TimingModule);
							public emitTimeDriftWarning(param0: string): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module modules {
				export module datepicker {
					export class DatePickerDialogFragment {
						public static class: java.lang.Class<com.facebook.react.modules.datepicker.DatePickerDialogFragment>;
						public constructor();
						public onDismiss(param0: globalAndroid.content.DialogInterface): void;
						public onCreateDialog(param0: globalAndroid.os.Bundle): globalAndroid.app.Dialog;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module modules {
				export module datepicker {
					export class DatePickerDialogModule extends com.facebook.fbreact.specs.NativeDatePickerAndroidSpec {
						public static class: java.lang.Class<com.facebook.react.modules.datepicker.DatePickerDialogModule>;
						public static FRAGMENT_TAG: string;
						public open(param0: com.facebook.react.bridge.ReadableMap, param1: com.facebook.react.bridge.Promise): void;
						public constructor();
						public invalidate(): void;
						public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
						public canOverrideExistingModule(): boolean;
						public initialize(): void;
						public onCatalystInstanceDestroy(): void;
						public getName(): string;
					}
					export module DatePickerDialogModule {
						export class DatePickerDialogListener {
							public static class: java.lang.Class<com.facebook.react.modules.datepicker.DatePickerDialogModule.DatePickerDialogListener>;
							public onDateSet(param0: globalAndroid.widget.DatePicker, param1: number, param2: number, param3: number): void;
							public onDismiss(param0: globalAndroid.content.DialogInterface): void;
							public constructor(param0: com.facebook.react.modules.datepicker.DatePickerDialogModule, param1: com.facebook.react.bridge.Promise);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module modules {
				export module datepicker {
					export class DatePickerMode {
						public static class: java.lang.Class<com.facebook.react.modules.datepicker.DatePickerMode>;
						public static CALENDAR: com.facebook.react.modules.datepicker.DatePickerMode;
						public static SPINNER: com.facebook.react.modules.datepicker.DatePickerMode;
						public static DEFAULT: com.facebook.react.modules.datepicker.DatePickerMode;
						public static valueOf(param0: string): com.facebook.react.modules.datepicker.DatePickerMode;
						public static values(): native.Array<com.facebook.react.modules.datepicker.DatePickerMode>;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module modules {
				export module datepicker {
					export class DismissableDatePickerDialog {
						public static class: java.lang.Class<com.facebook.react.modules.datepicker.DismissableDatePickerDialog>;
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.app.DatePickerDialog.OnDateSetListener, param2: number, param3: number, param4: number);
						public constructor(param0: globalAndroid.content.Context, param1: number, param2: globalAndroid.app.DatePickerDialog.OnDateSetListener, param3: number, param4: number, param5: number);
						public onStop(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module modules {
				export module debug {
					export class AnimationsDebugModule extends com.facebook.fbreact.specs.NativeAnimationsDebugModuleSpec {
						public static class: java.lang.Class<com.facebook.react.modules.debug.AnimationsDebugModule>;
						public static NAME: string;
						public constructor();
						public startRecordingFps(): void;
						public invalidate(): void;
						public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
						public constructor(param0: com.facebook.react.bridge.ReactApplicationContext, param1: com.facebook.react.modules.debug.interfaces.DeveloperSettings);
						public canOverrideExistingModule(): boolean;
						public initialize(): void;
						public stopRecordingFps(param0: number): void;
						public onCatalystInstanceDestroy(): void;
						public getName(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module modules {
				export module debug {
					export class DevSettingsModule extends com.facebook.fbreact.specs.NativeDevSettingsSpec {
						public static class: java.lang.Class<com.facebook.react.modules.debug.DevSettingsModule>;
						public static NAME: string;
						public removeListeners(param0: number): void;
						public constructor();
						public reloadWithReason(param0: string): void;
						public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
						public canOverrideExistingModule(): boolean;
						public onFastRefresh(): void;
						public setProfilingEnabled(param0: boolean): void;
						public addMenuItem(param0: string): void;
						public onCatalystInstanceDestroy(): void;
						public getName(): string;
						public setHotLoadingEnabled(param0: boolean): void;
						public toggleElementInspector(): void;
						public invalidate(): void;
						public addListener(param0: string): void;
						public initialize(): void;
						public constructor(param0: com.facebook.react.bridge.ReactApplicationContext, param1: com.facebook.react.devsupport.interfaces.DevSupportManager);
						public reload(): void;
						public setIsDebuggingRemotely(param0: boolean): void;
						public setIsShakeToShowDevMenuEnabled(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module modules {
				export module debug {
					export class DidJSUpdateUiDuringFrameDetector implements com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener, com.facebook.react.uimanager.debug.NotThreadSafeViewHierarchyUpdateDebugListener {
						public static class: java.lang.Class<com.facebook.react.modules.debug.DidJSUpdateUiDuringFrameDetector>;
						public onViewHierarchyUpdateFinished(): void;
						public constructor();
						public onTransitionToBridgeBusy(): void;
						public getDidJSHitFrameAndCleanup(param0: number, param1: number): boolean;
						public onTransitionToBridgeIdle(): void;
						public onViewHierarchyUpdateEnqueued(): void;
						public onBridgeDestroyed(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module modules {
				export module debug {
					export class FpsDebugFrameCallback extends com.facebook.react.modules.core.ChoreographerCompat.FrameCallback {
						public static class: java.lang.Class<com.facebook.react.modules.debug.FpsDebugFrameCallback>;
						public constructor();
						public getExpectedNumFrames(): number;
						public getTotalTimeMS(): number;
						public getFPS(): number;
						public get4PlusFrameStutters(): number;
						public constructor(param0: com.facebook.react.bridge.ReactContext);
						public getFpsInfo(param0: number): com.facebook.react.modules.debug.FpsDebugFrameCallback.FpsInfo;
						public stop(): void;
						public doFrame(param0: number): void;
						public start(): void;
						public getNumFrames(): number;
						public getNumJSFrames(): number;
						public startAndRecordFpsAtEachFrame(): void;
						public getJSFPS(): number;
						public reset(): void;
					}
					export module FpsDebugFrameCallback {
						export class FpsInfo {
							public static class: java.lang.Class<com.facebook.react.modules.debug.FpsDebugFrameCallback.FpsInfo>;
							public totalFrames: number;
							public totalJsFrames: number;
							public totalExpectedFrames: number;
							public total4PlusFrameStutters: number;
							public fps: number;
							public jsFps: number;
							public totalTimeMs: number;
							public constructor(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module modules {
				export module debug {
					export class SourceCodeModule extends com.facebook.fbreact.specs.NativeSourceCodeSpec {
						public static class: java.lang.Class<com.facebook.react.modules.debug.SourceCodeModule>;
						public static NAME: string;
						public constructor();
						public invalidate(): void;
						public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
						public canOverrideExistingModule(): boolean;
						public initialize(): void;
						public getTypedExportedConstants(): java.util.Map<string,any>;
						public onCatalystInstanceDestroy(): void;
						public getName(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module modules {
				export module debug {
					export module interfaces {
						export class DeveloperSettings {
							public static class: java.lang.Class<com.facebook.react.modules.debug.interfaces.DeveloperSettings>;
							/**
							 * Constructs a new instance of the com.facebook.react.modules.debug.interfaces.DeveloperSettings interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								isFpsDebugEnabled(): boolean;
								isAnimationFpsDebugEnabled(): boolean;
								isJSDevModeEnabled(): boolean;
								isJSMinifyEnabled(): boolean;
								isElementInspectorEnabled(): boolean;
								isNuclideJSDebugEnabled(): boolean;
								isRemoteJSDebugEnabled(): boolean;
								setRemoteJSDebugEnabled(param0: boolean): void;
								isStartSamplingProfilerOnInit(): boolean;
								addMenuItem(param0: string): void;
							});
							public constructor();
							public addMenuItem(param0: string): void;
							public isStartSamplingProfilerOnInit(): boolean;
							public isElementInspectorEnabled(): boolean;
							public setRemoteJSDebugEnabled(param0: boolean): void;
							public isJSMinifyEnabled(): boolean;
							public isFpsDebugEnabled(): boolean;
							public isRemoteJSDebugEnabled(): boolean;
							public isAnimationFpsDebugEnabled(): boolean;
							public isNuclideJSDebugEnabled(): boolean;
							public isJSDevModeEnabled(): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module modules {
				export module deviceinfo {
					export class DeviceInfoModule extends com.facebook.fbreact.specs.NativeDeviceInfoSpec implements com.facebook.react.bridge.LifecycleEventListener {
						public static class: java.lang.Class<com.facebook.react.modules.deviceinfo.DeviceInfoModule>;
						public static NAME: string;
						public emitUpdateDimensionsEvent(): void;
						public constructor();
						public constructor(param0: globalAndroid.content.Context);
						public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
						public canOverrideExistingModule(): boolean;
						public getTypedExportedConstants(): java.util.Map<string,any>;
						public onCatalystInstanceDestroy(): void;
						public getName(): string;
						public onHostPause(): void;
						public onHostDestroy(): void;
						public invalidate(): void;
						public initialize(): void;
						public onHostResume(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module modules {
				export module dialog {
					export class AlertFragment {
						public static class: java.lang.Class<com.facebook.react.modules.dialog.AlertFragment>;
						public constructor();
						public constructor(param0: com.facebook.react.modules.dialog.DialogModule.AlertFragmentListener, param1: globalAndroid.os.Bundle);
						public onDismiss(param0: globalAndroid.content.DialogInterface): void;
						public onClick(param0: globalAndroid.content.DialogInterface, param1: number): void;
						public onCreateDialog(param0: globalAndroid.os.Bundle): globalAndroid.app.Dialog;
						public static createDialog(param0: globalAndroid.content.Context, param1: globalAndroid.os.Bundle, param2: globalAndroid.content.DialogInterface.OnClickListener): globalAndroid.app.Dialog;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module modules {
				export module dialog {
					export class DialogModule extends com.facebook.fbreact.specs.NativeDialogManagerAndroidSpec implements com.facebook.react.bridge.LifecycleEventListener {
						public static class: java.lang.Class<com.facebook.react.modules.dialog.DialogModule>;
						public static NAME: string;
						public constructor();
						public onHostDestroy(): void;
						public invalidate(): void;
						public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
						public canOverrideExistingModule(): boolean;
						public initialize(): void;
						public getTypedExportedConstants(): java.util.Map<string,any>;
						public showAlert(param0: com.facebook.react.bridge.ReadableMap, param1: com.facebook.react.bridge.Callback, param2: com.facebook.react.bridge.Callback): void;
						public onCatalystInstanceDestroy(): void;
						public onHostResume(): void;
						public getName(): string;
						public onHostPause(): void;
					}
					export module DialogModule {
						export class AlertFragmentListener {
							public static class: java.lang.Class<com.facebook.react.modules.dialog.DialogModule.AlertFragmentListener>;
							public onDismiss(param0: globalAndroid.content.DialogInterface): void;
							public onClick(param0: globalAndroid.content.DialogInterface, param1: number): void;
							public constructor(param0: com.facebook.react.modules.dialog.DialogModule, param1: com.facebook.react.bridge.Callback);
						}
						export class FragmentManagerHelper {
							public static class: java.lang.Class<com.facebook.react.modules.dialog.DialogModule.FragmentManagerHelper>;
							public showNewAlert(param0: globalAndroid.os.Bundle, param1: com.facebook.react.bridge.Callback): void;
							public constructor(param0: com.facebook.react.modules.dialog.DialogModule, param1: androidx.fragment.app.FragmentManager);
							public showPendingAlert(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module modules {
				export module fabric {
					export class ReactFabric extends com.facebook.react.bridge.JavaScriptModule {
						public static class: java.lang.Class<com.facebook.react.modules.fabric.ReactFabric>;
						/**
						 * Constructs a new instance of the com.facebook.react.modules.fabric.ReactFabric interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							unmountComponentAtNode(param0: number): void;
						});
						public constructor();
						public unmountComponentAtNode(param0: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module modules {
				export module fresco {
					export class FrescoModule extends com.facebook.react.bridge.ReactContextBaseJavaModule implements com.facebook.react.modules.common.ModuleDataCleaner.Cleanable, com.facebook.react.bridge.LifecycleEventListener, com.facebook.react.turbomodule.core.interfaces.TurboModule {
						public static class: java.lang.Class<com.facebook.react.modules.fresco.FrescoModule>;
						public static NAME: string;
						public static getDefaultConfigBuilder(param0: com.facebook.react.bridge.ReactContext): com.facebook.imagepipeline.core.ImagePipelineConfig.Builder;
						public constructor();
						public constructor(param0: com.facebook.react.bridge.ReactApplicationContext, param1: boolean, param2: com.facebook.imagepipeline.core.ImagePipelineConfig);
						public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
						public canOverrideExistingModule(): boolean;
						public static hasBeenInitialized(): boolean;
						public onCatalystInstanceDestroy(): void;
						public clearSensitiveData(): void;
						public getName(): string;
						public onHostPause(): void;
						public constructor(param0: com.facebook.react.bridge.ReactApplicationContext, param1: boolean);
						public onHostDestroy(): void;
						public invalidate(): void;
						public initialize(): void;
						public onHostResume(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module modules {
				export module fresco {
					export class ReactNetworkImageRequest {
						public static class: java.lang.Class<com.facebook.react.modules.fresco.ReactNetworkImageRequest>;
						public static fromBuilderWithHeaders(param0: com.facebook.imagepipeline.request.ImageRequestBuilder, param1: com.facebook.react.bridge.ReadableMap): com.facebook.react.modules.fresco.ReactNetworkImageRequest;
						public getHeaders(): com.facebook.react.bridge.ReadableMap;
						public constructor(param0: com.facebook.imagepipeline.request.ImageRequestBuilder, param1: com.facebook.react.bridge.ReadableMap);
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module modules {
				export module fresco {
					export class ReactOkHttpNetworkFetcher {
						public static class: java.lang.Class<com.facebook.react.modules.fresco.ReactOkHttpNetworkFetcher>;
						public constructor(param0: okhttp3.OkHttpClient);
						public fetch(param0: com.facebook.imagepipeline.backends.okhttp3.OkHttpNetworkFetcher.OkHttpNetworkFetchState, param1: com.facebook.imagepipeline.producers.NetworkFetcher.Callback): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module modules {
				export module fresco {
					export class SystraceRequestListener {
						public static class: java.lang.Class<com.facebook.react.modules.fresco.SystraceRequestListener>;
						public constructor();
						public onProducerFinishWithSuccess(param0: string, param1: string, param2: java.util.Map<string,string>): void;
						public onProducerFinishWithCancellation(param0: string, param1: string, param2: java.util.Map<string,string>): void;
						public onRequestCancellation(param0: string): void;
						public onRequestSuccess(param0: com.facebook.imagepipeline.request.ImageRequest, param1: string, param2: boolean): void;
						public onRequestFailure(param0: com.facebook.imagepipeline.request.ImageRequest, param1: string, param2: java.lang.Throwable, param3: boolean): void;
						public onProducerFinishWithFailure(param0: string, param1: string, param2: java.lang.Throwable, param3: java.util.Map<string,string>): void;
						public onProducerEvent(param0: string, param1: string, param2: string): void;
						public onRequestStart(param0: com.facebook.imagepipeline.request.ImageRequest, param1: any, param2: string, param3: boolean): void;
						public onProducerStart(param0: string, param1: string): void;
						public requiresExtraMap(param0: string): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module modules {
				export module i18nmanager {
					export class I18nManagerModule extends com.facebook.react.bridge.ContextBaseJavaModule {
						public static class: java.lang.Class<com.facebook.react.modules.i18nmanager.I18nManagerModule>;
						public static NAME: string;
						public constructor();
						public constructor(param0: globalAndroid.content.Context);
						public getConstants(): java.util.Map<string,any>;
						public allowRTL(param0: boolean): void;
						public swapLeftAndRightInRTL(param0: boolean): void;
						public canOverrideExistingModule(): boolean;
						public initialize(): void;
						public onCatalystInstanceDestroy(): void;
						public getName(): string;
						public forceRTL(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module modules {
				export module i18nmanager {
					export class I18nUtil {
						public static class: java.lang.Class<com.facebook.react.modules.i18nmanager.I18nUtil>;
						public swapLeftAndRightInRTL(param0: globalAndroid.content.Context, param1: boolean): void;
						public forceRTL(param0: globalAndroid.content.Context, param1: boolean): void;
						public static getInstance(): com.facebook.react.modules.i18nmanager.I18nUtil;
						public isRTL(param0: globalAndroid.content.Context): boolean;
						public doLeftAndRightSwapInRTL(param0: globalAndroid.content.Context): boolean;
						public allowRTL(param0: globalAndroid.content.Context, param1: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module modules {
				export module image {
					export class ImageLoaderModule extends com.facebook.fbreact.specs.NativeImageLoaderAndroidSpec implements com.facebook.react.bridge.LifecycleEventListener {
						public static class: java.lang.Class<com.facebook.react.modules.image.ImageLoaderModule>;
						public static NAME: string;
						public prefetchImage(param0: string, param1: number, param2: com.facebook.react.bridge.Promise): void;
						public constructor();
						public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
						public getSizeWithHeaders(param0: string, param1: com.facebook.react.bridge.ReadableMap, param2: com.facebook.react.bridge.Promise): void;
						public canOverrideExistingModule(): boolean;
						public constructor(param0: com.facebook.react.bridge.ReactApplicationContext, param1: any);
						public onCatalystInstanceDestroy(): void;
						public getSize(param0: string, param1: com.facebook.react.bridge.Promise): void;
						public getName(): string;
						public onHostPause(): void;
						public onHostDestroy(): void;
						public invalidate(): void;
						public queryCache(param0: com.facebook.react.bridge.ReadableArray, param1: com.facebook.react.bridge.Promise): void;
						public initialize(): void;
						public onHostResume(): void;
						public abortRequest(param0: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module modules {
				export module intent {
					export class IntentModule extends com.facebook.fbreact.specs.NativeLinkingSpec {
						public static class: java.lang.Class<com.facebook.react.modules.intent.IntentModule>;
						public static NAME: string;
						public removeListeners(param0: number): void;
						public constructor();
						public canOpenURL(param0: string, param1: com.facebook.react.bridge.Promise): void;
						public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
						public sendIntent(param0: string, param1: com.facebook.react.bridge.ReadableArray, param2: com.facebook.react.bridge.Promise): void;
						public canOverrideExistingModule(): boolean;
						public openURL(param0: string, param1: com.facebook.react.bridge.Promise): void;
						public onCatalystInstanceDestroy(): void;
						public getName(): string;
						public getInitialURL(param0: com.facebook.react.bridge.Promise): void;
						public invalidate(): void;
						public openSettings(param0: com.facebook.react.bridge.Promise): void;
						public addListener(param0: string): void;
						public initialize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module modules {
				export module network {
					export class CookieJarContainer {
						public static class: java.lang.Class<com.facebook.react.modules.network.CookieJarContainer>;
						/**
						 * Constructs a new instance of the com.facebook.react.modules.network.CookieJarContainer interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							setCookieJar(param0: okhttp3.CookieJar): void;
							removeCookieJar(): void;
						});
						public constructor();
						public setCookieJar(param0: okhttp3.CookieJar): void;
						public removeCookieJar(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module modules {
				export module network {
					export class CountingOutputStream {
						public static class: java.lang.Class<com.facebook.react.modules.network.CountingOutputStream>;
						public constructor(param0: java.io.OutputStream);
						public close(): void;
						public write(param0: number): void;
						public write(param0: native.Array<number>, param1: number, param2: number): void;
						public getCount(): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module modules {
				export module network {
					export class ForwardingCookieHandler {
						public static class: java.lang.Class<com.facebook.react.modules.network.ForwardingCookieHandler>;
						public clearCookies(param0: com.facebook.react.bridge.Callback): void;
						public addCookies(param0: string, param1: java.util.List<string>): void;
						public get(param0: java.net.URI, param1: java.util.Map<string,java.util.List<string>>): java.util.Map<string,java.util.List<string>>;
						public constructor(param0: com.facebook.react.bridge.ReactContext);
						public destroy(): void;
						public put(param0: java.net.URI, param1: java.util.Map<string,java.util.List<string>>): void;
					}
					export module ForwardingCookieHandler {
						export class CookieSaver {
							public static class: java.lang.Class<com.facebook.react.modules.network.ForwardingCookieHandler.CookieSaver>;
							public onCookiesModified(): void;
							public persistCookies(): void;
							public constructor(param0: com.facebook.react.modules.network.ForwardingCookieHandler);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module modules {
				export module network {
					export class HeaderUtil {
						public static class: java.lang.Class<com.facebook.react.modules.network.HeaderUtil>;
						public constructor();
						public static stripHeaderName(param0: string): string;
						public static stripHeaderValue(param0: string): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module modules {
				export module network {
					export class NetworkInterceptorCreator {
						public static class: java.lang.Class<com.facebook.react.modules.network.NetworkInterceptorCreator>;
						/**
						 * Constructs a new instance of the com.facebook.react.modules.network.NetworkInterceptorCreator interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							create(): okhttp3.Interceptor;
						});
						public constructor();
						public create(): okhttp3.Interceptor;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module modules {
				export module network {
					export class NetworkingModule extends com.facebook.fbreact.specs.NativeNetworkingAndroidSpec {
						public static class: java.lang.Class<com.facebook.react.modules.network.NetworkingModule>;
						public static NAME: string;
						public constructor(param0: com.facebook.react.bridge.ReactApplicationContext, param1: java.util.List<com.facebook.react.modules.network.NetworkInterceptorCreator>);
						public static setCustomClientBuilder(param0: com.facebook.react.modules.network.NetworkingModule.CustomClientBuilder): void;
						public removeResponseHandler(param0: com.facebook.react.modules.network.NetworkingModule.ResponseHandler): void;
						public removeListeners(param0: number): void;
						public constructor();
						public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
						public sendRequestInternal(param0: string, param1: string, param2: number, param3: com.facebook.react.bridge.ReadableArray, param4: com.facebook.react.bridge.ReadableMap, param5: string, param6: boolean, param7: number, param8: boolean): void;
						public canOverrideExistingModule(): boolean;
						public onCatalystInstanceDestroy(): void;
						public getName(): string;
						public constructor(param0: com.facebook.react.bridge.ReactApplicationContext, param1: string);
						public removeRequestBodyHandler(param0: com.facebook.react.modules.network.NetworkingModule.RequestBodyHandler): void;
						public addUriHandler(param0: com.facebook.react.modules.network.NetworkingModule.UriHandler): void;
						public addRequestBodyHandler(param0: com.facebook.react.modules.network.NetworkingModule.RequestBodyHandler): void;
						public clearCookies(param0: com.facebook.react.bridge.Callback): void;
						public invalidate(): void;
						public addListener(param0: string): void;
						public initialize(): void;
						public sendRequest(param0: string, param1: string, param2: number, param3: com.facebook.react.bridge.ReadableArray, param4: com.facebook.react.bridge.ReadableMap, param5: string, param6: boolean, param7: number, param8: boolean): void;
						public addResponseHandler(param0: com.facebook.react.modules.network.NetworkingModule.ResponseHandler): void;
						public abortRequest(param0: number): void;
						public removeUriHandler(param0: com.facebook.react.modules.network.NetworkingModule.UriHandler): void;
					}
					export module NetworkingModule {
						export class CustomClientBuilder {
							public static class: java.lang.Class<com.facebook.react.modules.network.NetworkingModule.CustomClientBuilder>;
							/**
							 * Constructs a new instance of the com.facebook.react.modules.network.NetworkingModule$CustomClientBuilder interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								apply(param0: okhttp3.OkHttpClient.Builder): void;
							});
							public constructor();
							public apply(param0: okhttp3.OkHttpClient.Builder): void;
						}
						export class RequestBodyHandler {
							public static class: java.lang.Class<com.facebook.react.modules.network.NetworkingModule.RequestBodyHandler>;
							/**
							 * Constructs a new instance of the com.facebook.react.modules.network.NetworkingModule$RequestBodyHandler interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								supports(param0: com.facebook.react.bridge.ReadableMap): boolean;
								toRequestBody(param0: com.facebook.react.bridge.ReadableMap, param1: string): okhttp3.RequestBody;
							});
							public constructor();
							public supports(param0: com.facebook.react.bridge.ReadableMap): boolean;
							public toRequestBody(param0: com.facebook.react.bridge.ReadableMap, param1: string): okhttp3.RequestBody;
						}
						export class ResponseHandler {
							public static class: java.lang.Class<com.facebook.react.modules.network.NetworkingModule.ResponseHandler>;
							/**
							 * Constructs a new instance of the com.facebook.react.modules.network.NetworkingModule$ResponseHandler interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								supports(param0: string): boolean;
								toResponseData(param0: okhttp3.ResponseBody): com.facebook.react.bridge.WritableMap;
							});
							public constructor();
							public toResponseData(param0: okhttp3.ResponseBody): com.facebook.react.bridge.WritableMap;
							public supports(param0: string): boolean;
						}
						export class UriHandler {
							public static class: java.lang.Class<com.facebook.react.modules.network.NetworkingModule.UriHandler>;
							/**
							 * Constructs a new instance of the com.facebook.react.modules.network.NetworkingModule$UriHandler interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								supports(param0: globalAndroid.net.Uri, param1: string): boolean;
								fetch(param0: globalAndroid.net.Uri): com.facebook.react.bridge.WritableMap;
							});
							public constructor();
							public fetch(param0: globalAndroid.net.Uri): com.facebook.react.bridge.WritableMap;
							public supports(param0: globalAndroid.net.Uri, param1: string): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module modules {
				export module network {
					export class OkHttpClientFactory {
						public static class: java.lang.Class<com.facebook.react.modules.network.OkHttpClientFactory>;
						/**
						 * Constructs a new instance of the com.facebook.react.modules.network.OkHttpClientFactory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							createNewNetworkModuleClient(): okhttp3.OkHttpClient;
						});
						public constructor();
						public createNewNetworkModuleClient(): okhttp3.OkHttpClient;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module modules {
				export module network {
					export class OkHttpClientProvider {
						public static class: java.lang.Class<com.facebook.react.modules.network.OkHttpClientProvider>;
						public static getOkHttpClient(): okhttp3.OkHttpClient;
						public constructor();
						public static createClientBuilder(): okhttp3.OkHttpClient.Builder;
						public static createClient(): okhttp3.OkHttpClient;
						public static createClient(param0: globalAndroid.content.Context): okhttp3.OkHttpClient;
						public static createClientBuilder(param0: globalAndroid.content.Context): okhttp3.OkHttpClient.Builder;
						public static enableTls12OnPreLollipop(param0: okhttp3.OkHttpClient.Builder): okhttp3.OkHttpClient.Builder;
						public static setOkHttpClientFactory(param0: com.facebook.react.modules.network.OkHttpClientFactory): void;
						public static createClientBuilder(param0: globalAndroid.content.Context, param1: number): okhttp3.OkHttpClient.Builder;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module modules {
				export module network {
					export class ProgressListener {
						public static class: java.lang.Class<com.facebook.react.modules.network.ProgressListener>;
						/**
						 * Constructs a new instance of the com.facebook.react.modules.network.ProgressListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onProgress(param0: number, param1: number, param2: boolean): void;
						});
						public constructor();
						public onProgress(param0: number, param1: number, param2: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module modules {
				export module network {
					export class ProgressRequestBody {
						public static class: java.lang.Class<com.facebook.react.modules.network.ProgressRequestBody>;
						public contentType(): okhttp3.MediaType;
						public writeTo(param0: okio.BufferedSink): void;
						public contentLength(): number;
						public constructor(param0: okhttp3.RequestBody, param1: com.facebook.react.modules.network.ProgressListener);
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module modules {
				export module network {
					export class ProgressResponseBody {
						public static class: java.lang.Class<com.facebook.react.modules.network.ProgressResponseBody>;
						public source(): okio.BufferedSource;
						public totalBytesRead(): number;
						public contentType(): okhttp3.MediaType;
						public contentLength(): number;
						public constructor(param0: okhttp3.ResponseBody, param1: com.facebook.react.modules.network.ProgressListener);
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module modules {
				export module network {
					export class ProgressiveStringDecoder {
						public static class: java.lang.Class<com.facebook.react.modules.network.ProgressiveStringDecoder>;
						public decodeNext(param0: native.Array<number>, param1: number): string;
						public constructor(param0: java.nio.charset.Charset);
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module modules {
				export module network {
					export class ReactCookieJarContainer extends com.facebook.react.modules.network.CookieJarContainer {
						public static class: java.lang.Class<com.facebook.react.modules.network.ReactCookieJarContainer>;
						public setCookieJar(param0: okhttp3.CookieJar): void;
						public constructor();
						public saveFromResponse(param0: okhttp3.HttpUrl, param1: java.util.List<okhttp3.Cookie>): void;
						public loadForRequest(param0: okhttp3.HttpUrl): java.util.List<okhttp3.Cookie>;
						public removeCookieJar(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module modules {
				export module network {
					export class RequestBodyUtil {
						public static class: java.lang.Class<com.facebook.react.modules.network.RequestBodyUtil>;
						public static createProgressRequest(param0: okhttp3.RequestBody, param1: com.facebook.react.modules.network.ProgressListener): com.facebook.react.modules.network.ProgressRequestBody;
						public static isGzipEncoding(param0: string): boolean;
						public static createGzip(param0: okhttp3.MediaType, param1: string): okhttp3.RequestBody;
						public static create(param0: okhttp3.MediaType, param1: java.io.InputStream): okhttp3.RequestBody;
						public static getFileInputStream(param0: globalAndroid.content.Context, param1: string): java.io.InputStream;
						public static getEmptyBody(param0: string): okhttp3.RequestBody;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module modules {
				export module network {
					export class ResponseUtil {
						public static class: java.lang.Class<com.facebook.react.modules.network.ResponseUtil>;
						public constructor();
						public static onDataSend(param0: com.facebook.react.modules.core.DeviceEventManagerModule.RCTDeviceEventEmitter, param1: number, param2: number, param3: number): void;
						public static onDataReceived(param0: com.facebook.react.modules.core.DeviceEventManagerModule.RCTDeviceEventEmitter, param1: number, param2: com.facebook.react.bridge.WritableMap): void;
						public static onIncrementalDataReceived(param0: com.facebook.react.modules.core.DeviceEventManagerModule.RCTDeviceEventEmitter, param1: number, param2: string, param3: number, param4: number): void;
						public static onDataReceived(param0: com.facebook.react.modules.core.DeviceEventManagerModule.RCTDeviceEventEmitter, param1: number, param2: string): void;
						public static onRequestSuccess(param0: com.facebook.react.modules.core.DeviceEventManagerModule.RCTDeviceEventEmitter, param1: number): void;
						public static onResponseReceived(param0: com.facebook.react.modules.core.DeviceEventManagerModule.RCTDeviceEventEmitter, param1: number, param2: number, param3: com.facebook.react.bridge.WritableMap, param4: string): void;
						public static onDataReceivedProgress(param0: com.facebook.react.modules.core.DeviceEventManagerModule.RCTDeviceEventEmitter, param1: number, param2: number, param3: number): void;
						public static onRequestError(param0: com.facebook.react.modules.core.DeviceEventManagerModule.RCTDeviceEventEmitter, param1: number, param2: string, param3: java.lang.Throwable): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module modules {
				export module network {
					export class TLSSocketFactory {
						public static class: java.lang.Class<com.facebook.react.modules.network.TLSSocketFactory>;
						public constructor();
						public createSocket(param0: java.net.InetAddress, param1: number): java.net.Socket;
						public createSocket(param0: string, param1: number): java.net.Socket;
						public createSocket(param0: java.net.InetAddress, param1: number, param2: java.net.InetAddress, param3: number): java.net.Socket;
						public createSocket(param0: string, param1: number, param2: java.net.InetAddress, param3: number): java.net.Socket;
						public createSocket(param0: java.net.Socket, param1: string, param2: number, param3: boolean): java.net.Socket;
						public getSupportedCipherSuites(): native.Array<string>;
						public getDefaultCipherSuites(): native.Array<string>;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module modules {
				export module permissions {
					export class PermissionsModule extends com.facebook.fbreact.specs.NativePermissionsAndroidSpec implements com.facebook.react.modules.core.PermissionListener {
						public static class: java.lang.Class<com.facebook.react.modules.permissions.PermissionsModule>;
						public static NAME: string;
						public requestMultiplePermissions(param0: com.facebook.react.bridge.ReadableArray, param1: com.facebook.react.bridge.Promise): void;
						public shouldShowRequestPermissionRationale(param0: string, param1: com.facebook.react.bridge.Promise): void;
						public constructor();
						public invalidate(): void;
						public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
						public onRequestPermissionsResult(param0: number, param1: native.Array<string>, param2: native.Array<number>): boolean;
						public canOverrideExistingModule(): boolean;
						public initialize(): void;
						public onCatalystInstanceDestroy(): void;
						public getName(): string;
						public checkPermission(param0: string, param1: com.facebook.react.bridge.Promise): void;
						public requestPermission(param0: string, param1: com.facebook.react.bridge.Promise): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module modules {
				export module share {
					export class ShareModule extends com.facebook.fbreact.specs.NativeShareModuleSpec {
						public static class: java.lang.Class<com.facebook.react.modules.share.ShareModule>;
						public static NAME: string;
						public share(param0: com.facebook.react.bridge.ReadableMap, param1: string, param2: com.facebook.react.bridge.Promise): void;
						public constructor();
						public invalidate(): void;
						public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
						public canOverrideExistingModule(): boolean;
						public initialize(): void;
						public onCatalystInstanceDestroy(): void;
						public getName(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module modules {
				export module sound {
					export class SoundManagerModule extends com.facebook.fbreact.specs.NativeSoundManagerSpec {
						public static class: java.lang.Class<com.facebook.react.modules.sound.SoundManagerModule>;
						public static NAME: string;
						public playTouchSound(): void;
						public constructor();
						public invalidate(): void;
						public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
						public canOverrideExistingModule(): boolean;
						public initialize(): void;
						public onCatalystInstanceDestroy(): void;
						public getName(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module modules {
				export module statusbar {
					export class StatusBarModule extends com.facebook.fbreact.specs.NativeStatusBarManagerAndroidSpec {
						public static class: java.lang.Class<com.facebook.react.modules.statusbar.StatusBarModule>;
						public static NAME: string;
						public constructor();
						public setColor(param0: number, param1: boolean): void;
						public invalidate(): void;
						public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
						public canOverrideExistingModule(): boolean;
						public initialize(): void;
						public getTypedExportedConstants(): java.util.Map<string,any>;
						public setHidden(param0: boolean): void;
						public onCatalystInstanceDestroy(): void;
						public getName(): string;
						public setStyle(param0: string): void;
						public setTranslucent(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module modules {
				export module storage {
					export class AsyncLocalStorageUtil {
						public static class: java.lang.Class<com.facebook.react.modules.storage.AsyncLocalStorageUtil>;
						public constructor();
						public static getItemImpl(param0: globalAndroid.database.sqlite.SQLiteDatabase, param1: string): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module modules {
				export module storage {
					export class AsyncStorageErrorUtil {
						public static class: java.lang.Class<com.facebook.react.modules.storage.AsyncStorageErrorUtil>;
						public constructor();
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module modules {
				export module storage {
					export class AsyncStorageModule extends com.facebook.fbreact.specs.NativeAsyncStorageSpec implements com.facebook.react.modules.common.ModuleDataCleaner.Cleanable {
						public static class: java.lang.Class<com.facebook.react.modules.storage.AsyncStorageModule>;
						public static NAME: string;
						public constructor();
						public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
						public clear(param0: com.facebook.react.bridge.Callback): void;
						public canOverrideExistingModule(): boolean;
						public multiGet(param0: com.facebook.react.bridge.ReadableArray, param1: com.facebook.react.bridge.Callback): void;
						public onCatalystInstanceDestroy(): void;
						public clearSensitiveData(): void;
						public getName(): string;
						public multiSet(param0: com.facebook.react.bridge.ReadableArray, param1: com.facebook.react.bridge.Callback): void;
						public multiMerge(param0: com.facebook.react.bridge.ReadableArray, param1: com.facebook.react.bridge.Callback): void;
						public invalidate(): void;
						public multiRemove(param0: com.facebook.react.bridge.ReadableArray, param1: com.facebook.react.bridge.Callback): void;
						public initialize(): void;
						public getAllKeys(param0: com.facebook.react.bridge.Callback): void;
					}
					export module AsyncStorageModule {
						export class SerialExecutor {
							public static class: java.lang.Class<com.facebook.react.modules.storage.AsyncStorageModule.SerialExecutor>;
							public execute(param0: java.lang.Runnable): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module modules {
				export module storage {
					export class ReactDatabaseSupplier {
						public static class: java.lang.Class<com.facebook.react.modules.storage.ReactDatabaseSupplier>;
						public static DATABASE_NAME: string;
						public onUpgrade(param0: globalAndroid.database.sqlite.SQLiteDatabase, param1: number, param2: number): void;
						public static deleteInstance(): void;
						public setMaximumSize(param0: number): void;
						public clearAndCloseDatabase(): void;
						public static getInstance(param0: globalAndroid.content.Context): com.facebook.react.modules.storage.ReactDatabaseSupplier;
						public get(): globalAndroid.database.sqlite.SQLiteDatabase;
						public onCreate(param0: globalAndroid.database.sqlite.SQLiteDatabase): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module modules {
				export module systeminfo {
					export class AndroidInfoHelpers {
						public static class: java.lang.Class<com.facebook.react.modules.systeminfo.AndroidInfoHelpers>;
						public static EMULATOR_LOCALHOST: string;
						public static GENYMOTION_LOCALHOST: string;
						public static DEVICE_LOCALHOST: string;
						public static METRO_HOST_PROP_NAME: string;
						public static getAdbReverseTcpCommand(param0: java.lang.Integer): string;
						public constructor();
						public static getInspectorProxyHost(param0: globalAndroid.content.Context): string;
						public static getFriendlyDeviceName(): string;
						public static getServerHost(param0: java.lang.Integer): string;
						public static getServerHost(param0: globalAndroid.content.Context): string;
						public static getAdbReverseTcpCommand(param0: globalAndroid.content.Context): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module modules {
				export module systeminfo {
					export class AndroidInfoModule extends com.facebook.fbreact.specs.NativePlatformConstantsAndroidSpec implements com.facebook.react.turbomodule.core.interfaces.TurboModule {
						public static class: java.lang.Class<com.facebook.react.modules.systeminfo.AndroidInfoModule>;
						public static NAME: string;
						public constructor();
						public invalidate(): void;
						public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
						public canOverrideExistingModule(): boolean;
						public initialize(): void;
						public getTypedExportedConstants(): java.util.Map<string,any>;
						public onCatalystInstanceDestroy(): void;
						public getAndroidID(): string;
						public getName(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module modules {
				export module systeminfo {
					export class ReactNativeVersion {
						public static class: java.lang.Class<com.facebook.react.modules.systeminfo.ReactNativeVersion>;
						public static VERSION: java.util.Map<string,any>;
						public constructor();
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module modules {
				export module timepicker {
					export class DismissableTimePickerDialog {
						public static class: java.lang.Class<com.facebook.react.modules.timepicker.DismissableTimePickerDialog>;
						public constructor(param0: globalAndroid.content.Context, param1: number, param2: globalAndroid.app.TimePickerDialog.OnTimeSetListener, param3: number, param4: number, param5: boolean);
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.app.TimePickerDialog.OnTimeSetListener, param2: number, param3: number, param4: boolean);
						public onStop(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module modules {
				export module timepicker {
					export class TimePickerDialogFragment {
						public static class: java.lang.Class<com.facebook.react.modules.timepicker.TimePickerDialogFragment>;
						public constructor();
						public onDismiss(param0: globalAndroid.content.DialogInterface): void;
						public setOnDismissListener(param0: globalAndroid.content.DialogInterface.OnDismissListener): void;
						public setOnTimeSetListener(param0: globalAndroid.app.TimePickerDialog.OnTimeSetListener): void;
						public onCreateDialog(param0: globalAndroid.os.Bundle): globalAndroid.app.Dialog;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module modules {
				export module timepicker {
					export class TimePickerDialogModule extends com.facebook.fbreact.specs.NativeTimePickerAndroidSpec {
						public static class: java.lang.Class<com.facebook.react.modules.timepicker.TimePickerDialogModule>;
						public static FRAGMENT_TAG: string;
						public open(param0: com.facebook.react.bridge.ReadableMap, param1: com.facebook.react.bridge.Promise): void;
						public constructor();
						public invalidate(): void;
						public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
						public canOverrideExistingModule(): boolean;
						public initialize(): void;
						public onCatalystInstanceDestroy(): void;
						public getName(): string;
					}
					export module TimePickerDialogModule {
						export class TimePickerDialogListener {
							public static class: java.lang.Class<com.facebook.react.modules.timepicker.TimePickerDialogModule.TimePickerDialogListener>;
							public onDismiss(param0: globalAndroid.content.DialogInterface): void;
							public onTimeSet(param0: globalAndroid.widget.TimePicker, param1: number, param2: number): void;
							public constructor(param0: com.facebook.react.modules.timepicker.TimePickerDialogModule, param1: com.facebook.react.bridge.Promise);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module modules {
				export module timepicker {
					export class TimePickerMode {
						public static class: java.lang.Class<com.facebook.react.modules.timepicker.TimePickerMode>;
						public static CLOCK: com.facebook.react.modules.timepicker.TimePickerMode;
						public static SPINNER: com.facebook.react.modules.timepicker.TimePickerMode;
						public static DEFAULT: com.facebook.react.modules.timepicker.TimePickerMode;
						public static values(): native.Array<com.facebook.react.modules.timepicker.TimePickerMode>;
						public static valueOf(param0: string): com.facebook.react.modules.timepicker.TimePickerMode;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module modules {
				export module toast {
					export class ToastModule extends com.facebook.fbreact.specs.NativeToastAndroidSpec {
						public static class: java.lang.Class<com.facebook.react.modules.toast.ToastModule>;
						public static NAME: string;
						public showWithGravityAndOffset(param0: string, param1: number, param2: number, param3: number, param4: number): void;
						public constructor();
						public invalidate(): void;
						public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
						public show(param0: string, param1: number): void;
						public canOverrideExistingModule(): boolean;
						public initialize(): void;
						public getTypedExportedConstants(): java.util.Map<string,any>;
						public showWithGravity(param0: string, param1: number, param2: number): void;
						public onCatalystInstanceDestroy(): void;
						public getName(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module modules {
				export module vibration {
					export class VibrationModule extends com.facebook.fbreact.specs.NativeVibrationSpec {
						public static class: java.lang.Class<com.facebook.react.modules.vibration.VibrationModule>;
						public static NAME: string;
						public vibrateByPattern(param0: com.facebook.react.bridge.ReadableArray, param1: number): void;
						public constructor();
						public invalidate(): void;
						public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
						public cancel(): void;
						public canOverrideExistingModule(): boolean;
						public vibrate(param0: number): void;
						public initialize(): void;
						public onCatalystInstanceDestroy(): void;
						public getName(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module modules {
				export module websocket {
					export class WebSocketModule extends com.facebook.fbreact.specs.NativeWebSocketModuleSpec {
						public static class: java.lang.Class<com.facebook.react.modules.websocket.WebSocketModule>;
						public static TAG: string;
						public static NAME: string;
						public removeListeners(param0: number): void;
						public constructor();
						public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
						public sendBinary(param0: okio.ByteString, param1: number): void;
						public canOverrideExistingModule(): boolean;
						public close(param0: number, param1: string, param2: number): void;
						public onCatalystInstanceDestroy(): void;
						public getName(): string;
						public setContentHandler(param0: number, param1: com.facebook.react.modules.websocket.WebSocketModule.ContentHandler): void;
						public connect(param0: string, param1: com.facebook.react.bridge.ReadableArray, param2: com.facebook.react.bridge.ReadableMap, param3: number): void;
						public send(param0: string, param1: number): void;
						public invalidate(): void;
						public ping(param0: number): void;
						public addListener(param0: string): void;
						public initialize(): void;
						public sendBinary(param0: string, param1: number): void;
					}
					export module WebSocketModule {
						export class ContentHandler {
							public static class: java.lang.Class<com.facebook.react.modules.websocket.WebSocketModule.ContentHandler>;
							/**
							 * Constructs a new instance of the com.facebook.react.modules.websocket.WebSocketModule$ContentHandler interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onMessage(param0: string, param1: com.facebook.react.bridge.WritableMap): void;
								onMessage(param0: okio.ByteString, param1: com.facebook.react.bridge.WritableMap): void;
							});
							public constructor();
							public onMessage(param0: okio.ByteString, param1: com.facebook.react.bridge.WritableMap): void;
							public onMessage(param0: string, param1: com.facebook.react.bridge.WritableMap): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module packagerconnection {
				export class FileIoHandler {
					public static class: java.lang.Class<com.facebook.react.packagerconnection.FileIoHandler>;
					public constructor();
					public handlers(): java.util.Map<string,com.facebook.react.packagerconnection.RequestHandler>;
					public run(): void;
				}
				export module FileIoHandler {
					export class TtlFileInputStream {
						public static class: java.lang.Class<com.facebook.react.packagerconnection.FileIoHandler.TtlFileInputStream>;
						public read(param0: number): string;
						public expiredTtl(): boolean;
						public close(): void;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module packagerconnection {
				export class JSPackagerClient extends com.facebook.react.packagerconnection.ReconnectingWebSocket.MessageCallback {
					public static class: java.lang.Class<com.facebook.react.packagerconnection.JSPackagerClient>;
					public onMessage(param0: okio.ByteString): void;
					public constructor(param0: string, param1: com.facebook.react.packagerconnection.PackagerConnectionSettings, param2: java.util.Map<string,com.facebook.react.packagerconnection.RequestHandler>);
					public constructor(param0: string, param1: com.facebook.react.packagerconnection.PackagerConnectionSettings, param2: java.util.Map<string,com.facebook.react.packagerconnection.RequestHandler>, param3: com.facebook.react.packagerconnection.ReconnectingWebSocket.ConnectionCallback);
					public onMessage(param0: string): void;
					public close(): void;
					public init(): void;
				}
				export module JSPackagerClient {
					export class ResponderImpl extends com.facebook.react.packagerconnection.Responder {
						public static class: java.lang.Class<com.facebook.react.packagerconnection.JSPackagerClient.ResponderImpl>;
						public respond(param0: any): void;
						public error(param0: any): void;
						public constructor(param0: com.facebook.react.packagerconnection.JSPackagerClient, param1: any);
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module packagerconnection {
				export abstract class NotificationOnlyHandler extends com.facebook.react.packagerconnection.RequestHandler {
					public static class: java.lang.Class<com.facebook.react.packagerconnection.NotificationOnlyHandler>;
					public constructor();
					public onNotification(param0: any): void;
					public onRequest(param0: any, param1: com.facebook.react.packagerconnection.Responder): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module packagerconnection {
				export class PackagerConnectionSettings {
					public static class: java.lang.Class<com.facebook.react.packagerconnection.PackagerConnectionSettings>;
					public constructor(param0: globalAndroid.content.Context);
					public setDebugServerHost(param0: string): void;
					public getPackageName(): string;
					public getInspectorServerHost(): string;
					public getDebugServerHost(): string;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module packagerconnection {
				export class ReconnectingWebSocket {
					public static class: java.lang.Class<com.facebook.react.packagerconnection.ReconnectingWebSocket>;
					public onMessage(param0: okhttp3.WebSocket, param1: okio.ByteString): void;
					public onClosed(param0: okhttp3.WebSocket, param1: number, param2: string): void;
					public onFailure(param0: okhttp3.WebSocket, param1: java.lang.Throwable, param2: okhttp3.Response): void;
					public sendMessage(param0: okio.ByteString): void;
					public connect(): void;
					public closeQuietly(): void;
					public onMessage(param0: okhttp3.WebSocket, param1: string): void;
					public onOpen(param0: okhttp3.WebSocket, param1: okhttp3.Response): void;
					public constructor(param0: string, param1: com.facebook.react.packagerconnection.ReconnectingWebSocket.MessageCallback, param2: com.facebook.react.packagerconnection.ReconnectingWebSocket.ConnectionCallback);
					public sendMessage(param0: string): void;
				}
				export module ReconnectingWebSocket {
					export class ConnectionCallback {
						public static class: java.lang.Class<com.facebook.react.packagerconnection.ReconnectingWebSocket.ConnectionCallback>;
						/**
						 * Constructs a new instance of the com.facebook.react.packagerconnection.ReconnectingWebSocket$ConnectionCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onConnected(): void;
							onDisconnected(): void;
						});
						public constructor();
						public onDisconnected(): void;
						public onConnected(): void;
					}
					export class MessageCallback {
						public static class: java.lang.Class<com.facebook.react.packagerconnection.ReconnectingWebSocket.MessageCallback>;
						/**
						 * Constructs a new instance of the com.facebook.react.packagerconnection.ReconnectingWebSocket$MessageCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onMessage(param0: string): void;
							onMessage(param0: okio.ByteString): void;
						});
						public constructor();
						public onMessage(param0: okio.ByteString): void;
						public onMessage(param0: string): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module packagerconnection {
				export class RequestHandler {
					public static class: java.lang.Class<com.facebook.react.packagerconnection.RequestHandler>;
					/**
					 * Constructs a new instance of the com.facebook.react.packagerconnection.RequestHandler interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onRequest(param0: any, param1: com.facebook.react.packagerconnection.Responder): void;
						onNotification(param0: any): void;
					});
					public constructor();
					public onNotification(param0: any): void;
					public onRequest(param0: any, param1: com.facebook.react.packagerconnection.Responder): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module packagerconnection {
				export abstract class RequestOnlyHandler extends com.facebook.react.packagerconnection.RequestHandler {
					public static class: java.lang.Class<com.facebook.react.packagerconnection.RequestOnlyHandler>;
					public constructor();
					public onNotification(param0: any): void;
					public onRequest(param0: any, param1: com.facebook.react.packagerconnection.Responder): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module packagerconnection {
				export class Responder {
					public static class: java.lang.Class<com.facebook.react.packagerconnection.Responder>;
					/**
					 * Constructs a new instance of the com.facebook.react.packagerconnection.Responder interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						respond(param0: any): void;
						error(param0: any): void;
					});
					public constructor();
					public error(param0: any): void;
					public respond(param0: any): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module shell {
				export class MainPackageConfig {
					public static class: java.lang.Class<com.facebook.react.shell.MainPackageConfig>;
					public getFrescoConfig(): com.facebook.imagepipeline.core.ImagePipelineConfig;
				}
				export module MainPackageConfig {
					export class Builder {
						public static class: java.lang.Class<com.facebook.react.shell.MainPackageConfig.Builder>;
						public constructor();
						public setFrescoConfig(param0: com.facebook.imagepipeline.core.ImagePipelineConfig): com.facebook.react.shell.MainPackageConfig.Builder;
						public build(): com.facebook.react.shell.MainPackageConfig;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module shell {
				export class MainReactPackage extends com.facebook.react.TurboReactPackage {
					public static class: java.lang.Class<com.facebook.react.shell.MainReactPackage>;
					public getReactModuleInfoProvider(): com.facebook.react.module.model.ReactModuleInfoProvider;
					public createNativeModules(param0: com.facebook.react.bridge.ReactApplicationContext): java.util.List<com.facebook.react.bridge.NativeModule>;
					public constructor();
					public getModule(param0: string, param1: com.facebook.react.bridge.ReactApplicationContext): com.facebook.react.bridge.NativeModule;
					public constructor(param0: com.facebook.react.shell.MainPackageConfig);
					public createViewManagers(param0: com.facebook.react.bridge.ReactApplicationContext): java.util.List<com.facebook.react.uimanager.ViewManager<any,any>>;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module surface {
				export class ReactStage {
					public static class: java.lang.Class<com.facebook.react.surface.ReactStage>;
					/**
					 * Constructs a new instance of the com.facebook.react.surface.ReactStage interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
					});
					public constructor();
					public static BRIDGE_DID_LOAD: number;
					public static SURFACE_DID_STOP: number;
					public static SURFACE_DID_INITIALIZE: number;
					public static SURFACE_DID_RUN: number;
					public static SURFACE_DID_INITIAL_MOUNTING: number;
					public static SURFACE_DID_INITIAL_LAYOUT: number;
					public static SURFACE_DID_INITIAL_RENDERING: number;
					public static ON_ATTACH_TO_INSTANCE: number;
					public static MODULE_DID_LOAD: number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module touch {
				export class JSResponderHandler extends com.facebook.react.touch.OnInterceptTouchEventListener {
					public static class: java.lang.Class<com.facebook.react.touch.JSResponderHandler>;
					public setJSResponder(param0: number, param1: globalAndroid.view.ViewParent): void;
					public onInterceptTouchEvent(param0: globalAndroid.view.ViewGroup, param1: globalAndroid.view.MotionEvent): boolean;
					public constructor();
					public clearJSResponder(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module touch {
				export class OnInterceptTouchEventListener {
					public static class: java.lang.Class<com.facebook.react.touch.OnInterceptTouchEventListener>;
					/**
					 * Constructs a new instance of the com.facebook.react.touch.OnInterceptTouchEventListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onInterceptTouchEvent(param0: globalAndroid.view.ViewGroup, param1: globalAndroid.view.MotionEvent): boolean;
					});
					public constructor();
					public onInterceptTouchEvent(param0: globalAndroid.view.ViewGroup, param1: globalAndroid.view.MotionEvent): boolean;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module touch {
				export class ReactHitSlopView {
					public static class: java.lang.Class<com.facebook.react.touch.ReactHitSlopView>;
					/**
					 * Constructs a new instance of the com.facebook.react.touch.ReactHitSlopView interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						getHitSlopRect(): globalAndroid.graphics.Rect;
					});
					public constructor();
					public getHitSlopRect(): globalAndroid.graphics.Rect;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module touch {
				export class ReactInterceptingViewGroup {
					public static class: java.lang.Class<com.facebook.react.touch.ReactInterceptingViewGroup>;
					/**
					 * Constructs a new instance of the com.facebook.react.touch.ReactInterceptingViewGroup interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						setOnInterceptTouchEventListener(param0: com.facebook.react.touch.OnInterceptTouchEventListener): void;
					});
					public constructor();
					public setOnInterceptTouchEventListener(param0: com.facebook.react.touch.OnInterceptTouchEventListener): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module turbomodule {
				export module core {
					export class CallInvokerHolderImpl extends com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder {
						public static class: java.lang.Class<com.facebook.react.turbomodule.core.CallInvokerHolderImpl>;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module turbomodule {
				export module core {
					export abstract class ReactPackageTurboModuleManagerDelegate extends com.facebook.react.turbomodule.core.TurboModuleManagerDelegate {
						public static class: java.lang.Class<com.facebook.react.turbomodule.core.ReactPackageTurboModuleManagerDelegate>;
						public getEagerInitModuleNames(): java.util.List<string>;
						public constructor();
						public getLegacyCxxModule(param0: string): com.facebook.react.bridge.CxxModuleWrapper;
						public getModule(param0: string): com.facebook.react.turbomodule.core.interfaces.TurboModule;
						public constructor(param0: com.facebook.react.bridge.ReactApplicationContext, param1: java.util.List<com.facebook.react.ReactPackage>);
					}
					export module ReactPackageTurboModuleManagerDelegate {
						export abstract class Builder {
							public static class: java.lang.Class<com.facebook.react.turbomodule.core.ReactPackageTurboModuleManagerDelegate.Builder>;
							public constructor();
							public setReactApplicationContext(param0: com.facebook.react.bridge.ReactApplicationContext): com.facebook.react.turbomodule.core.ReactPackageTurboModuleManagerDelegate.Builder;
							public setPackages(param0: java.util.List<com.facebook.react.ReactPackage>): com.facebook.react.turbomodule.core.ReactPackageTurboModuleManagerDelegate.Builder;
							public build(param0: com.facebook.react.bridge.ReactApplicationContext, param1: java.util.List<com.facebook.react.ReactPackage>): com.facebook.react.turbomodule.core.ReactPackageTurboModuleManagerDelegate;
							public build(): com.facebook.react.turbomodule.core.ReactPackageTurboModuleManagerDelegate;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module turbomodule {
				export module core {
					export class TurboModuleManager implements com.facebook.react.bridge.JSIModule, com.facebook.react.turbomodule.core.interfaces.TurboModuleRegistry {
						public static class: java.lang.Class<com.facebook.react.turbomodule.core.TurboModuleManager>;
						public getEagerInitModuleNames(): java.util.List<string>;
						public hasModule(param0: string): boolean;
						public getModules(): java.util.Collection<com.facebook.react.turbomodule.core.interfaces.TurboModule>;
						public initialize(): void;
						public constructor(param0: com.facebook.react.bridge.JavaScriptContextHolder, param1: com.facebook.react.turbomodule.core.TurboModuleManagerDelegate, param2: com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder, param3: com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder);
						public onCatalystInstanceDestroy(): void;
						public getModule(param0: string): com.facebook.react.turbomodule.core.interfaces.TurboModule;
					}
					export module TurboModuleManager {
						export class TurboModuleHolder {
							public static class: java.lang.Class<com.facebook.react.turbomodule.core.TurboModuleManager.TurboModuleHolder>;
						}
						export class TurboModuleProvider {
							public static class: java.lang.Class<com.facebook.react.turbomodule.core.TurboModuleManager.TurboModuleProvider>;
							/**
							 * Constructs a new instance of the com.facebook.react.turbomodule.core.TurboModuleManager$TurboModuleProvider interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								getModule(param0: string): com.facebook.react.turbomodule.core.interfaces.TurboModule;
							});
							public constructor();
							public getModule(param0: string): com.facebook.react.turbomodule.core.interfaces.TurboModule;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module turbomodule {
				export module core {
					export abstract class TurboModuleManagerDelegate {
						public static class: java.lang.Class<com.facebook.react.turbomodule.core.TurboModuleManagerDelegate>;
						public initHybrid(): com.facebook.jni.HybridData;
						public getEagerInitModuleNames(): java.util.List<string>;
						public constructor();
						public getLegacyCxxModule(param0: string): com.facebook.react.bridge.CxxModuleWrapper;
						public maybeLoadOtherSoLibraries(): void;
						public getModule(param0: string): com.facebook.react.turbomodule.core.interfaces.TurboModule;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module turbomodule {
				export module core {
					export module interfaces {
						export class CallInvokerHolder {
							public static class: java.lang.Class<com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder>;
							/**
							 * Constructs a new instance of the com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
							});
							public constructor();
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module turbomodule {
				export module core {
					export module interfaces {
						export class TurboModule {
							public static class: java.lang.Class<com.facebook.react.turbomodule.core.interfaces.TurboModule>;
							/**
							 * Constructs a new instance of the com.facebook.react.turbomodule.core.interfaces.TurboModule interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								invalidate(): void;
							});
							public constructor();
							public invalidate(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module turbomodule {
				export module core {
					export module interfaces {
						export class TurboModuleRegistry {
							public static class: java.lang.Class<com.facebook.react.turbomodule.core.interfaces.TurboModuleRegistry>;
							/**
							 * Constructs a new instance of the com.facebook.react.turbomodule.core.interfaces.TurboModuleRegistry interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								getModule(param0: string): com.facebook.react.turbomodule.core.interfaces.TurboModule;
								getModules(): java.util.Collection<com.facebook.react.turbomodule.core.interfaces.TurboModule>;
								hasModule(param0: string): boolean;
								getEagerInitModuleNames(): java.util.List<string>;
							});
							public constructor();
							public getEagerInitModuleNames(): java.util.List<string>;
							public getModule(param0: string): com.facebook.react.turbomodule.core.interfaces.TurboModule;
							public hasModule(param0: string): boolean;
							public getModules(): java.util.Collection<com.facebook.react.turbomodule.core.interfaces.TurboModule>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export abstract class BaseViewManager<T, C>  extends com.facebook.react.uimanager.ViewManager<any,any> implements com.facebook.react.uimanager.BaseViewManagerInterface<any>  {
					public static class: java.lang.Class<com.facebook.react.uimanager.BaseViewManager<any,any>>;
					public static sStateDescription: java.util.Map<string,java.lang.Integer>;
					/** @deprecated */
					public setScaleY(param0: any, param1: number): void;
					/** @deprecated */
					public setTranslateX(param0: any, param1: number): void;
					public setElevation(param0: any, param1: number): void;
					public setZIndex(param0: any, param1: number): void;
					public canOverrideExistingModule(): boolean;
					public setOpacity(param0: any, param1: number): void;
					public setBorderBottomLeftRadius(param0: any, param1: number): void;
					public setAccessibilityHint(param0: any, param1: string): void;
					public setImportantForAccessibility(param0: any, param1: string): void;
					public setRenderToHardwareTexture(param0: any, param1: boolean): void;
					public getExportedCustomDirectEventTypeConstants(): java.util.Map<string,any>;
					public setAccessibilityLiveRegion(param0: any, param1: string): void;
					public constructor();
					public setScaleX(param0: any, param1: number): void;
					public setBorderBottomRightRadius(param0: any, param1: number): void;
					/** @deprecated */
					public setTranslateY(param0: any, param1: number): void;
					public setAccessibilityValue(param0: any, param1: com.facebook.react.bridge.ReadableMap): void;
					public setBorderTopRightRadius(param0: any, param1: number): void;
					public setTranslateX(param0: any, param1: number): void;
					public setBackgroundColor(param0: any, param1: number): void;
					public setTransform(param0: any, param1: com.facebook.react.bridge.ReadableArray): void;
					public setViewState(param0: any, param1: com.facebook.react.bridge.ReadableMap): void;
					public setAccessibilityActions(param0: any, param1: com.facebook.react.bridge.ReadableArray): void;
					/** @deprecated */
					public setScaleX(param0: any, param1: number): void;
					public setNativeId(param0: any, param1: string): void;
					public onAfterUpdateTransaction(param0: any): void;
					public setScaleY(param0: any, param1: number): void;
					public setBorderTopLeftRadius(param0: any, param1: number): void;
					public setAccessibilityRole(param0: any, param1: string): void;
					public onCatalystInstanceDestroy(): void;
					public setTestId(param0: any, param1: string): void;
					public getName(): string;
					public setBorderRadius(param0: any, param1: number): void;
					public setAccessibilityLabel(param0: any, param1: string): void;
					public setTranslateY(param0: any, param1: number): void;
					public setRotation(param0: any, param1: number): void;
					/** @deprecated */
					public setRotation(param0: any, param1: number): void;
					public initialize(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export abstract class BaseViewManagerAdapter<T>  extends com.facebook.react.uimanager.BaseViewManagerInterface<any> {
					public static class: java.lang.Class<com.facebook.react.uimanager.BaseViewManagerAdapter<any>>;
					public setElevation(param0: any, param1: number): void;
					public setZIndex(param0: any, param1: number): void;
					public setOpacity(param0: any, param1: number): void;
					public setBorderBottomLeftRadius(param0: any, param1: number): void;
					public setAccessibilityHint(param0: any, param1: string): void;
					public setImportantForAccessibility(param0: any, param1: string): void;
					public setRenderToHardwareTexture(param0: any, param1: boolean): void;
					public setAccessibilityLiveRegion(param0: any, param1: string): void;
					public constructor();
					public setScaleX(param0: any, param1: number): void;
					public setBorderBottomRightRadius(param0: any, param1: number): void;
					public setBorderTopRightRadius(param0: any, param1: number): void;
					public setTranslateX(param0: any, param1: number): void;
					public setAccessibilityActions(param0: any, param1: com.facebook.react.bridge.ReadableArray): void;
					public setViewState(param0: any, param1: com.facebook.react.bridge.ReadableMap): void;
					public setBackgroundColor(param0: any, param1: number): void;
					public setTransform(param0: any, param1: com.facebook.react.bridge.ReadableArray): void;
					public setNativeId(param0: any, param1: string): void;
					public setScaleY(param0: any, param1: number): void;
					public setBorderTopLeftRadius(param0: any, param1: number): void;
					public setAccessibilityRole(param0: any, param1: string): void;
					public setTestId(param0: any, param1: string): void;
					public setBorderRadius(param0: any, param1: number): void;
					public setAccessibilityLabel(param0: any, param1: string): void;
					public setTranslateY(param0: any, param1: number): void;
					public setRotation(param0: any, param1: number): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export abstract class BaseViewManagerDelegate<T, U>  extends com.facebook.react.uimanager.ViewManagerDelegate<any> {
					public static class: java.lang.Class<com.facebook.react.uimanager.BaseViewManagerDelegate<any,any>>;
					public mViewManager: any;
					public constructor(param0: any);
					public setProperty(param0: any, param1: string, param2: any): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export class BaseViewManagerInterface<T>  extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.react.uimanager.BaseViewManagerInterface<any>>;
					/**
					 * Constructs a new instance of the com.facebook.react.uimanager.BaseViewManagerInterface<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						setAccessibilityActions(param0: T, param1: com.facebook.react.bridge.ReadableArray): void;
						setAccessibilityHint(param0: T, param1: string): void;
						setAccessibilityLabel(param0: T, param1: string): void;
						setAccessibilityLiveRegion(param0: T, param1: string): void;
						setAccessibilityRole(param0: T, param1: string): void;
						setViewState(param0: T, param1: com.facebook.react.bridge.ReadableMap): void;
						setBackgroundColor(param0: T, param1: number): void;
						setBorderRadius(param0: T, param1: number): void;
						setBorderBottomLeftRadius(param0: T, param1: number): void;
						setBorderBottomRightRadius(param0: T, param1: number): void;
						setBorderTopLeftRadius(param0: T, param1: number): void;
						setBorderTopRightRadius(param0: T, param1: number): void;
						setElevation(param0: T, param1: number): void;
						setImportantForAccessibility(param0: T, param1: string): void;
						setNativeId(param0: T, param1: string): void;
						setOpacity(param0: T, param1: number): void;
						setRenderToHardwareTexture(param0: T, param1: boolean): void;
						setRotation(param0: T, param1: number): void;
						setScaleX(param0: T, param1: number): void;
						setScaleY(param0: T, param1: number): void;
						setTestId(param0: T, param1: string): void;
						setTransform(param0: T, param1: com.facebook.react.bridge.ReadableArray): void;
						setTranslateX(param0: T, param1: number): void;
						setTranslateY(param0: T, param1: number): void;
						setZIndex(param0: T, param1: number): void;
					});
					public constructor();
					public setTranslateX(param0: T, param1: number): void;
					public setViewState(param0: T, param1: com.facebook.react.bridge.ReadableMap): void;
					public setTestId(param0: T, param1: string): void;
					public setAccessibilityLabel(param0: T, param1: string): void;
					public setScaleY(param0: T, param1: number): void;
					public setElevation(param0: T, param1: number): void;
					public setOpacity(param0: T, param1: number): void;
					public setTransform(param0: T, param1: com.facebook.react.bridge.ReadableArray): void;
					public setAccessibilityRole(param0: T, param1: string): void;
					public setBorderTopRightRadius(param0: T, param1: number): void;
					public setTranslateY(param0: T, param1: number): void;
					public setRotation(param0: T, param1: number): void;
					public setZIndex(param0: T, param1: number): void;
					public setNativeId(param0: T, param1: string): void;
					public setBorderBottomRightRadius(param0: T, param1: number): void;
					public setRenderToHardwareTexture(param0: T, param1: boolean): void;
					public setImportantForAccessibility(param0: T, param1: string): void;
					public setAccessibilityLiveRegion(param0: T, param1: string): void;
					public setBorderRadius(param0: T, param1: number): void;
					public setScaleX(param0: T, param1: number): void;
					public setBackgroundColor(param0: T, param1: number): void;
					public setBorderTopLeftRadius(param0: T, param1: number): void;
					public setAccessibilityActions(param0: T, param1: com.facebook.react.bridge.ReadableArray): void;
					public setAccessibilityHint(param0: T, param1: string): void;
					public setBorderBottomLeftRadius(param0: T, param1: number): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export class DisplayMetricsHolder {
					public static class: java.lang.Class<com.facebook.react.uimanager.DisplayMetricsHolder>;
					public static setScreenDisplayMetrics(param0: globalAndroid.util.DisplayMetrics): void;
					public static getScreenDisplayMetrics(): globalAndroid.util.DisplayMetrics;
					/** @deprecated */
					public static setWindowDisplayMetrics(param0: globalAndroid.util.DisplayMetrics): void;
					/** @deprecated */
					public static getWindowDisplayMetrics(): globalAndroid.util.DisplayMetrics;
					public constructor();
					public static getDisplayMetricsNativeMap(param0: number): com.facebook.react.bridge.WritableNativeMap;
					public static initDisplayMetrics(param0: globalAndroid.content.Context): void;
					public static getDisplayMetricsMap(param0: number): java.util.Map<string,java.util.Map<string,any>>;
					public static initDisplayMetricsIfNotInitialized(param0: globalAndroid.content.Context): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export class FloatUtil {
					public static class: java.lang.Class<com.facebook.react.uimanager.FloatUtil>;
					public constructor();
					public static floatsEqual(param0: number, param1: number): boolean;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export abstract class GuardedFrameCallback extends com.facebook.react.modules.core.ChoreographerCompat.FrameCallback {
					public static class: java.lang.Class<com.facebook.react.uimanager.GuardedFrameCallback>;
					public doFrameGuarded(param0: number): void;
					public doFrame(param0: number): void;
					public constructor();
					public constructor(param0: com.facebook.react.bridge.ReactContext);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export class IViewManagerWithChildren {
					public static class: java.lang.Class<com.facebook.react.uimanager.IViewManagerWithChildren>;
					/**
					 * Constructs a new instance of the com.facebook.react.uimanager.IViewManagerWithChildren interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						needsCustomLayoutForChildren(): boolean;
					});
					public constructor();
					public needsCustomLayoutForChildren(): boolean;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export class IllegalViewOperationException extends com.facebook.react.bridge.JSApplicationCausedNativeException {
					public static class: java.lang.Class<com.facebook.react.uimanager.IllegalViewOperationException>;
					public getView(): globalAndroid.view.View;
					public constructor(param0: string, param1: java.lang.Throwable);
					public constructor(param0: string);
					public constructor(param0: string, param1: globalAndroid.view.View, param2: java.lang.Throwable);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export class JSTouchDispatcher {
					public static class: java.lang.Class<com.facebook.react.uimanager.JSTouchDispatcher>;
					public constructor(param0: globalAndroid.view.ViewGroup);
					public handleTouchEvent(param0: globalAndroid.view.MotionEvent, param1: com.facebook.react.uimanager.events.EventDispatcher): void;
					public onChildStartedNativeGesture(param0: globalAndroid.view.MotionEvent, param1: com.facebook.react.uimanager.events.EventDispatcher): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export class LayoutShadowNode extends com.facebook.react.uimanager.ReactShadowNodeImpl {
					public static class: java.lang.Class<com.facebook.react.uimanager.LayoutShadowNode>;
					public getLayoutWidth(): number;
					public getScreenY(): number;
					public setMarginPercent(param0: number, param1: number): void;
					public getScreenHeight(): number;
					public getWidthMeasureSpec(): java.lang.Integer;
					public setMaxHeight(param0: com.facebook.react.bridge.Dynamic): void;
					public setJustifyContent(param0: string): void;
					public markLayoutSeen(): void;
					public isLayoutOnly(): boolean;
					public setStyleMaxHeight(param0: number): void;
					public markUpdateSeen(): void;
					public isYogaLeafNode(): boolean;
					public addChildAt(param0: com.facebook.react.uimanager.ReactShadowNodeImpl, param1: number): void;
					public constructor();
					public getChildAt(param0: number): com.facebook.react.uimanager.ReactShadowNodeImpl;
					public setOverflow(param0: string): void;
					public getReactTag(): number;
					public setLayoutDirection(param0: com.facebook.yoga.YogaDirection): void;
					public setDefaultPadding(param0: number, param1: number): void;
					public getLayoutParent(): com.facebook.react.uimanager.ReactShadowNodeImpl;
					public setThemedContext(param0: com.facebook.react.uimanager.ThemedReactContext): void;
					public getHeightMeasureSpec(): java.lang.Integer;
					public setStyleMinWidth(param0: number): void;
					public getViewClass(): string;
					public isDescendantOf(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): boolean;
					public addNativeChildAt(param0: com.facebook.react.uimanager.ReactShadowNodeImpl, param1: number): void;
					public isVirtual(): boolean;
					public isDescendantOf(param0: any): boolean;
					public setStyleMaxWidthPercent(param0: number): void;
					public setFlexBasisAuto(): void;
					public removeNativeChildAt(param0: number): com.facebook.react.uimanager.ReactShadowNodeImpl;
					public getNativeOffsetForChild(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): number;
					public setStyleWidthAuto(): void;
					public setLayoutParent(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): void;
					public onAfterUpdateTransaction(): void;
					public dispatchUpdates(param0: number, param1: number, param2: com.facebook.react.uimanager.UIViewOperationQueue, param3: com.facebook.react.uimanager.NativeViewHierarchyOptimizer): boolean;
					public setFlex(param0: number): void;
					public setStyleMinHeightPercent(param0: number): void;
					public setFlexDirection(param0: string): void;
					public setMinHeight(param0: com.facebook.react.bridge.Dynamic): void;
					public getNativeParent(): any;
					public getStylePadding(param0: number): com.facebook.yoga.YogaValue;
					public getPadding(param0: number): number;
					public setStyleMaxHeightPercent(param0: number): void;
					public hasUpdates(): boolean;
					public setIsLayoutOnly(param0: boolean): void;
					public setStyleHeight(param0: number): void;
					public getNativeOffsetForChild(param0: any): number;
					public calculateLayoutOnChildren(): java.lang.Iterable<any>;
					public setMarginAuto(param0: number): void;
					public setPadding(param0: number, param1: number): void;
					public isMeasureDefined(): boolean;
					public shouldNotifyOnLayout(): boolean;
					public indexOf(param0: any): number;
					public getTotalNativeChildren(): number;
					public setPaddingPercent(param0: number, param1: number): void;
					public dirty(): void;
					public setMeasureSpecs(param0: number, param1: number): void;
					public onCollectExtraUpdates(param0: com.facebook.react.uimanager.UIViewOperationQueue): void;
					public setAlignContent(param0: com.facebook.yoga.YogaAlign): void;
					public setDisplay(param0: string): void;
					public hasUnseenUpdates(): boolean;
					public setFlexGrow(param0: number): void;
					public setAlignItems(param0: com.facebook.yoga.YogaAlign): void;
					public onBeforeLayout(param0: com.facebook.react.uimanager.NativeViewHierarchyOptimizer): void;
					public getChildCount(): number;
					public getStyleWidth(): com.facebook.yoga.YogaValue;
					public calculateLayout(): void;
					public setPositionType(param0: com.facebook.yoga.YogaPositionType): void;
					public setMaxWidth(param0: com.facebook.react.bridge.Dynamic): void;
					public setFlexBasis(param0: com.facebook.react.bridge.Dynamic): void;
					public setReactTag(param0: number): void;
					public setPaddings(param0: number, param1: com.facebook.react.bridge.Dynamic): void;
					public setFlexBasis(param0: number): void;
					public setBorderWidths(param0: number, param1: number): void;
					public setShouldNotifyOnLayout(param0: boolean): void;
					public getNativeChildCount(): number;
					public addChildAt(param0: any, param1: number): void;
					public getStyleHeight(): com.facebook.yoga.YogaValue;
					public updateProperties(param0: com.facebook.react.uimanager.ReactStylesDiffMap): void;
					public setFlexBasisPercent(param0: number): void;
					public setHeight(param0: com.facebook.react.bridge.Dynamic): void;
					public setCollapsable(param0: boolean): void;
					public isVirtualAnchor(): boolean;
					public getScreenWidth(): number;
					public setFlexShrink(param0: number): void;
					public removeAllNativeChildren(): void;
					public hoistNativeChildren(): boolean;
					public setBorder(param0: number, param1: number): void;
					public setMeasureFunction(param0: com.facebook.yoga.YogaMeasureFunction): void;
					public setStyleHeightAuto(): void;
					public getNativeParent(): com.facebook.react.uimanager.ReactShadowNodeImpl;
					public setStyleMinWidthPercent(param0: number): void;
					public setStyleHeightPercent(param0: number): void;
					public calculateLayout(param0: number, param1: number): void;
					public getChildAt(param0: number): any;
					public setStyleAspectRatio(param0: number): void;
					public removeAndDisposeAllChildren(): void;
					public indexOfNativeChild(param0: any): number;
					public setAlignItems(param0: string): void;
					public getParent(): any;
					public getThemedContext(): com.facebook.react.uimanager.ThemedReactContext;
					public setMargin(param0: number, param1: number): void;
					public setAlignContent(param0: string): void;
					public hasNewLayout(): boolean;
					public setFlexWrap(param0: string): void;
					public setAspectRatio(param0: number): void;
					public setStyleMinHeight(param0: number): void;
					public setMargins(param0: number, param1: com.facebook.react.bridge.Dynamic): void;
					public isDirty(): boolean;
					public indexOf(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): number;
					public getLayoutDirection(): com.facebook.yoga.YogaDirection;
					public removeNativeChildAt(param0: number): any;
					public getParent(): com.facebook.react.uimanager.ReactShadowNodeImpl;
					public getLayoutParent(): any;
					public setFlexDirection(param0: com.facebook.yoga.YogaFlexDirection): void;
					public setPosition(param0: string): void;
					public getNativeKind(): com.facebook.react.uimanager.NativeKind;
					public indexOfNativeChild(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): number;
					public setPosition(param0: number, param1: number): void;
					public getHierarchyInfo(): string;
					public setOverflow(param0: com.facebook.yoga.YogaOverflow): void;
					public setStyleWidth(param0: number): void;
					public setStyleWidthPercent(param0: number): void;
					public removeChildAt(param0: number): any;
					public setMinWidth(param0: com.facebook.react.bridge.Dynamic): void;
					public setAlignSelf(param0: string): void;
					public getRootTag(): number;
					public markUpdated(): void;
					public setLocalData(param0: any): void;
					public setFlexWrap(param0: com.facebook.yoga.YogaWrap): void;
					public getLayoutX(): number;
					public dispose(): void;
					public getLayoutHeight(): number;
					public setWidth(param0: com.facebook.react.bridge.Dynamic): void;
					public addNativeChildAt(param0: any, param1: number): void;
					public getLayoutY(): number;
					public setRootTag(param0: number): void;
					public getScreenX(): number;
					public setStyleMaxWidth(param0: number): void;
					public setJustifyContent(param0: com.facebook.yoga.YogaJustify): void;
					public setBaselineFunction(param0: com.facebook.yoga.YogaBaselineFunction): void;
					public setDisplay(param0: com.facebook.yoga.YogaDisplay): void;
					public setLayoutParent(param0: any): void;
					public setAlignSelf(param0: com.facebook.yoga.YogaAlign): void;
					public setViewClassName(param0: string): void;
					public setPositionValues(param0: number, param1: com.facebook.react.bridge.Dynamic): void;
					public removeChildAt(param0: number): com.facebook.react.uimanager.ReactShadowNodeImpl;
					public setPositionPercent(param0: number, param1: number): void;
				}
				export module LayoutShadowNode {
					export class MutableYogaValue {
						public static class: java.lang.Class<com.facebook.react.uimanager.LayoutShadowNode.MutableYogaValue>;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export class MatrixMathHelper {
					public static class: java.lang.Class<com.facebook.react.uimanager.MatrixMathHelper>;
					public static roundTo3Places(param0: number): number;
					public static multiplyVectorByMatrix(param0: native.Array<number>, param1: native.Array<number>, param2: native.Array<number>): void;
					public static inverse(param0: native.Array<number>): native.Array<number>;
					public static v3Normalize(param0: native.Array<number>, param1: number): native.Array<number>;
					public static v3Length(param0: native.Array<number>): number;
					public static v3Cross(param0: native.Array<number>, param1: native.Array<number>): native.Array<number>;
					public static decomposeMatrix(param0: native.Array<number>, param1: com.facebook.react.uimanager.MatrixMathHelper.MatrixDecompositionContext): void;
					public static applyPerspective(param0: native.Array<number>, param1: number): void;
					public static transpose(param0: native.Array<number>): native.Array<number>;
					public constructor();
					public static degreesToRadians(param0: number): number;
					public static createIdentityMatrix(): native.Array<number>;
					public static applySkewY(param0: native.Array<number>, param1: number): void;
					public static applyScaleZ(param0: native.Array<number>, param1: number): void;
					public static applyRotateX(param0: native.Array<number>, param1: number): void;
					public static v3Combine(param0: native.Array<number>, param1: native.Array<number>, param2: number, param3: number): native.Array<number>;
					public static resetIdentityMatrix(param0: native.Array<number>): void;
					public static applySkewX(param0: native.Array<number>, param1: number): void;
					public static applyScaleY(param0: native.Array<number>, param1: number): void;
					public static applyRotateY(param0: native.Array<number>, param1: number): void;
					public static applyScaleX(param0: native.Array<number>, param1: number): void;
					public static v3Dot(param0: native.Array<number>, param1: native.Array<number>): number;
					public static determinant(param0: native.Array<number>): number;
					public static multiplyInto(param0: native.Array<number>, param1: native.Array<number>, param2: native.Array<number>): void;
					public static applyRotateZ(param0: native.Array<number>, param1: number): void;
					public static applyTranslate3D(param0: native.Array<number>, param1: number, param2: number, param3: number): void;
					public static applyTranslate2D(param0: native.Array<number>, param1: number, param2: number): void;
				}
				export module MatrixMathHelper {
					export class MatrixDecompositionContext {
						public static class: java.lang.Class<com.facebook.react.uimanager.MatrixMathHelper.MatrixDecompositionContext>;
						public constructor();
						public reset(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export class MeasureSpecAssertions {
					public static class: java.lang.Class<com.facebook.react.uimanager.MeasureSpecAssertions>;
					public static assertExplicitMeasureSpec(param0: number, param1: number): void;
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export class NativeKind {
					public static class: java.lang.Class<com.facebook.react.uimanager.NativeKind>;
					public static PARENT: com.facebook.react.uimanager.NativeKind;
					public static LEAF: com.facebook.react.uimanager.NativeKind;
					public static NONE: com.facebook.react.uimanager.NativeKind;
					public static valueOf(param0: string): com.facebook.react.uimanager.NativeKind;
					public static values(): native.Array<com.facebook.react.uimanager.NativeKind>;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export class NativeViewHierarchyManager {
					public static class: java.lang.Class<com.facebook.react.uimanager.NativeViewHierarchyManager>;
					public constructor(param0: com.facebook.react.uimanager.ViewManagerRegistry, param1: com.facebook.react.uimanager.RootViewManager);
					public resolveView(param0: number): globalAndroid.view.View;
					public getInstanceHandle(param0: number): number;
					public dismissPopupMenu(): void;
					public updateInstanceHandle(param0: number, param1: number): void;
					public dispatchCommand(param0: number, param1: string, param2: com.facebook.react.bridge.ReadableArray): void;
					public setChildren(param0: number, param1: com.facebook.react.bridge.ReadableArray): void;
					public showPopupMenu(param0: number, param1: com.facebook.react.bridge.ReadableArray, param2: com.facebook.react.bridge.Callback, param3: com.facebook.react.bridge.Callback): void;
					/** @deprecated */
					public dispatchCommand(param0: number, param1: number, param2: com.facebook.react.bridge.ReadableArray): void;
					public createView(param0: com.facebook.react.uimanager.ThemedReactContext, param1: number, param2: string, param3: com.facebook.react.uimanager.ReactStylesDiffMap): void;
					public constructor(param0: com.facebook.react.uimanager.ViewManagerRegistry);
					public clearJSResponder(): void;
					public setLayoutAnimationEnabled(param0: boolean): void;
					public updateViewExtraData(param0: number, param1: any): void;
					public setJSResponder(param0: number, param1: number, param2: boolean): void;
					public measureInWindow(param0: number, param1: native.Array<number>): void;
					public manageChildren(param0: number, param1: native.Array<number>, param2: native.Array<com.facebook.react.uimanager.ViewAtIndex>, param3: native.Array<number>): void;
					public findTargetTagForTouch(param0: number, param1: number, param2: number): number;
					public addRootViewGroup(param0: number, param1: globalAndroid.view.View): void;
					public dropView(param0: globalAndroid.view.View): void;
					public updateProperties(param0: number, param1: com.facebook.react.uimanager.ReactStylesDiffMap): void;
					public addRootView(param0: number, param1: globalAndroid.view.View): void;
					public resolveViewManager(param0: number): com.facebook.react.uimanager.ViewManager<any,any>;
					public updateLayout(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number): void;
					public removeRootView(param0: number): void;
					public measure(param0: number, param1: native.Array<number>): void;
					public sendAccessibilityEvent(param0: number, param1: number): void;
				}
				export module NativeViewHierarchyManager {
					export class PopupMenuCallbackHandler {
						public static class: java.lang.Class<com.facebook.react.uimanager.NativeViewHierarchyManager.PopupMenuCallbackHandler>;
						public onDismiss(param0: globalAndroid.widget.PopupMenu): void;
						public onMenuItemClick(param0: globalAndroid.view.MenuItem): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export class NativeViewHierarchyOptimizer {
					public static class: java.lang.Class<com.facebook.react.uimanager.NativeViewHierarchyOptimizer>;
					public onBatchComplete(): void;
					public handleUpdateLayout(param0: com.facebook.react.uimanager.ReactShadowNode<any>): void;
					public handleUpdateView(param0: com.facebook.react.uimanager.ReactShadowNode<any>, param1: string, param2: com.facebook.react.uimanager.ReactStylesDiffMap): void;
					public handleSetChildren(param0: com.facebook.react.uimanager.ReactShadowNode<any>, param1: com.facebook.react.bridge.ReadableArray): void;
					public constructor(param0: com.facebook.react.uimanager.UIViewOperationQueue, param1: com.facebook.react.uimanager.ShadowNodeRegistry);
					public static assertNodeSupportedWithoutOptimizer(param0: com.facebook.react.uimanager.ReactShadowNode<any>): void;
					public handleManageChildren(param0: com.facebook.react.uimanager.ReactShadowNode<any>, param1: native.Array<number>, param2: native.Array<number>, param3: native.Array<com.facebook.react.uimanager.ViewAtIndex>, param4: native.Array<number>): void;
					public handleForceViewToBeNonLayoutOnly(param0: com.facebook.react.uimanager.ReactShadowNode<any>): void;
					public handleCreateView(param0: com.facebook.react.uimanager.ReactShadowNode<any>, param1: com.facebook.react.uimanager.ThemedReactContext, param2: com.facebook.react.uimanager.ReactStylesDiffMap): void;
					public static handleRemoveNode(param0: com.facebook.react.uimanager.ReactShadowNode<any>): void;
				}
				export module NativeViewHierarchyOptimizer {
					export class NodeIndexPair {
						public static class: java.lang.Class<com.facebook.react.uimanager.NativeViewHierarchyOptimizer.NodeIndexPair>;
						public node: com.facebook.react.uimanager.ReactShadowNode<any>;
						public index: number;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export class NoSuchNativeViewException extends com.facebook.react.uimanager.IllegalViewOperationException {
					public static class: java.lang.Class<com.facebook.react.uimanager.NoSuchNativeViewException>;
					public constructor(param0: string, param1: java.lang.Throwable);
					public constructor(param0: string);
					public constructor(param0: string, param1: globalAndroid.view.View, param2: java.lang.Throwable);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export class OnLayoutEvent extends com.facebook.react.uimanager.events.Event<com.facebook.react.uimanager.OnLayoutEvent> {
					public static class: java.lang.Class<com.facebook.react.uimanager.OnLayoutEvent>;
					public init(param0: number, param1: number, param2: number, param3: number, param4: number): void;
					public dispatch(param0: com.facebook.react.uimanager.events.RCTEventEmitter): void;
					public onDispose(): void;
					public getEventName(): string;
					public static obtain(param0: number, param1: number, param2: number, param3: number, param4: number): com.facebook.react.uimanager.OnLayoutEvent;
					public init(param0: number): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export class PixelUtil {
					public static class: java.lang.Class<com.facebook.react.uimanager.PixelUtil>;
					public static toPixelFromSP(param0: number): number;
					public constructor();
					public static toSPFromPixel(param0: number): number;
					public static getDisplayMetricDensity(): number;
					public static toPixelFromDIP(param0: number): number;
					public static toPixelFromSP(param0: number, param1: number): number;
					public static toDIPFromPixel(param0: number): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export class PointerEvents {
					public static class: java.lang.Class<com.facebook.react.uimanager.PointerEvents>;
					public static NONE: com.facebook.react.uimanager.PointerEvents;
					public static BOX_NONE: com.facebook.react.uimanager.PointerEvents;
					public static BOX_ONLY: com.facebook.react.uimanager.PointerEvents;
					public static AUTO: com.facebook.react.uimanager.PointerEvents;
					public static values(): native.Array<com.facebook.react.uimanager.PointerEvents>;
					public static valueOf(param0: string): com.facebook.react.uimanager.PointerEvents;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export class ReactAccessibilityDelegate {
					public static class: java.lang.Class<com.facebook.react.uimanager.ReactAccessibilityDelegate>;
					public static sActionIdMap: java.util.HashMap<string,java.lang.Integer>;
					public static setRole(param0: androidx.core.view.accessibility.AccessibilityNodeInfoCompat, param1: com.facebook.react.uimanager.ReactAccessibilityDelegate.AccessibilityRole, param2: globalAndroid.content.Context): void;
					public onInitializeAccessibilityEvent(param0: globalAndroid.view.View, param1: globalAndroid.view.accessibility.AccessibilityEvent): void;
					public constructor();
					public onInitializeAccessibilityNodeInfo(param0: globalAndroid.view.View, param1: androidx.core.view.accessibility.AccessibilityNodeInfoCompat): void;
					public static setDelegate(param0: globalAndroid.view.View): void;
					public performAccessibilityAction(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.os.Bundle): boolean;
				}
				export module ReactAccessibilityDelegate {
					export class AccessibilityRole {
						public static class: java.lang.Class<com.facebook.react.uimanager.ReactAccessibilityDelegate.AccessibilityRole>;
						public static NONE: com.facebook.react.uimanager.ReactAccessibilityDelegate.AccessibilityRole;
						public static BUTTON: com.facebook.react.uimanager.ReactAccessibilityDelegate.AccessibilityRole;
						public static LINK: com.facebook.react.uimanager.ReactAccessibilityDelegate.AccessibilityRole;
						public static SEARCH: com.facebook.react.uimanager.ReactAccessibilityDelegate.AccessibilityRole;
						public static IMAGE: com.facebook.react.uimanager.ReactAccessibilityDelegate.AccessibilityRole;
						public static IMAGEBUTTON: com.facebook.react.uimanager.ReactAccessibilityDelegate.AccessibilityRole;
						public static KEYBOARDKEY: com.facebook.react.uimanager.ReactAccessibilityDelegate.AccessibilityRole;
						public static TEXT: com.facebook.react.uimanager.ReactAccessibilityDelegate.AccessibilityRole;
						public static ADJUSTABLE: com.facebook.react.uimanager.ReactAccessibilityDelegate.AccessibilityRole;
						public static SUMMARY: com.facebook.react.uimanager.ReactAccessibilityDelegate.AccessibilityRole;
						public static HEADER: com.facebook.react.uimanager.ReactAccessibilityDelegate.AccessibilityRole;
						public static ALERT: com.facebook.react.uimanager.ReactAccessibilityDelegate.AccessibilityRole;
						public static CHECKBOX: com.facebook.react.uimanager.ReactAccessibilityDelegate.AccessibilityRole;
						public static COMBOBOX: com.facebook.react.uimanager.ReactAccessibilityDelegate.AccessibilityRole;
						public static MENU: com.facebook.react.uimanager.ReactAccessibilityDelegate.AccessibilityRole;
						public static MENUBAR: com.facebook.react.uimanager.ReactAccessibilityDelegate.AccessibilityRole;
						public static MENUITEM: com.facebook.react.uimanager.ReactAccessibilityDelegate.AccessibilityRole;
						public static PROGRESSBAR: com.facebook.react.uimanager.ReactAccessibilityDelegate.AccessibilityRole;
						public static RADIO: com.facebook.react.uimanager.ReactAccessibilityDelegate.AccessibilityRole;
						public static RADIOGROUP: com.facebook.react.uimanager.ReactAccessibilityDelegate.AccessibilityRole;
						public static SCROLLBAR: com.facebook.react.uimanager.ReactAccessibilityDelegate.AccessibilityRole;
						public static SPINBUTTON: com.facebook.react.uimanager.ReactAccessibilityDelegate.AccessibilityRole;
						public static SWITCH: com.facebook.react.uimanager.ReactAccessibilityDelegate.AccessibilityRole;
						public static TAB: com.facebook.react.uimanager.ReactAccessibilityDelegate.AccessibilityRole;
						public static TABLIST: com.facebook.react.uimanager.ReactAccessibilityDelegate.AccessibilityRole;
						public static TIMER: com.facebook.react.uimanager.ReactAccessibilityDelegate.AccessibilityRole;
						public static TOOLBAR: com.facebook.react.uimanager.ReactAccessibilityDelegate.AccessibilityRole;
						public static fromValue(param0: string): com.facebook.react.uimanager.ReactAccessibilityDelegate.AccessibilityRole;
						public static values(): native.Array<com.facebook.react.uimanager.ReactAccessibilityDelegate.AccessibilityRole>;
						public static getValue(param0: com.facebook.react.uimanager.ReactAccessibilityDelegate.AccessibilityRole): string;
						public static valueOf(param0: string): com.facebook.react.uimanager.ReactAccessibilityDelegate.AccessibilityRole;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export class ReactClippingViewGroup {
					public static class: java.lang.Class<com.facebook.react.uimanager.ReactClippingViewGroup>;
					/**
					 * Constructs a new instance of the com.facebook.react.uimanager.ReactClippingViewGroup interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						updateClippingRect(): void;
						getClippingRect(param0: globalAndroid.graphics.Rect): void;
						setRemoveClippedSubviews(param0: boolean): void;
						getRemoveClippedSubviews(): boolean;
					});
					public constructor();
					public updateClippingRect(): void;
					public setRemoveClippedSubviews(param0: boolean): void;
					public getClippingRect(param0: globalAndroid.graphics.Rect): void;
					public getRemoveClippedSubviews(): boolean;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export class ReactClippingViewGroupHelper {
					public static class: java.lang.Class<com.facebook.react.uimanager.ReactClippingViewGroupHelper>;
					public static PROP_REMOVE_CLIPPED_SUBVIEWS: string;
					public constructor();
					public static getChildVisibleRectHelper(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point, param3: globalAndroid.view.View, param4: string): boolean;
					public static calculateClippingRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export class ReactCompoundView {
					public static class: java.lang.Class<com.facebook.react.uimanager.ReactCompoundView>;
					/**
					 * Constructs a new instance of the com.facebook.react.uimanager.ReactCompoundView interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						reactTagForTouch(param0: number, param1: number): number;
					});
					public constructor();
					public reactTagForTouch(param0: number, param1: number): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export class ReactCompoundViewGroup extends com.facebook.react.uimanager.ReactCompoundView {
					public static class: java.lang.Class<com.facebook.react.uimanager.ReactCompoundViewGroup>;
					/**
					 * Constructs a new instance of the com.facebook.react.uimanager.ReactCompoundViewGroup interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						interceptsTouchEvent(param0: number, param1: number): boolean;
						reactTagForTouch(param0: number, param1: number): number;
					});
					public constructor();
					public reactTagForTouch(param0: number, param1: number): number;
					public interceptsTouchEvent(param0: number, param1: number): boolean;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export class ReactInvalidPropertyException {
					public static class: java.lang.Class<com.facebook.react.uimanager.ReactInvalidPropertyException>;
					public constructor(param0: string, param1: string, param2: string);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export class ReactPointerEventsView {
					public static class: java.lang.Class<com.facebook.react.uimanager.ReactPointerEventsView>;
					/**
					 * Constructs a new instance of the com.facebook.react.uimanager.ReactPointerEventsView interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						getPointerEvents(): com.facebook.react.uimanager.PointerEvents;
					});
					public constructor();
					public getPointerEvents(): com.facebook.react.uimanager.PointerEvents;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export class ReactRoot {
					public static class: java.lang.Class<com.facebook.react.uimanager.ReactRoot>;
					/**
					 * Constructs a new instance of the com.facebook.react.uimanager.ReactRoot interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						getAppProperties(): globalAndroid.os.Bundle;
						getInitialUITemplate(): string;
						getJSModuleName(): string;
						getUIManagerType(): number;
						getRootViewTag(): number;
						setRootViewTag(param0: number): void;
						runApplication(): void;
						onStage(param0: number): void;
						getRootViewGroup(): globalAndroid.view.ViewGroup;
						getWidthMeasureSpec(): number;
						getHeightMeasureSpec(): number;
						setShouldLogContentAppeared(param0: boolean): void;
						getSurfaceID(): string;
					});
					public constructor();
					public runApplication(): void;
					public setRootViewTag(param0: number): void;
					public getHeightMeasureSpec(): number;
					public setShouldLogContentAppeared(param0: boolean): void;
					public getWidthMeasureSpec(): number;
					public getUIManagerType(): number;
					public getJSModuleName(): string;
					public getRootViewTag(): number;
					public getInitialUITemplate(): string;
					public onStage(param0: number): void;
					/** @deprecated */
					public getSurfaceID(): string;
					public getRootViewGroup(): globalAndroid.view.ViewGroup;
					public getAppProperties(): globalAndroid.os.Bundle;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export class ReactRootViewTagGenerator {
					public static class: java.lang.Class<com.facebook.react.uimanager.ReactRootViewTagGenerator>;
					public constructor();
					public static getNextRootViewTag(): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export class ReactShadowNode<T>  extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.react.uimanager.ReactShadowNode<any>>;
					/**
					 * Constructs a new instance of the com.facebook.react.uimanager.ReactShadowNode<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						isVirtual(): boolean;
						isVirtualAnchor(): boolean;
						isYogaLeafNode(): boolean;
						hoistNativeChildren(): boolean;
						getViewClass(): string;
						hasUpdates(): boolean;
						markUpdateSeen(): void;
						markUpdated(): void;
						hasUnseenUpdates(): boolean;
						dirty(): void;
						isDirty(): boolean;
						addChildAt(param0: T, param1: number): void;
						removeChildAt(param0: number): T;
						getChildCount(): number;
						getChildAt(param0: number): T;
						indexOf(param0: T): number;
						removeAndDisposeAllChildren(): void;
						onBeforeLayout(param0: com.facebook.react.uimanager.NativeViewHierarchyOptimizer): void;
						updateProperties(param0: com.facebook.react.uimanager.ReactStylesDiffMap): void;
						onAfterUpdateTransaction(): void;
						onCollectExtraUpdates(param0: com.facebook.react.uimanager.UIViewOperationQueue): void;
						dispatchUpdates(param0: number, param1: number, param2: com.facebook.react.uimanager.UIViewOperationQueue, param3: com.facebook.react.uimanager.NativeViewHierarchyOptimizer): boolean;
						getReactTag(): number;
						setReactTag(param0: number): void;
						getRootTag(): number;
						setRootTag(param0: number): void;
						setViewClassName(param0: string): void;
						getParent(): T;
						getLayoutParent(): T;
						setLayoutParent(param0: T): void;
						getThemedContext(): com.facebook.react.uimanager.ThemedReactContext;
						setThemedContext(param0: com.facebook.react.uimanager.ThemedReactContext): void;
						shouldNotifyOnLayout(): boolean;
						calculateLayout(): void;
						calculateLayout(param0: number, param1: number): void;
						hasNewLayout(): boolean;
						markLayoutSeen(): void;
						addNativeChildAt(param0: T, param1: number): void;
						removeNativeChildAt(param0: number): T;
						removeAllNativeChildren(): void;
						getNativeChildCount(): number;
						indexOfNativeChild(param0: T): number;
						getNativeParent(): T;
						setIsLayoutOnly(param0: boolean): void;
						isLayoutOnly(): boolean;
						getNativeKind(): com.facebook.react.uimanager.NativeKind;
						getTotalNativeChildren(): number;
						isDescendantOf(param0: T): boolean;
						getHierarchyInfo(): string;
						setLocalData(param0: any): void;
						getNativeOffsetForChild(param0: T): number;
						getLayoutX(): number;
						getLayoutY(): number;
						getLayoutWidth(): number;
						getLayoutHeight(): number;
						getScreenX(): number;
						getScreenY(): number;
						getScreenWidth(): number;
						getScreenHeight(): number;
						getLayoutDirection(): com.facebook.yoga.YogaDirection;
						setLayoutDirection(param0: com.facebook.yoga.YogaDirection): void;
						getStyleWidth(): com.facebook.yoga.YogaValue;
						setStyleWidth(param0: number): void;
						setStyleWidthPercent(param0: number): void;
						setStyleWidthAuto(): void;
						setStyleMinWidth(param0: number): void;
						setStyleMinWidthPercent(param0: number): void;
						setStyleMaxWidth(param0: number): void;
						setStyleMaxWidthPercent(param0: number): void;
						getStyleHeight(): com.facebook.yoga.YogaValue;
						setStyleHeight(param0: number): void;
						setStyleHeightPercent(param0: number): void;
						setStyleHeightAuto(): void;
						setStyleMinHeight(param0: number): void;
						setStyleMinHeightPercent(param0: number): void;
						setStyleMaxHeight(param0: number): void;
						setStyleMaxHeightPercent(param0: number): void;
						setFlex(param0: number): void;
						setFlexGrow(param0: number): void;
						setFlexShrink(param0: number): void;
						setFlexBasis(param0: number): void;
						setFlexBasisAuto(): void;
						setFlexBasisPercent(param0: number): void;
						setStyleAspectRatio(param0: number): void;
						setFlexDirection(param0: com.facebook.yoga.YogaFlexDirection): void;
						setFlexWrap(param0: com.facebook.yoga.YogaWrap): void;
						setAlignSelf(param0: com.facebook.yoga.YogaAlign): void;
						setAlignItems(param0: com.facebook.yoga.YogaAlign): void;
						setAlignContent(param0: com.facebook.yoga.YogaAlign): void;
						setJustifyContent(param0: com.facebook.yoga.YogaJustify): void;
						setOverflow(param0: com.facebook.yoga.YogaOverflow): void;
						setDisplay(param0: com.facebook.yoga.YogaDisplay): void;
						setMargin(param0: number, param1: number): void;
						setMarginPercent(param0: number, param1: number): void;
						setMarginAuto(param0: number): void;
						getPadding(param0: number): number;
						getStylePadding(param0: number): com.facebook.yoga.YogaValue;
						setDefaultPadding(param0: number, param1: number): void;
						setPadding(param0: number, param1: number): void;
						setPaddingPercent(param0: number, param1: number): void;
						setBorder(param0: number, param1: number): void;
						setPosition(param0: number, param1: number): void;
						setPositionPercent(param0: number, param1: number): void;
						setPositionType(param0: com.facebook.yoga.YogaPositionType): void;
						setShouldNotifyOnLayout(param0: boolean): void;
						setBaselineFunction(param0: com.facebook.yoga.YogaBaselineFunction): void;
						setMeasureFunction(param0: com.facebook.yoga.YogaMeasureFunction): void;
						isMeasureDefined(): boolean;
						dispose(): void;
						setMeasureSpecs(param0: number, param1: number): void;
						getWidthMeasureSpec(): java.lang.Integer;
						getHeightMeasureSpec(): java.lang.Integer;
						calculateLayoutOnChildren(): java.lang.Iterable<any>;
					});
					public constructor();
					public getLayoutWidth(): number;
					public setLayoutParent(param0: T): void;
					public getScreenY(): number;
					public setMarginPercent(param0: number, param1: number): void;
					public getScreenHeight(): number;
					public getWidthMeasureSpec(): java.lang.Integer;
					public markLayoutSeen(): void;
					public isLayoutOnly(): boolean;
					public setStyleMaxHeight(param0: number): void;
					public markUpdateSeen(): void;
					public isYogaLeafNode(): boolean;
					public addChildAt(param0: T, param1: number): void;
					public getReactTag(): number;
					public setLayoutDirection(param0: com.facebook.yoga.YogaDirection): void;
					public setDefaultPadding(param0: number, param1: number): void;
					public setThemedContext(param0: com.facebook.react.uimanager.ThemedReactContext): void;
					public getHeightMeasureSpec(): java.lang.Integer;
					public setStyleMinWidth(param0: number): void;
					public getViewClass(): string;
					public getParent(): T;
					public isVirtual(): boolean;
					public setStyleMaxWidthPercent(param0: number): void;
					public setFlexBasisAuto(): void;
					public setStyleWidthAuto(): void;
					public onAfterUpdateTransaction(): void;
					public dispatchUpdates(param0: number, param1: number, param2: com.facebook.react.uimanager.UIViewOperationQueue, param3: com.facebook.react.uimanager.NativeViewHierarchyOptimizer): boolean;
					public indexOf(param0: T): number;
					public setFlex(param0: number): void;
					public setStyleMinHeightPercent(param0: number): void;
					public getLayoutParent(): T;
					public addNativeChildAt(param0: T, param1: number): void;
					public getStylePadding(param0: number): com.facebook.yoga.YogaValue;
					public getPadding(param0: number): number;
					public setStyleMaxHeightPercent(param0: number): void;
					public getNativeOffsetForChild(param0: T): number;
					public hasUpdates(): boolean;
					public setIsLayoutOnly(param0: boolean): void;
					public setStyleHeight(param0: number): void;
					public calculateLayoutOnChildren(): java.lang.Iterable<any>;
					public setMarginAuto(param0: number): void;
					public setPadding(param0: number, param1: number): void;
					public isMeasureDefined(): boolean;
					public shouldNotifyOnLayout(): boolean;
					public getTotalNativeChildren(): number;
					public setPaddingPercent(param0: number, param1: number): void;
					public dirty(): void;
					public setMeasureSpecs(param0: number, param1: number): void;
					public onCollectExtraUpdates(param0: com.facebook.react.uimanager.UIViewOperationQueue): void;
					public setAlignContent(param0: com.facebook.yoga.YogaAlign): void;
					public hasUnseenUpdates(): boolean;
					public setFlexGrow(param0: number): void;
					public setAlignItems(param0: com.facebook.yoga.YogaAlign): void;
					public isDescendantOf(param0: T): boolean;
					public getChildAt(param0: number): T;
					public onBeforeLayout(param0: com.facebook.react.uimanager.NativeViewHierarchyOptimizer): void;
					public getChildCount(): number;
					public getStyleWidth(): com.facebook.yoga.YogaValue;
					public calculateLayout(): void;
					public setPositionType(param0: com.facebook.yoga.YogaPositionType): void;
					public setReactTag(param0: number): void;
					public setFlexBasis(param0: number): void;
					public getNativeChildCount(): number;
					public setShouldNotifyOnLayout(param0: boolean): void;
					public getStyleHeight(): com.facebook.yoga.YogaValue;
					public updateProperties(param0: com.facebook.react.uimanager.ReactStylesDiffMap): void;
					public indexOfNativeChild(param0: T): number;
					public setFlexBasisPercent(param0: number): void;
					public isVirtualAnchor(): boolean;
					public getScreenWidth(): number;
					public setFlexShrink(param0: number): void;
					public removeAllNativeChildren(): void;
					public hoistNativeChildren(): boolean;
					public setBorder(param0: number, param1: number): void;
					public setMeasureFunction(param0: com.facebook.yoga.YogaMeasureFunction): void;
					public setStyleHeightAuto(): void;
					public setStyleMinWidthPercent(param0: number): void;
					public setStyleHeightPercent(param0: number): void;
					public calculateLayout(param0: number, param1: number): void;
					public removeNativeChildAt(param0: number): T;
					public setStyleAspectRatio(param0: number): void;
					public removeAndDisposeAllChildren(): void;
					public getThemedContext(): com.facebook.react.uimanager.ThemedReactContext;
					public setMargin(param0: number, param1: number): void;
					public hasNewLayout(): boolean;
					public setStyleMinHeight(param0: number): void;
					public isDirty(): boolean;
					public getNativeParent(): T;
					public getLayoutDirection(): com.facebook.yoga.YogaDirection;
					public removeChildAt(param0: number): T;
					public getNativeKind(): com.facebook.react.uimanager.NativeKind;
					public setFlexDirection(param0: com.facebook.yoga.YogaFlexDirection): void;
					public getHierarchyInfo(): string;
					public setPosition(param0: number, param1: number): void;
					public setStyleWidth(param0: number): void;
					public setOverflow(param0: com.facebook.yoga.YogaOverflow): void;
					public setStyleWidthPercent(param0: number): void;
					public getRootTag(): number;
					public markUpdated(): void;
					public setLocalData(param0: any): void;
					public setFlexWrap(param0: com.facebook.yoga.YogaWrap): void;
					public getLayoutX(): number;
					public dispose(): void;
					public getLayoutHeight(): number;
					public getLayoutY(): number;
					public setRootTag(param0: number): void;
					public getScreenX(): number;
					public setStyleMaxWidth(param0: number): void;
					public setJustifyContent(param0: com.facebook.yoga.YogaJustify): void;
					public setBaselineFunction(param0: com.facebook.yoga.YogaBaselineFunction): void;
					public setDisplay(param0: com.facebook.yoga.YogaDisplay): void;
					public setAlignSelf(param0: com.facebook.yoga.YogaAlign): void;
					public setViewClassName(param0: string): void;
					public setPositionPercent(param0: number, param1: number): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export class ReactShadowNodeImpl extends com.facebook.react.uimanager.ReactShadowNode<com.facebook.react.uimanager.ReactShadowNodeImpl> {
					public static class: java.lang.Class<com.facebook.react.uimanager.ReactShadowNodeImpl>;
					public getLayoutWidth(): number;
					public getScreenY(): number;
					public setMarginPercent(param0: number, param1: number): void;
					public getScreenHeight(): number;
					public getWidthMeasureSpec(): java.lang.Integer;
					public markLayoutSeen(): void;
					public isLayoutOnly(): boolean;
					public setStyleMaxHeight(param0: number): void;
					public markUpdateSeen(): void;
					public isYogaLeafNode(): boolean;
					public addChildAt(param0: com.facebook.react.uimanager.ReactShadowNodeImpl, param1: number): void;
					public constructor();
					public getChildAt(param0: number): com.facebook.react.uimanager.ReactShadowNodeImpl;
					public getReactTag(): number;
					public setLayoutDirection(param0: com.facebook.yoga.YogaDirection): void;
					public setDefaultPadding(param0: number, param1: number): void;
					public getLayoutParent(): com.facebook.react.uimanager.ReactShadowNodeImpl;
					public setThemedContext(param0: com.facebook.react.uimanager.ThemedReactContext): void;
					public getHeightMeasureSpec(): java.lang.Integer;
					public setStyleMinWidth(param0: number): void;
					public getViewClass(): string;
					public isDescendantOf(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): boolean;
					public addNativeChildAt(param0: com.facebook.react.uimanager.ReactShadowNodeImpl, param1: number): void;
					public isVirtual(): boolean;
					public isDescendantOf(param0: any): boolean;
					public setStyleMaxWidthPercent(param0: number): void;
					public setFlexBasisAuto(): void;
					public removeNativeChildAt(param0: number): com.facebook.react.uimanager.ReactShadowNodeImpl;
					public getNativeOffsetForChild(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): number;
					public setStyleWidthAuto(): void;
					public setLayoutParent(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): void;
					public onAfterUpdateTransaction(): void;
					public dispatchUpdates(param0: number, param1: number, param2: com.facebook.react.uimanager.UIViewOperationQueue, param3: com.facebook.react.uimanager.NativeViewHierarchyOptimizer): boolean;
					public setFlex(param0: number): void;
					public setStyleMinHeightPercent(param0: number): void;
					public getStylePadding(param0: number): com.facebook.yoga.YogaValue;
					public getNativeParent(): any;
					public getPadding(param0: number): number;
					public setStyleMaxHeightPercent(param0: number): void;
					public hasUpdates(): boolean;
					public setIsLayoutOnly(param0: boolean): void;
					public setStyleHeight(param0: number): void;
					public calculateLayoutOnChildren(): java.lang.Iterable<any>;
					public getNativeOffsetForChild(param0: any): number;
					public setMarginAuto(param0: number): void;
					public setPadding(param0: number, param1: number): void;
					public isMeasureDefined(): boolean;
					public shouldNotifyOnLayout(): boolean;
					public getTotalNativeChildren(): number;
					public setPaddingPercent(param0: number, param1: number): void;
					public indexOf(param0: any): number;
					public dirty(): void;
					public setMeasureSpecs(param0: number, param1: number): void;
					public onCollectExtraUpdates(param0: com.facebook.react.uimanager.UIViewOperationQueue): void;
					public setAlignContent(param0: com.facebook.yoga.YogaAlign): void;
					public hasUnseenUpdates(): boolean;
					public setFlexGrow(param0: number): void;
					public setAlignItems(param0: com.facebook.yoga.YogaAlign): void;
					public onBeforeLayout(param0: com.facebook.react.uimanager.NativeViewHierarchyOptimizer): void;
					public getChildCount(): number;
					public getStyleWidth(): com.facebook.yoga.YogaValue;
					public calculateLayout(): void;
					public setPositionType(param0: com.facebook.yoga.YogaPositionType): void;
					public setReactTag(param0: number): void;
					public setFlexBasis(param0: number): void;
					public getNativeChildCount(): number;
					public setShouldNotifyOnLayout(param0: boolean): void;
					public addChildAt(param0: any, param1: number): void;
					public getStyleHeight(): com.facebook.yoga.YogaValue;
					public updateProperties(param0: com.facebook.react.uimanager.ReactStylesDiffMap): void;
					public setFlexBasisPercent(param0: number): void;
					public isVirtualAnchor(): boolean;
					public getScreenWidth(): number;
					public setFlexShrink(param0: number): void;
					public removeAllNativeChildren(): void;
					public hoistNativeChildren(): boolean;
					public setBorder(param0: number, param1: number): void;
					public setMeasureFunction(param0: com.facebook.yoga.YogaMeasureFunction): void;
					public setStyleHeightAuto(): void;
					public getNativeParent(): com.facebook.react.uimanager.ReactShadowNodeImpl;
					public setStyleMinWidthPercent(param0: number): void;
					public setStyleHeightPercent(param0: number): void;
					public calculateLayout(param0: number, param1: number): void;
					public setStyleAspectRatio(param0: number): void;
					public getChildAt(param0: number): any;
					public removeAndDisposeAllChildren(): void;
					public indexOfNativeChild(param0: any): number;
					public getParent(): any;
					public getThemedContext(): com.facebook.react.uimanager.ThemedReactContext;
					public setMargin(param0: number, param1: number): void;
					public hasNewLayout(): boolean;
					public setStyleMinHeight(param0: number): void;
					public isDirty(): boolean;
					public indexOf(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): number;
					public getLayoutDirection(): com.facebook.yoga.YogaDirection;
					public removeNativeChildAt(param0: number): any;
					public getParent(): com.facebook.react.uimanager.ReactShadowNodeImpl;
					public getLayoutParent(): any;
					public toString(): string;
					public getNativeKind(): com.facebook.react.uimanager.NativeKind;
					public setFlexDirection(param0: com.facebook.yoga.YogaFlexDirection): void;
					public indexOfNativeChild(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): number;
					public setPosition(param0: number, param1: number): void;
					public getHierarchyInfo(): string;
					public setStyleWidth(param0: number): void;
					public setOverflow(param0: com.facebook.yoga.YogaOverflow): void;
					public setStyleWidthPercent(param0: number): void;
					public removeChildAt(param0: number): any;
					public getRootTag(): number;
					public markUpdated(): void;
					public setLocalData(param0: any): void;
					public setFlexWrap(param0: com.facebook.yoga.YogaWrap): void;
					public getLayoutX(): number;
					public dispose(): void;
					public getLayoutHeight(): number;
					public addNativeChildAt(param0: any, param1: number): void;
					public getLayoutY(): number;
					public setRootTag(param0: number): void;
					public getScreenX(): number;
					public setStyleMaxWidth(param0: number): void;
					public setJustifyContent(param0: com.facebook.yoga.YogaJustify): void;
					public setBaselineFunction(param0: com.facebook.yoga.YogaBaselineFunction): void;
					public setDisplay(param0: com.facebook.yoga.YogaDisplay): void;
					public setLayoutParent(param0: any): void;
					public setAlignSelf(param0: com.facebook.yoga.YogaAlign): void;
					public setViewClassName(param0: string): void;
					public removeChildAt(param0: number): com.facebook.react.uimanager.ReactShadowNodeImpl;
					public setPositionPercent(param0: number, param1: number): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export class ReactStylesDiffMap {
					public static class: java.lang.Class<com.facebook.react.uimanager.ReactStylesDiffMap>;
					public getDouble(param0: string, param1: number): number;
					public toMap(): java.util.Map<string,any>;
					public isNull(param0: string): boolean;
					public getBoolean(param0: string, param1: boolean): boolean;
					public getString(param0: string): string;
					public toString(): string;
					public hasKey(param0: string): boolean;
					public constructor(param0: com.facebook.react.bridge.ReadableMap);
					public getDynamic(param0: string): com.facebook.react.bridge.Dynamic;
					public getMap(param0: string): com.facebook.react.bridge.ReadableMap;
					public getFloat(param0: string, param1: number): number;
					public getArray(param0: string): com.facebook.react.bridge.ReadableArray;
					public getInt(param0: string, param1: number): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export class ReactYogaConfigProvider {
					public static class: java.lang.Class<com.facebook.react.uimanager.ReactYogaConfigProvider>;
					public constructor();
					public static get(): com.facebook.yoga.YogaConfig;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export class ReactZIndexedViewGroup {
					public static class: java.lang.Class<com.facebook.react.uimanager.ReactZIndexedViewGroup>;
					/**
					 * Constructs a new instance of the com.facebook.react.uimanager.ReactZIndexedViewGroup interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						getZIndexMappedChildIndex(param0: number): number;
						updateDrawingOrder(): void;
					});
					public constructor();
					public getZIndexMappedChildIndex(param0: number): number;
					public updateDrawingOrder(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export class RootView {
					public static class: java.lang.Class<com.facebook.react.uimanager.RootView>;
					/**
					 * Constructs a new instance of the com.facebook.react.uimanager.RootView interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onChildStartedNativeGesture(param0: globalAndroid.view.MotionEvent): void;
						handleException(param0: java.lang.Throwable): void;
					});
					public constructor();
					public handleException(param0: java.lang.Throwable): void;
					public onChildStartedNativeGesture(param0: globalAndroid.view.MotionEvent): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export class RootViewManager extends com.facebook.react.uimanager.ViewGroupManager<globalAndroid.view.ViewGroup> {
					public static class: java.lang.Class<com.facebook.react.uimanager.RootViewManager>;
					public static REACT_CLASS: string;
					/** @deprecated */
					public setScaleY(param0: any, param1: number): void;
					/** @deprecated */
					public setTranslateX(param0: any, param1: number): void;
					public setElevation(param0: any, param1: number): void;
					public setZIndex(param0: any, param1: number): void;
					public canOverrideExistingModule(): boolean;
					public setOpacity(param0: any, param1: number): void;
					public setBorderBottomLeftRadius(param0: any, param1: number): void;
					public setAccessibilityHint(param0: any, param1: string): void;
					public setImportantForAccessibility(param0: any, param1: string): void;
					public createViewInstance(param0: com.facebook.react.uimanager.ThemedReactContext, param1: com.facebook.react.uimanager.ReactStylesDiffMap, param2: com.facebook.react.uimanager.StateWrapper): any;
					public setRenderToHardwareTexture(param0: any, param1: boolean): void;
					public setAccessibilityLiveRegion(param0: any, param1: string): void;
					public needsCustomLayoutForChildren(): boolean;
					public constructor();
					public setScaleX(param0: any, param1: number): void;
					public createViewInstance(param0: com.facebook.react.uimanager.ThemedReactContext): any;
					public setBorderBottomRightRadius(param0: any, param1: number): void;
					public createViewInstance(param0: com.facebook.react.uimanager.ThemedReactContext): globalAndroid.view.ViewGroup;
					/** @deprecated */
					public setTranslateY(param0: any, param1: number): void;
					public setBorderTopRightRadius(param0: any, param1: number): void;
					public setTranslateX(param0: any, param1: number): void;
					public setAccessibilityActions(param0: any, param1: com.facebook.react.bridge.ReadableArray): void;
					public setViewState(param0: any, param1: com.facebook.react.bridge.ReadableMap): void;
					public setBackgroundColor(param0: any, param1: number): void;
					public setTransform(param0: any, param1: com.facebook.react.bridge.ReadableArray): void;
					/** @deprecated */
					public setScaleX(param0: any, param1: number): void;
					public setNativeId(param0: any, param1: string): void;
					public setScaleY(param0: any, param1: number): void;
					public setBorderTopLeftRadius(param0: any, param1: number): void;
					public setAccessibilityRole(param0: any, param1: string): void;
					public onCatalystInstanceDestroy(): void;
					public getName(): string;
					public setTestId(param0: any, param1: string): void;
					public setBorderRadius(param0: any, param1: number): void;
					public setAccessibilityLabel(param0: any, param1: string): void;
					public setTranslateY(param0: any, param1: number): void;
					public setRotation(param0: any, param1: number): void;
					/** @deprecated */
					public setRotation(param0: any, param1: number): void;
					public initialize(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export class RootViewUtil {
					public static class: java.lang.Class<com.facebook.react.uimanager.RootViewUtil>;
					public static getRootView(param0: globalAndroid.view.View): com.facebook.react.uimanager.RootView;
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export class ShadowNodeRegistry {
					public static class: java.lang.Class<com.facebook.react.uimanager.ShadowNodeRegistry>;
					public getNode(param0: number): com.facebook.react.uimanager.ReactShadowNode<any>;
					public isRootNode(param0: number): boolean;
					public addNode(param0: com.facebook.react.uimanager.ReactShadowNode<any>): void;
					public addRootNode(param0: com.facebook.react.uimanager.ReactShadowNode<any>): void;
					public removeRootNode(param0: number): void;
					public constructor();
					public getRootNodeCount(): number;
					public getRootTag(param0: number): number;
					public removeNode(param0: number): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export abstract class SimpleViewManager<T>  extends com.facebook.react.uimanager.BaseViewManager<any,com.facebook.react.uimanager.LayoutShadowNode> {
					public static class: java.lang.Class<com.facebook.react.uimanager.SimpleViewManager<any>>;
					/** @deprecated */
					public setScaleY(param0: any, param1: number): void;
					public createShadowNodeInstance(param0: com.facebook.react.bridge.ReactApplicationContext): any;
					public createShadowNodeInstance(): com.facebook.react.uimanager.LayoutShadowNode;
					/** @deprecated */
					public setTranslateX(param0: any, param1: number): void;
					public setElevation(param0: any, param1: number): void;
					public setZIndex(param0: any, param1: number): void;
					public canOverrideExistingModule(): boolean;
					public setOpacity(param0: any, param1: number): void;
					public setBorderBottomLeftRadius(param0: any, param1: number): void;
					public setAccessibilityHint(param0: any, param1: string): void;
					public setImportantForAccessibility(param0: any, param1: string): void;
					public setRenderToHardwareTexture(param0: any, param1: boolean): void;
					public setAccessibilityLiveRegion(param0: any, param1: string): void;
					public constructor();
					public setScaleX(param0: any, param1: number): void;
					public setBorderBottomRightRadius(param0: any, param1: number): void;
					/** @deprecated */
					public setTranslateY(param0: any, param1: number): void;
					public createShadowNodeInstance(): any;
					public setBorderTopRightRadius(param0: any, param1: number): void;
					public setTranslateX(param0: any, param1: number): void;
					public getShadowNodeClass(): java.lang.Class<any>;
					public setAccessibilityActions(param0: any, param1: com.facebook.react.bridge.ReadableArray): void;
					public setViewState(param0: any, param1: com.facebook.react.bridge.ReadableMap): void;
					public setBackgroundColor(param0: any, param1: number): void;
					public setTransform(param0: any, param1: com.facebook.react.bridge.ReadableArray): void;
					/** @deprecated */
					public setScaleX(param0: any, param1: number): void;
					public setNativeId(param0: any, param1: string): void;
					public setScaleY(param0: any, param1: number): void;
					public setBorderTopLeftRadius(param0: any, param1: number): void;
					public setAccessibilityRole(param0: any, param1: string): void;
					public onCatalystInstanceDestroy(): void;
					public setTestId(param0: any, param1: string): void;
					public getName(): string;
					public getShadowNodeClass(): java.lang.Class<com.facebook.react.uimanager.LayoutShadowNode>;
					public setBorderRadius(param0: any, param1: number): void;
					public setAccessibilityLabel(param0: any, param1: string): void;
					public updateExtraData(param0: any, param1: any): void;
					public setTranslateY(param0: any, param1: number): void;
					public setRotation(param0: any, param1: number): void;
					/** @deprecated */
					public setRotation(param0: any, param1: number): void;
					public initialize(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export class Spacing {
					public static class: java.lang.Class<com.facebook.react.uimanager.Spacing>;
					public static LEFT: number;
					public static TOP: number;
					public static RIGHT: number;
					public static BOTTOM: number;
					public static START: number;
					public static END: number;
					public static HORIZONTAL: number;
					public static VERTICAL: number;
					public static ALL: number;
					public get(param0: number): number;
					public getRaw(param0: number): number;
					public reset(): void;
					public constructor();
					public set(param0: number, param1: number): boolean;
					public constructor(param0: number);
					public constructor(param0: com.facebook.react.uimanager.Spacing);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export class StateWrapper {
					public static class: java.lang.Class<com.facebook.react.uimanager.StateWrapper>;
					/**
					 * Constructs a new instance of the com.facebook.react.uimanager.StateWrapper interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						getState(): com.facebook.react.bridge.ReadableNativeMap;
						updateState(param0: com.facebook.react.bridge.WritableMap): void;
					});
					public constructor();
					public updateState(param0: com.facebook.react.bridge.WritableMap): void;
					public getState(): com.facebook.react.bridge.ReadableNativeMap;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export class ThemedReactContext extends com.facebook.react.bridge.ReactContext {
					public static class: java.lang.Class<com.facebook.react.uimanager.ThemedReactContext>;
					public constructor(param0: globalAndroid.content.Context);
					public constructor(param0: com.facebook.react.bridge.ReactApplicationContext, param1: globalAndroid.content.Context);
					public constructor(param0: com.facebook.react.bridge.ReactApplicationContext, param1: globalAndroid.content.Context, param2: string);
					public getCurrentActivity(): globalAndroid.app.Activity;
					public hasCurrentActivity(): boolean;
					public getJSIModule(param0: com.facebook.react.bridge.JSIModuleType): com.facebook.react.bridge.JSIModule;
					public removeLifecycleEventListener(param0: com.facebook.react.bridge.LifecycleEventListener): void;
					public addLifecycleEventListener(param0: com.facebook.react.bridge.LifecycleEventListener): void;
					public getSurfaceID(): string;
					public isBridgeless(): boolean;
					/** @deprecated */
					public isBridgeless(): boolean;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export class TouchTargetHelper {
					public static class: java.lang.Class<com.facebook.react.uimanager.TouchTargetHelper>;
					public static findTargetTagForTouch(param0: number, param1: number, param2: globalAndroid.view.ViewGroup, param3: native.Array<number>): number;
					public static findTargetTagForTouch(param0: number, param1: number, param2: globalAndroid.view.ViewGroup): number;
					public constructor();
					public static findTargetTagAndCoordinatesForTouch(param0: number, param1: number, param2: globalAndroid.view.ViewGroup, param3: native.Array<number>, param4: native.Array<number>): number;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export class TransformHelper {
					public static class: java.lang.Class<com.facebook.react.uimanager.TransformHelper>;
					public static processTransform(param0: com.facebook.react.bridge.ReadableArray, param1: native.Array<number>): void;
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export class UIBlock {
					public static class: java.lang.Class<com.facebook.react.uimanager.UIBlock>;
					/**
					 * Constructs a new instance of the com.facebook.react.uimanager.UIBlock interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						execute(param0: com.facebook.react.uimanager.NativeViewHierarchyManager): void;
					});
					public constructor();
					public execute(param0: com.facebook.react.uimanager.NativeViewHierarchyManager): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export class UIImplementation {
					public static class: java.lang.Class<com.facebook.react.uimanager.UIImplementation>;
					public uiImplementationThreadLock: any;
					public mEventDispatcher: com.facebook.react.uimanager.events.EventDispatcher;
					public mReactContext: com.facebook.react.bridge.ReactApplicationContext;
					public mShadowNodeRegistry: com.facebook.react.uimanager.ShadowNodeRegistry;
					public mLayoutUpdateListener: com.facebook.react.uimanager.UIImplementation.LayoutUpdateListener;
					public constructor(param0: com.facebook.react.bridge.ReactApplicationContext, param1: com.facebook.react.uimanager.ViewManagerRegistry, param2: com.facebook.react.uimanager.UIViewOperationQueue, param3: com.facebook.react.uimanager.events.EventDispatcher);
					public handleUpdateView(param0: com.facebook.react.uimanager.ReactShadowNode<any>, param1: string, param2: com.facebook.react.uimanager.ReactStylesDiffMap): void;
					public manageChildren(param0: number, param1: com.facebook.react.bridge.ReadableArray, param2: com.facebook.react.bridge.ReadableArray, param3: com.facebook.react.bridge.ReadableArray, param4: com.facebook.react.bridge.ReadableArray, param5: com.facebook.react.bridge.ReadableArray): void;
					public constructor(param0: com.facebook.react.bridge.ReactApplicationContext, param1: java.util.List<com.facebook.react.uimanager.ViewManager<any,any>>, param2: com.facebook.react.uimanager.events.EventDispatcher, param3: number);
					public updateRootView(param0: com.facebook.react.uimanager.ReactShadowNode<any>, param1: number, param2: number): void;
					/** @deprecated */
					public dispatchViewManagerCommand(param0: number, param1: number, param2: com.facebook.react.bridge.ReadableArray): void;
					public onHostDestroy(): void;
					public onHostPause(): void;
					public removeSubviewsFromContainerWithID(param0: number): void;
					public updateViewHierarchy(): void;
					public setChildren(param0: number, param1: com.facebook.react.bridge.ReadableArray): void;
					public showPopupMenu(param0: number, param1: com.facebook.react.bridge.ReadableArray, param2: com.facebook.react.bridge.Callback, param3: com.facebook.react.bridge.Callback): void;
					/** @deprecated */
					public viewIsDescendantOf(param0: number, param1: number, param2: com.facebook.react.bridge.Callback): void;
					public resolveViewManager(param0: string): com.facebook.react.uimanager.ViewManager<any,any>;
					public registerRootView(param0: globalAndroid.view.View, param1: number, param2: com.facebook.react.uimanager.ThemedReactContext): void;
					public measureLayout(param0: number, param1: number, param2: com.facebook.react.bridge.Callback, param3: com.facebook.react.bridge.Callback): void;
					public addUIBlock(param0: com.facebook.react.uimanager.UIBlock): void;
					public resolveRootTagFromReactTag(param0: number): number;
					public calculateRootLayout(param0: com.facebook.react.uimanager.ReactShadowNode<any>): void;
					public replaceExistingNonRootView(param0: number, param1: number): void;
					public prependUIBlock(param0: com.facebook.react.uimanager.UIBlock): void;
					public measureLayoutRelativeToParent(param0: number, param1: com.facebook.react.bridge.Callback, param2: com.facebook.react.bridge.Callback): void;
					public setViewLocalData(param0: number, param1: any): void;
					public constructor(param0: com.facebook.react.bridge.ReactApplicationContext, param1: com.facebook.react.uimanager.UIManagerModule.ViewManagerResolver, param2: com.facebook.react.uimanager.events.EventDispatcher, param3: number);
					public createRootShadowNode(): com.facebook.react.uimanager.ReactShadowNode<any>;
					public updateRootView(param0: number, param1: number, param2: number): void;
					public getProfiledBatchPerfCounters(): java.util.Map<string,java.lang.Long>;
					public setLayoutAnimationEnabledExperimental(param0: boolean): void;
					public measure(param0: number, param1: com.facebook.react.bridge.Callback): void;
					public profileNextBatch(): void;
					public dispatchViewUpdates(param0: number): void;
					public removeShadowNode(param0: com.facebook.react.uimanager.ReactShadowNode<any>): void;
					public createView(param0: number, param1: string, param2: number, param3: com.facebook.react.bridge.ReadableMap): void;
					public setJSResponder(param0: number, param1: boolean): void;
					public setViewHierarchyUpdateDebugListener(param0: com.facebook.react.uimanager.debug.NotThreadSafeViewHierarchyUpdateDebugListener): void;
					public measureInWindow(param0: number, param1: com.facebook.react.bridge.Callback): void;
					public dismissPopupMenu(): void;
					public synchronouslyUpdateViewOnUIThread(param0: number, param1: com.facebook.react.uimanager.ReactStylesDiffMap): void;
					public clearJSResponder(): void;
					public removeLayoutUpdateListener(): void;
					public createShadowNode(param0: string): com.facebook.react.uimanager.ReactShadowNode<any>;
					public handleCreateView(param0: com.facebook.react.uimanager.ReactShadowNode<any>, param1: number, param2: com.facebook.react.uimanager.ReactStylesDiffMap): void;
					public applyUpdatesRecursive(param0: com.facebook.react.uimanager.ReactShadowNode<any>, param1: number, param2: number): void;
					public updateNodeSize(param0: number, param1: number, param2: number): void;
					public updateView(param0: number, param1: string, param2: com.facebook.react.bridge.ReadableMap): void;
					public setLayoutUpdateListener(param0: com.facebook.react.uimanager.UIImplementation.LayoutUpdateListener): void;
					public removeRootShadowNode(param0: number): void;
					public findSubviewIn(param0: number, param1: number, param2: number, param3: com.facebook.react.bridge.Callback): void;
					public configureNextLayoutAnimation(param0: com.facebook.react.bridge.ReadableMap, param1: com.facebook.react.bridge.Callback): void;
					public dispatchViewManagerCommand(param0: number, param1: string, param2: com.facebook.react.bridge.ReadableArray): void;
					public onHostResume(): void;
					public resolveShadowNode(param0: number): com.facebook.react.uimanager.ReactShadowNode<any>;
					public removeRootView(param0: number): void;
					public sendAccessibilityEvent(param0: number, param1: number): void;
				}
				export module UIImplementation {
					export class LayoutUpdateListener {
						public static class: java.lang.Class<com.facebook.react.uimanager.UIImplementation.LayoutUpdateListener>;
						/**
						 * Constructs a new instance of the com.facebook.react.uimanager.UIImplementation$LayoutUpdateListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onLayoutUpdated(param0: com.facebook.react.uimanager.ReactShadowNode<any>): void;
						});
						public constructor();
						public onLayoutUpdated(param0: com.facebook.react.uimanager.ReactShadowNode<any>): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export class UIImplementationProvider {
					public static class: java.lang.Class<com.facebook.react.uimanager.UIImplementationProvider>;
					public createUIImplementation(param0: com.facebook.react.bridge.ReactApplicationContext, param1: com.facebook.react.uimanager.UIManagerModule.ViewManagerResolver, param2: com.facebook.react.uimanager.events.EventDispatcher, param3: number): com.facebook.react.uimanager.UIImplementation;
					public constructor();
					public createUIImplementation(param0: com.facebook.react.bridge.ReactApplicationContext, param1: java.util.List<com.facebook.react.uimanager.ViewManager<any,any>>, param2: com.facebook.react.uimanager.events.EventDispatcher, param3: number): com.facebook.react.uimanager.UIImplementation;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export class UIManagerHelper {
					public static class: java.lang.Class<com.facebook.react.uimanager.UIManagerHelper>;
					public static getEventDispatcherForReactTag(param0: com.facebook.react.bridge.ReactContext, param1: number): com.facebook.react.uimanager.events.EventDispatcher;
					public constructor();
					public static getUIManager(param0: com.facebook.react.bridge.ReactContext, param1: number): com.facebook.react.bridge.UIManager;
					public static getUIManagerForReactTag(param0: com.facebook.react.bridge.ReactContext, param1: number): com.facebook.react.bridge.UIManager;
					public static getReactContext(param0: globalAndroid.view.View): com.facebook.react.bridge.ReactContext;
					public static getEventDispatcher(param0: com.facebook.react.bridge.ReactContext, param1: number): com.facebook.react.uimanager.events.EventDispatcher;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export class UIManagerModule extends com.facebook.react.bridge.ReactContextBaseJavaModule implements com.facebook.react.bridge.OnBatchCompleteListener, com.facebook.react.bridge.LifecycleEventListener, com.facebook.react.bridge.UIManager {
					public static class: java.lang.Class<com.facebook.react.uimanager.UIManagerModule>;
					public static NAME: string;
					public constructor(param0: com.facebook.react.bridge.ReactApplicationContext, param1: com.facebook.react.uimanager.UIManagerModule.ViewManagerResolver, param2: number);
					/** @deprecated */
					public constructor(param0: com.facebook.react.bridge.ReactApplicationContext, param1: java.util.List<com.facebook.react.uimanager.ViewManager<any,any>>, param2: com.facebook.react.uimanager.UIImplementationProvider, param3: number);
					public manageChildren(param0: number, param1: com.facebook.react.bridge.ReadableArray, param2: com.facebook.react.bridge.ReadableArray, param3: com.facebook.react.bridge.ReadableArray, param4: com.facebook.react.bridge.ReadableArray, param5: com.facebook.react.bridge.ReadableArray): void;
					/** @deprecated */
					public measureLayoutRelativeToParent(param0: number, param1: com.facebook.react.bridge.Callback, param2: com.facebook.react.bridge.Callback): void;
					public getDefaultEventTypes(): com.facebook.react.bridge.WritableMap;
					/** @deprecated */
					public preComputeConstantsForViewManager(param0: java.util.List<string>): void;
					public resolveView(param0: number): globalAndroid.view.View;
					public onHostDestroy(): void;
					public onHostPause(): void;
					public getUIImplementation(): com.facebook.react.uimanager.UIImplementation;
					public findSubviewIn(param0: number, param1: com.facebook.react.bridge.ReadableArray, param2: com.facebook.react.bridge.Callback): void;
					public constructor();
					public setChildren(param0: number, param1: com.facebook.react.bridge.ReadableArray): void;
					public showPopupMenu(param0: number, param1: com.facebook.react.bridge.ReadableArray, param2: com.facebook.react.bridge.Callback, param3: com.facebook.react.bridge.Callback): void;
					public updateRootLayoutSpecs(param0: number, param1: number, param2: number): void;
					/** @deprecated */
					public viewIsDescendantOf(param0: number, param1: number, param2: com.facebook.react.bridge.Callback): void;
					public measureLayout(param0: number, param1: number, param2: com.facebook.react.bridge.Callback, param3: com.facebook.react.bridge.Callback): void;
					public dispatchViewManagerCommand(param0: number, param1: com.facebook.react.bridge.Dynamic, param2: com.facebook.react.bridge.ReadableArray): void;
					public addUIBlock(param0: com.facebook.react.uimanager.UIBlock): void;
					/** @deprecated */
					public getViewManagerRegistry_DO_NOT_USE(): com.facebook.react.uimanager.ViewManagerRegistry;
					public getPerformanceCounters(): java.util.Map<string,java.lang.Long>;
					public synchronouslyUpdateViewOnUIThread(param0: number, param1: com.facebook.react.bridge.ReadableMap): void;
					public prependUIBlock(param0: com.facebook.react.uimanager.UIBlock): void;
					public setViewLocalData(param0: number, param1: any): void;
					public dispatchCommand(param0: number, param1: number, param2: com.facebook.react.bridge.ReadableArray): void;
					public setLayoutAnimationEnabledExperimental(param0: boolean): void;
					public measure(param0: number, param1: com.facebook.react.bridge.Callback): void;
					public profileNextBatch(): void;
					public initialize(): void;
					public getDirectEventNamesResolver(): com.facebook.react.uimanager.UIManagerModule.CustomEventNamesResolver;
					public onBatchComplete(): void;
					public createView(param0: number, param1: string, param2: number, param3: com.facebook.react.bridge.ReadableMap): void;
					public setJSResponder(param0: number, param1: boolean): void;
					public setViewHierarchyUpdateDebugListener(param0: com.facebook.react.uimanager.debug.NotThreadSafeViewHierarchyUpdateDebugListener): void;
					public invalidateNodeLayout(param0: number): void;
					public canOverrideExistingModule(): boolean;
					public constructor(param0: com.facebook.react.bridge.ReactApplicationContext, param1: java.util.List<com.facebook.react.uimanager.ViewManager<any,any>>, param2: number);
					public measureInWindow(param0: number, param1: com.facebook.react.bridge.Callback): void;
					/** @deprecated */
					public constructor(param0: com.facebook.react.bridge.ReactApplicationContext, param1: com.facebook.react.uimanager.UIManagerModule.ViewManagerResolver, param2: com.facebook.react.uimanager.UIImplementationProvider, param3: number);
					public dismissPopupMenu(): void;
					public dispatchCommand(param0: number, param1: string, param2: com.facebook.react.bridge.ReadableArray): void;
					public removeUIManagerListener(param0: com.facebook.react.uimanager.UIManagerModuleListener): void;
					/** @deprecated */
					public dispatchCommand(param0: number, param1: number, param2: com.facebook.react.bridge.ReadableArray): void;
					/** @deprecated */
					public resolveRootTagFromReactTag(param0: number): number;
					public clearJSResponder(): void;
					public addRootView(param0: globalAndroid.view.View): number;
					public getEventDispatcher(): any;
					public addRootView(param0: globalAndroid.view.View, param1: com.facebook.react.bridge.WritableMap, param2: string): number;
					public getConstants(): java.util.Map<string,any>;
					public getConstantsForViewManager(param0: string): com.facebook.react.bridge.WritableMap;
					public updateNodeSize(param0: number, param1: number, param2: number): void;
					public updateView(param0: number, param1: string, param2: com.facebook.react.bridge.ReadableMap): void;
					/** @deprecated */
					public replaceExistingNonRootView(param0: number, param1: number): void;
					/** @deprecated */
					public removeSubviewsFromContainerWithID(param0: number): void;
					public getEventDispatcher(): com.facebook.react.uimanager.events.EventDispatcher;
					public configureNextLayoutAnimation(param0: com.facebook.react.bridge.ReadableMap, param1: com.facebook.react.bridge.Callback, param2: com.facebook.react.bridge.Callback): void;
					public onCatalystInstanceDestroy(): void;
					public getName(): string;
					public onHostResume(): void;
					/** @deprecated */
					public playTouchSound(): void;
					public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
					public addUIManagerListener(param0: com.facebook.react.uimanager.UIManagerModuleListener): void;
					public removeRootView(param0: number): void;
					public sendAccessibilityEvent(param0: number, param1: number): void;
				}
				export module UIManagerModule {
					export class CustomEventNamesResolver {
						public static class: java.lang.Class<com.facebook.react.uimanager.UIManagerModule.CustomEventNamesResolver>;
						/**
						 * Constructs a new instance of the com.facebook.react.uimanager.UIManagerModule$CustomEventNamesResolver interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							resolveCustomEventName(param0: string): string;
						});
						public constructor();
						public resolveCustomEventName(param0: string): string;
					}
					export class MemoryTrimCallback {
						public static class: java.lang.Class<com.facebook.react.uimanager.UIManagerModule.MemoryTrimCallback>;
						public onConfigurationChanged(param0: globalAndroid.content.res.Configuration): void;
						public onTrimMemory(param0: number): void;
						public onLowMemory(): void;
					}
					export class ViewManagerResolver {
						public static class: java.lang.Class<com.facebook.react.uimanager.UIManagerModule.ViewManagerResolver>;
						/**
						 * Constructs a new instance of the com.facebook.react.uimanager.UIManagerModule$ViewManagerResolver interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getViewManager(param0: string): com.facebook.react.uimanager.ViewManager<any,any>;
							getViewManagerNames(): java.util.List<string>;
						});
						public constructor();
						public getViewManagerNames(): java.util.List<string>;
						public getViewManager(param0: string): com.facebook.react.uimanager.ViewManager<any,any>;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export class UIManagerModuleConstants {
					public static class: java.lang.Class<com.facebook.react.uimanager.UIManagerModuleConstants>;
					public static ACTION_DISMISSED: string;
					public static ACTION_ITEM_SELECTED: string;
					public static getConstants(): java.util.Map<string,any>;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export class UIManagerModuleConstantsHelper {
					public static class: java.lang.Class<com.facebook.react.uimanager.UIManagerModuleConstantsHelper>;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export class UIManagerModuleListener {
					public static class: java.lang.Class<com.facebook.react.uimanager.UIManagerModuleListener>;
					/**
					 * Constructs a new instance of the com.facebook.react.uimanager.UIManagerModuleListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						willDispatchViewUpdates(param0: com.facebook.react.uimanager.UIManagerModule): void;
					});
					public constructor();
					public willDispatchViewUpdates(param0: com.facebook.react.uimanager.UIManagerModule): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export class UIViewOperationQueue {
					public static class: java.lang.Class<com.facebook.react.uimanager.UIViewOperationQueue>;
					public static DEFAULT_MIN_TIME_LEFT_IN_FRAME_FOR_NONBATCHED_OPERATION_MS: number;
					public enqueueClearJSResponder(): void;
					public isEmpty(): boolean;
					public setViewHierarchyUpdateDebugListener(param0: com.facebook.react.uimanager.debug.NotThreadSafeViewHierarchyUpdateDebugListener): void;
					public enqueueRemoveRootView(param0: number): void;
					public enqueueShowPopupMenu(param0: number, param1: com.facebook.react.bridge.ReadableArray, param2: com.facebook.react.bridge.Callback, param3: com.facebook.react.bridge.Callback): void;
					public enqueueLayoutUpdateFinished(param0: com.facebook.react.uimanager.ReactShadowNode<any>, param1: com.facebook.react.uimanager.UIImplementation.LayoutUpdateListener): void;
					/** @deprecated */
					public enqueueDispatchCommand(param0: number, param1: number, param2: com.facebook.react.bridge.ReadableArray): void;
					public enqueueFindTargetForTouch(param0: number, param1: number, param2: number, param3: com.facebook.react.bridge.Callback): void;
					public enqueueMeasureInWindow(param0: number, param1: com.facebook.react.bridge.Callback): void;
					public enqueueManageChildren(param0: number, param1: native.Array<number>, param2: native.Array<com.facebook.react.uimanager.ViewAtIndex>, param3: native.Array<number>): void;
					public enqueueUIBlock(param0: com.facebook.react.uimanager.UIBlock): void;
					public dispatchViewUpdates(param0: number, param1: number, param2: number): void;
					public enqueueSetLayoutAnimationEnabled(param0: boolean): void;
					public enqueueDispatchCommand(param0: number, param1: string, param2: com.facebook.react.bridge.ReadableArray): void;
					public constructor(param0: com.facebook.react.bridge.ReactApplicationContext, param1: com.facebook.react.uimanager.NativeViewHierarchyManager, param2: number);
					public enqueueUpdateProperties(param0: number, param1: string, param2: com.facebook.react.uimanager.ReactStylesDiffMap): void;
					public prependUIBlock(param0: com.facebook.react.uimanager.UIBlock): void;
					public enqueueUpdateExtraData(param0: number, param1: any): void;
					public enqueueSetJSResponder(param0: number, param1: number, param2: boolean): void;
					public enqueueUpdateInstanceHandle(param0: number, param1: number): void;
					public enqueueSetChildren(param0: number, param1: com.facebook.react.bridge.ReadableArray): void;
					public enqueueCreateView(param0: com.facebook.react.uimanager.ThemedReactContext, param1: number, param2: string, param3: com.facebook.react.uimanager.ReactStylesDiffMap): void;
					public enqueueConfigureLayoutAnimation(param0: com.facebook.react.bridge.ReadableMap, param1: com.facebook.react.bridge.Callback): void;
					public getProfiledBatchPerfCounters(): java.util.Map<string,java.lang.Long>;
					public addRootView(param0: number, param1: globalAndroid.view.View): void;
					public enqueueDismissPopupMenu(): void;
					public enqueueMeasure(param0: number, param1: com.facebook.react.bridge.Callback): void;
					public profileNextBatch(): void;
					public enqueueSendAccessibilityEvent(param0: number, param1: number): void;
					public enqueueOnLayoutEvent(param0: number, param1: number, param2: number, param3: number, param4: number): void;
					public enqueueUpdateLayout(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number): void;
					public enqueueUIOperation(param0: com.facebook.react.uimanager.UIViewOperationQueue.UIOperation): void;
				}
				export module UIViewOperationQueue {
					export abstract class AnimationOperation extends com.facebook.react.uimanager.UIViewOperationQueue.UIOperation {
						public static class: java.lang.Class<com.facebook.react.uimanager.UIViewOperationQueue.AnimationOperation>;
						public mAnimationID: number;
						public constructor(param0: number);
						public execute(): void;
					}
					export class ChangeJSResponderOperation extends com.facebook.react.uimanager.UIViewOperationQueue.ViewOperation {
						public static class: java.lang.Class<com.facebook.react.uimanager.UIViewOperationQueue.ChangeJSResponderOperation>;
						public constructor(param0: com.facebook.react.uimanager.UIViewOperationQueue, param1: number);
						public constructor(param0: com.facebook.react.uimanager.UIViewOperationQueue, param1: number, param2: number, param3: boolean, param4: boolean);
						public execute(): void;
					}
					export class ConfigureLayoutAnimationOperation extends com.facebook.react.uimanager.UIViewOperationQueue.UIOperation {
						public static class: java.lang.Class<com.facebook.react.uimanager.UIViewOperationQueue.ConfigureLayoutAnimationOperation>;
						public execute(): void;
					}
					export class CreateViewOperation extends com.facebook.react.uimanager.UIViewOperationQueue.ViewOperation {
						public static class: java.lang.Class<com.facebook.react.uimanager.UIViewOperationQueue.CreateViewOperation>;
						public constructor(param0: com.facebook.react.uimanager.UIViewOperationQueue, param1: com.facebook.react.uimanager.ThemedReactContext, param2: number, param3: string, param4: com.facebook.react.uimanager.ReactStylesDiffMap);
						public constructor(param0: com.facebook.react.uimanager.UIViewOperationQueue, param1: number);
						public execute(): void;
					}
					export class DismissPopupMenuOperation extends com.facebook.react.uimanager.UIViewOperationQueue.UIOperation {
						public static class: java.lang.Class<com.facebook.react.uimanager.UIViewOperationQueue.DismissPopupMenuOperation>;
						public execute(): void;
					}
					export class DispatchCommandOperation extends com.facebook.react.uimanager.UIViewOperationQueue.ViewOperation implements com.facebook.react.uimanager.UIViewOperationQueue.DispatchCommandViewOperation {
						public static class: java.lang.Class<com.facebook.react.uimanager.UIViewOperationQueue.DispatchCommandOperation>;
						public getRetries(): number;
						public constructor(param0: com.facebook.react.uimanager.UIViewOperationQueue, param1: number, param2: number, param3: com.facebook.react.bridge.ReadableArray);
						public constructor(param0: com.facebook.react.uimanager.UIViewOperationQueue, param1: number);
						public executeWithExceptions(): void;
						public execute(): void;
						public incrementRetries(): void;
					}
					export class DispatchCommandViewOperation {
						public static class: java.lang.Class<com.facebook.react.uimanager.UIViewOperationQueue.DispatchCommandViewOperation>;
						/**
						 * Constructs a new instance of the com.facebook.react.uimanager.UIViewOperationQueue$DispatchCommandViewOperation interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							executeWithExceptions(): void;
							incrementRetries(): void;
							getRetries(): number;
						});
						public constructor();
						public getRetries(): number;
						public executeWithExceptions(): void;
						public incrementRetries(): void;
					}
					export class DispatchStringCommandOperation extends com.facebook.react.uimanager.UIViewOperationQueue.ViewOperation implements com.facebook.react.uimanager.UIViewOperationQueue.DispatchCommandViewOperation {
						public static class: java.lang.Class<com.facebook.react.uimanager.UIViewOperationQueue.DispatchStringCommandOperation>;
						public constructor(param0: com.facebook.react.uimanager.UIViewOperationQueue, param1: number, param2: string, param3: com.facebook.react.bridge.ReadableArray);
						public getRetries(): number;
						public constructor(param0: com.facebook.react.uimanager.UIViewOperationQueue, param1: number);
						public executeWithExceptions(): void;
						public execute(): void;
						public incrementRetries(): void;
					}
					export class DispatchUIFrameCallback extends com.facebook.react.uimanager.GuardedFrameCallback {
						public static class: java.lang.Class<com.facebook.react.uimanager.UIViewOperationQueue.DispatchUIFrameCallback>;
						public doFrameGuarded(param0: number): void;
					}
					export class EmitOnLayoutEventOperation extends com.facebook.react.uimanager.UIViewOperationQueue.ViewOperation {
						public static class: java.lang.Class<com.facebook.react.uimanager.UIViewOperationQueue.EmitOnLayoutEventOperation>;
						public constructor(param0: com.facebook.react.uimanager.UIViewOperationQueue, param1: number);
						public constructor(param0: com.facebook.react.uimanager.UIViewOperationQueue, param1: number, param2: number, param3: number, param4: number, param5: number);
						public execute(): void;
					}
					export class FindTargetForTouchOperation extends com.facebook.react.uimanager.UIViewOperationQueue.UIOperation {
						public static class: java.lang.Class<com.facebook.react.uimanager.UIViewOperationQueue.FindTargetForTouchOperation>;
						public execute(): void;
					}
					export class LayoutUpdateFinishedOperation extends com.facebook.react.uimanager.UIViewOperationQueue.UIOperation {
						public static class: java.lang.Class<com.facebook.react.uimanager.UIViewOperationQueue.LayoutUpdateFinishedOperation>;
						public execute(): void;
					}
					export class ManageChildrenOperation extends com.facebook.react.uimanager.UIViewOperationQueue.ViewOperation {
						public static class: java.lang.Class<com.facebook.react.uimanager.UIViewOperationQueue.ManageChildrenOperation>;
						public constructor(param0: com.facebook.react.uimanager.UIViewOperationQueue, param1: number);
						public constructor(param0: com.facebook.react.uimanager.UIViewOperationQueue, param1: number, param2: native.Array<number>, param3: native.Array<com.facebook.react.uimanager.ViewAtIndex>, param4: native.Array<number>);
						public execute(): void;
					}
					export class MeasureInWindowOperation extends com.facebook.react.uimanager.UIViewOperationQueue.UIOperation {
						public static class: java.lang.Class<com.facebook.react.uimanager.UIViewOperationQueue.MeasureInWindowOperation>;
						public execute(): void;
					}
					export class MeasureOperation extends com.facebook.react.uimanager.UIViewOperationQueue.UIOperation {
						public static class: java.lang.Class<com.facebook.react.uimanager.UIViewOperationQueue.MeasureOperation>;
						public execute(): void;
					}
					export class RemoveRootViewOperation extends com.facebook.react.uimanager.UIViewOperationQueue.ViewOperation {
						public static class: java.lang.Class<com.facebook.react.uimanager.UIViewOperationQueue.RemoveRootViewOperation>;
						public constructor(param0: com.facebook.react.uimanager.UIViewOperationQueue, param1: number);
						public execute(): void;
					}
					export class SendAccessibilityEvent extends com.facebook.react.uimanager.UIViewOperationQueue.ViewOperation {
						public static class: java.lang.Class<com.facebook.react.uimanager.UIViewOperationQueue.SendAccessibilityEvent>;
						public execute(): void;
					}
					export class SetChildrenOperation extends com.facebook.react.uimanager.UIViewOperationQueue.ViewOperation {
						public static class: java.lang.Class<com.facebook.react.uimanager.UIViewOperationQueue.SetChildrenOperation>;
						public constructor(param0: com.facebook.react.uimanager.UIViewOperationQueue, param1: number, param2: com.facebook.react.bridge.ReadableArray);
						public constructor(param0: com.facebook.react.uimanager.UIViewOperationQueue, param1: number);
						public execute(): void;
					}
					export class SetLayoutAnimationEnabledOperation extends com.facebook.react.uimanager.UIViewOperationQueue.UIOperation {
						public static class: java.lang.Class<com.facebook.react.uimanager.UIViewOperationQueue.SetLayoutAnimationEnabledOperation>;
						public execute(): void;
					}
					export class ShowPopupMenuOperation extends com.facebook.react.uimanager.UIViewOperationQueue.ViewOperation {
						public static class: java.lang.Class<com.facebook.react.uimanager.UIViewOperationQueue.ShowPopupMenuOperation>;
						public constructor(param0: com.facebook.react.uimanager.UIViewOperationQueue, param1: number);
						public constructor(param0: com.facebook.react.uimanager.UIViewOperationQueue, param1: number, param2: com.facebook.react.bridge.ReadableArray, param3: com.facebook.react.bridge.Callback, param4: com.facebook.react.bridge.Callback);
						public execute(): void;
					}
					export class UIBlockOperation extends com.facebook.react.uimanager.UIViewOperationQueue.UIOperation {
						public static class: java.lang.Class<com.facebook.react.uimanager.UIViewOperationQueue.UIBlockOperation>;
						public execute(): void;
						public constructor(param0: com.facebook.react.uimanager.UIViewOperationQueue, param1: com.facebook.react.uimanager.UIBlock);
					}
					export class UIOperation {
						public static class: java.lang.Class<com.facebook.react.uimanager.UIViewOperationQueue.UIOperation>;
						/**
						 * Constructs a new instance of the com.facebook.react.uimanager.UIViewOperationQueue$UIOperation interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							execute(): void;
						});
						public constructor();
						public execute(): void;
					}
					export class UpdateInstanceHandleOperation extends com.facebook.react.uimanager.UIViewOperationQueue.ViewOperation {
						public static class: java.lang.Class<com.facebook.react.uimanager.UIViewOperationQueue.UpdateInstanceHandleOperation>;
						public execute(): void;
					}
					export class UpdateLayoutOperation extends com.facebook.react.uimanager.UIViewOperationQueue.ViewOperation {
						public static class: java.lang.Class<com.facebook.react.uimanager.UIViewOperationQueue.UpdateLayoutOperation>;
						public constructor(param0: com.facebook.react.uimanager.UIViewOperationQueue, param1: number);
						public constructor(param0: com.facebook.react.uimanager.UIViewOperationQueue, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number);
						public execute(): void;
					}
					export class UpdatePropertiesOperation extends com.facebook.react.uimanager.UIViewOperationQueue.ViewOperation {
						public static class: java.lang.Class<com.facebook.react.uimanager.UIViewOperationQueue.UpdatePropertiesOperation>;
						public execute(): void;
					}
					export class UpdateViewExtraData extends com.facebook.react.uimanager.UIViewOperationQueue.ViewOperation {
						public static class: java.lang.Class<com.facebook.react.uimanager.UIViewOperationQueue.UpdateViewExtraData>;
						public constructor(param0: com.facebook.react.uimanager.UIViewOperationQueue, param1: number);
						public constructor(param0: com.facebook.react.uimanager.UIViewOperationQueue, param1: number, param2: any);
						public execute(): void;
					}
					export abstract class ViewOperation extends com.facebook.react.uimanager.UIViewOperationQueue.UIOperation {
						public static class: java.lang.Class<com.facebook.react.uimanager.UIViewOperationQueue.ViewOperation>;
						public mTag: number;
						public constructor(param0: com.facebook.react.uimanager.UIViewOperationQueue, param1: number);
						public execute(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export class ViewAtIndex {
					public static class: java.lang.Class<com.facebook.react.uimanager.ViewAtIndex>;
					public static COMPARATOR: java.util.Comparator<com.facebook.react.uimanager.ViewAtIndex>;
					public mTag: number;
					public mIndex: number;
					public equals(param0: any): boolean;
					public toString(): string;
					public constructor(param0: number, param1: number);
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export class ViewDefaults {
					public static class: java.lang.Class<com.facebook.react.uimanager.ViewDefaults>;
					public static FONT_SIZE_SP: number;
					public static LINE_HEIGHT: number;
					public static NUMBER_OF_LINES: number;
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export class ViewGroupDrawingOrderHelper {
					public static class: java.lang.Class<com.facebook.react.uimanager.ViewGroupDrawingOrderHelper>;
					public constructor(param0: globalAndroid.view.ViewGroup);
					public shouldEnableCustomDrawingOrder(): boolean;
					public getChildDrawingOrder(param0: number, param1: number): number;
					public handleRemoveView(param0: globalAndroid.view.View): void;
					public update(): void;
					public handleAddView(param0: globalAndroid.view.View): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export abstract class ViewGroupManager<T>  extends com.facebook.react.uimanager.BaseViewManager<any,com.facebook.react.uimanager.LayoutShadowNode> implements com.facebook.react.uimanager.IViewManagerWithChildren  {
					public static class: java.lang.Class<com.facebook.react.uimanager.ViewGroupManager<any>>;
					/** @deprecated */
					public setScaleY(param0: any, param1: number): void;
					public setZIndex(param0: any, param1: number): void;
					public setOpacity(param0: any, param1: number): void;
					public setBorderBottomLeftRadius(param0: any, param1: number): void;
					public getChildAt(param0: any, param1: number): globalAndroid.view.View;
					public constructor();
					public setBorderBottomRightRadius(param0: any, param1: number): void;
					/** @deprecated */
					public setTranslateY(param0: any, param1: number): void;
					public createShadowNodeInstance(): any;
					public setTranslateX(param0: any, param1: number): void;
					public getShadowNodeClass(): java.lang.Class<any>;
					public setViewState(param0: any, param1: com.facebook.react.bridge.ReadableMap): void;
					public setBackgroundColor(param0: any, param1: number): void;
					public setNativeId(param0: any, param1: string): void;
					public removeAllViews(param0: any): void;
					public setScaleY(param0: any, param1: number): void;
					public setBorderTopLeftRadius(param0: any, param1: number): void;
					public setTestId(param0: any, param1: string): void;
					public addViews(param0: any, param1: java.util.List<globalAndroid.view.View>): void;
					public setAccessibilityLabel(param0: any, param1: string): void;
					public updateExtraData(param0: any, param1: any): void;
					/** @deprecated */
					public setRotation(param0: any, param1: number): void;
					public initialize(): void;
					public createShadowNodeInstance(param0: com.facebook.react.bridge.ReactApplicationContext): any;
					public createShadowNodeInstance(): com.facebook.react.uimanager.LayoutShadowNode;
					public shouldPromoteGrandchildren(): boolean;
					/** @deprecated */
					public setTranslateX(param0: any, param1: number): void;
					public getChildCount(param0: any): number;
					public setElevation(param0: any, param1: number): void;
					public canOverrideExistingModule(): boolean;
					public setAccessibilityHint(param0: any, param1: string): void;
					public removeView(param0: any, param1: globalAndroid.view.View): void;
					public setImportantForAccessibility(param0: any, param1: string): void;
					public setRenderToHardwareTexture(param0: any, param1: boolean): void;
					public setAccessibilityLiveRegion(param0: any, param1: string): void;
					public needsCustomLayoutForChildren(): boolean;
					public removeViewAt(param0: any, param1: number): void;
					public setScaleX(param0: any, param1: number): void;
					public addView(param0: any, param1: globalAndroid.view.View, param2: number): void;
					public setBorderTopRightRadius(param0: any, param1: number): void;
					public setAccessibilityActions(param0: any, param1: com.facebook.react.bridge.ReadableArray): void;
					public setTransform(param0: any, param1: com.facebook.react.bridge.ReadableArray): void;
					/** @deprecated */
					public setScaleX(param0: any, param1: number): void;
					public setAccessibilityRole(param0: any, param1: string): void;
					public static getViewZIndex(param0: globalAndroid.view.View): java.lang.Integer;
					public onCatalystInstanceDestroy(): void;
					public static setViewZIndex(param0: globalAndroid.view.View, param1: number): void;
					public getName(): string;
					public setBorderRadius(param0: any, param1: number): void;
					public setTranslateY(param0: any, param1: number): void;
					public setRotation(param0: any, param1: number): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export class ViewHierarchyDumper {
					public static class: java.lang.Class<com.facebook.react.uimanager.ViewHierarchyDumper>;
					public constructor();
					public static toJSON(param0: globalAndroid.view.View): org.json.JSONObject;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export abstract class ViewManager<T, C>  extends com.facebook.react.bridge.BaseJavaModule {
					public static class: java.lang.Class<com.facebook.react.uimanager.ViewManager<any,any>>;
					public createShadowNodeInstance(param0: com.facebook.react.bridge.ReactApplicationContext): any;
					public getCommandsMap(): java.util.Map<string,java.lang.Integer>;
					public canOverrideExistingModule(): boolean;
					public updateProperties(param0: any, param1: com.facebook.react.uimanager.ReactStylesDiffMap): void;
					public createView(param0: com.facebook.react.uimanager.ThemedReactContext, param1: com.facebook.react.uimanager.ReactStylesDiffMap, param2: com.facebook.react.uimanager.StateWrapper, param3: com.facebook.react.touch.JSResponderHandler): any;
					/** @deprecated */
					public receiveCommand(param0: any, param1: number, param2: com.facebook.react.bridge.ReadableArray): void;
					public createViewInstance(param0: com.facebook.react.uimanager.ThemedReactContext, param1: com.facebook.react.uimanager.ReactStylesDiffMap, param2: com.facebook.react.uimanager.StateWrapper): any;
					public getExportedCustomDirectEventTypeConstants(): java.util.Map<string,any>;
					public constructor();
					public updateState(param0: any, param1: com.facebook.react.uimanager.ReactStylesDiffMap, param2: com.facebook.react.uimanager.StateWrapper): any;
					public createViewInstance(param0: com.facebook.react.uimanager.ThemedReactContext): any;
					public getExportedViewConstants(): java.util.Map<string,any>;
					public addEventEmitters(param0: com.facebook.react.uimanager.ThemedReactContext, param1: any): void;
					public createShadowNodeInstance(): any;
					public updateLocalData(param0: any, param1: com.facebook.react.uimanager.ReactStylesDiffMap, param2: com.facebook.react.uimanager.ReactStylesDiffMap): any;
					public receiveCommand(param0: any, param1: string, param2: com.facebook.react.bridge.ReadableArray): void;
					public getShadowNodeClass(): java.lang.Class<any>;
					public onAfterUpdateTransaction(param0: any): void;
					public getExportedCustomBubblingEventTypeConstants(): java.util.Map<string,any>;
					public getNativeProps(): java.util.Map<string,string>;
					public onCatalystInstanceDestroy(): void;
					public getName(): string;
					public getDelegate(): com.facebook.react.uimanager.ViewManagerDelegate<any>;
					public updateExtraData(param0: any, param1: any): void;
					public measure(param0: globalAndroid.content.Context, param1: com.facebook.react.bridge.ReadableMap, param2: com.facebook.react.bridge.ReadableMap, param3: com.facebook.react.bridge.ReadableMap, param4: number, param5: com.facebook.yoga.YogaMeasureMode, param6: number, param7: com.facebook.yoga.YogaMeasureMode, param8: native.Array<number>): number;
					public setPadding(param0: any, param1: number, param2: number, param3: number, param4: number): void;
					public initialize(): void;
					public onDropViewInstance(param0: any): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export class ViewManagerDelegate<T>  extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.react.uimanager.ViewManagerDelegate<any>>;
					/**
					 * Constructs a new instance of the com.facebook.react.uimanager.ViewManagerDelegate<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						setProperty(param0: T, param1: string, param2: any): void;
					});
					public constructor();
					public setProperty(param0: T, param1: string, param2: any): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export class ViewManagerPropertyUpdater {
					public static class: java.lang.Class<com.facebook.react.uimanager.ViewManagerPropertyUpdater>;
					public static getNativeProps(param0: java.lang.Class<any>, param1: java.lang.Class<any>): java.util.Map<string,string>;
					public static updateProps(param0: com.facebook.react.uimanager.ViewManagerDelegate<any>, param1: globalAndroid.view.View, param2: com.facebook.react.uimanager.ReactStylesDiffMap): void;
					public constructor();
					public static clear(): void;
					public static updateProps(param0: com.facebook.react.uimanager.ReactShadowNode<any>, param1: com.facebook.react.uimanager.ReactStylesDiffMap): void;
					public static updateProps(param0: com.facebook.react.uimanager.ViewManager<any,any>, param1: globalAndroid.view.View, param2: com.facebook.react.uimanager.ReactStylesDiffMap): void;
				}
				export module ViewManagerPropertyUpdater {
					export class FallbackShadowNodeSetter<T>  extends com.facebook.react.uimanager.ViewManagerPropertyUpdater.ShadowNodeSetter<any> {
						public static class: java.lang.Class<com.facebook.react.uimanager.ViewManagerPropertyUpdater.FallbackShadowNodeSetter<any>>;
						public getProperties(param0: java.util.Map<string,string>): void;
						public setProperty(param0: any, param1: string, param2: any): void;
						public setProperty(param0: com.facebook.react.uimanager.ReactShadowNode<any>, param1: string, param2: any): void;
					}
					export class FallbackViewManagerSetter<T, V>  extends com.facebook.react.uimanager.ViewManagerPropertyUpdater.ViewManagerSetter<any,any> {
						public static class: java.lang.Class<com.facebook.react.uimanager.ViewManagerPropertyUpdater.FallbackViewManagerSetter<any,any>>;
						public getProperties(param0: java.util.Map<string,string>): void;
						public setProperty(param0: any, param1: any, param2: string, param3: any): void;
					}
					export class Settable {
						public static class: java.lang.Class<com.facebook.react.uimanager.ViewManagerPropertyUpdater.Settable>;
						/**
						 * Constructs a new instance of the com.facebook.react.uimanager.ViewManagerPropertyUpdater$Settable interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getProperties(param0: java.util.Map<string,string>): void;
						});
						public constructor();
						public getProperties(param0: java.util.Map<string,string>): void;
					}
					export class ShadowNodeSetter<T>  extends com.facebook.react.uimanager.ViewManagerPropertyUpdater.Settable {
						public static class: java.lang.Class<com.facebook.react.uimanager.ViewManagerPropertyUpdater.ShadowNodeSetter<any>>;
						/**
						 * Constructs a new instance of the com.facebook.react.uimanager.ViewManagerPropertyUpdater$ShadowNodeSetter interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							setProperty(param0: any, param1: string, param2: any): void;
							getProperties(param0: java.util.Map<string,string>): void;
						});
						public constructor();
						public getProperties(param0: java.util.Map<string,string>): void;
						public setProperty(param0: any, param1: string, param2: any): void;
					}
					export class ViewManagerSetter<T, V>  extends com.facebook.react.uimanager.ViewManagerPropertyUpdater.Settable {
						public static class: java.lang.Class<com.facebook.react.uimanager.ViewManagerPropertyUpdater.ViewManagerSetter<any,any>>;
						/**
						 * Constructs a new instance of the com.facebook.react.uimanager.ViewManagerPropertyUpdater$ViewManagerSetter interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							setProperty(param0: any, param1: any, param2: string, param3: any): void;
							getProperties(param0: java.util.Map<string,string>): void;
						});
						public constructor();
						public getProperties(param0: java.util.Map<string,string>): void;
						public setProperty(param0: any, param1: any, param2: string, param3: any): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export class ViewManagerRegistry {
					public static class: java.lang.Class<com.facebook.react.uimanager.ViewManagerRegistry>;
					public constructor(param0: com.facebook.react.uimanager.UIManagerModule.ViewManagerResolver);
					public constructor(param0: java.util.Map<string,com.facebook.react.uimanager.ViewManager<any,any>>);
					public constructor(param0: java.util.List<com.facebook.react.uimanager.ViewManager<any,any>>);
					public get(param0: string): com.facebook.react.uimanager.ViewManager<any,any>;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export class ViewManagersPropertyCache {
					public static class: java.lang.Class<com.facebook.react.uimanager.ViewManagersPropertyCache>;
					public static clear(): void;
				}
				export module ViewManagersPropertyCache {
					export class ArrayPropSetter extends com.facebook.react.uimanager.ViewManagersPropertyCache.PropSetter {
						public static class: java.lang.Class<com.facebook.react.uimanager.ViewManagersPropertyCache.ArrayPropSetter>;
						public constructor(param0: com.facebook.react.uimanager.annotations.ReactProp, param1: java.lang.reflect.Method);
						public getValueOrDefault(param0: any, param1: globalAndroid.content.Context): any;
					}
					export class BooleanPropSetter extends com.facebook.react.uimanager.ViewManagersPropertyCache.PropSetter {
						public static class: java.lang.Class<com.facebook.react.uimanager.ViewManagersPropertyCache.BooleanPropSetter>;
						public constructor(param0: com.facebook.react.uimanager.annotations.ReactProp, param1: java.lang.reflect.Method, param2: boolean);
						public getValueOrDefault(param0: any, param1: globalAndroid.content.Context): any;
					}
					export class BoxedBooleanPropSetter extends com.facebook.react.uimanager.ViewManagersPropertyCache.PropSetter {
						public static class: java.lang.Class<com.facebook.react.uimanager.ViewManagersPropertyCache.BoxedBooleanPropSetter>;
						public constructor(param0: com.facebook.react.uimanager.annotations.ReactProp, param1: java.lang.reflect.Method);
						public getValueOrDefault(param0: any, param1: globalAndroid.content.Context): any;
					}
					export class BoxedIntPropSetter extends com.facebook.react.uimanager.ViewManagersPropertyCache.PropSetter {
						public static class: java.lang.Class<com.facebook.react.uimanager.ViewManagersPropertyCache.BoxedIntPropSetter>;
						public constructor(param0: com.facebook.react.uimanager.annotations.ReactPropGroup, param1: java.lang.reflect.Method, param2: number);
						public constructor(param0: com.facebook.react.uimanager.annotations.ReactProp, param1: java.lang.reflect.Method);
						public getValueOrDefault(param0: any, param1: globalAndroid.content.Context): any;
					}
					export class ColorPropSetter extends com.facebook.react.uimanager.ViewManagersPropertyCache.PropSetter {
						public static class: java.lang.Class<com.facebook.react.uimanager.ViewManagersPropertyCache.ColorPropSetter>;
						public constructor(param0: com.facebook.react.uimanager.annotations.ReactProp, param1: java.lang.reflect.Method, param2: number);
						public constructor(param0: com.facebook.react.uimanager.annotations.ReactProp, param1: java.lang.reflect.Method);
						public getValueOrDefault(param0: any, param1: globalAndroid.content.Context): any;
					}
					export class DoublePropSetter extends com.facebook.react.uimanager.ViewManagersPropertyCache.PropSetter {
						public static class: java.lang.Class<com.facebook.react.uimanager.ViewManagersPropertyCache.DoublePropSetter>;
						public constructor(param0: com.facebook.react.uimanager.annotations.ReactPropGroup, param1: java.lang.reflect.Method, param2: number, param3: number);
						public constructor(param0: com.facebook.react.uimanager.annotations.ReactProp, param1: java.lang.reflect.Method, param2: number);
						public getValueOrDefault(param0: any, param1: globalAndroid.content.Context): any;
					}
					export class DynamicPropSetter extends com.facebook.react.uimanager.ViewManagersPropertyCache.PropSetter {
						public static class: java.lang.Class<com.facebook.react.uimanager.ViewManagersPropertyCache.DynamicPropSetter>;
						public constructor(param0: com.facebook.react.uimanager.annotations.ReactPropGroup, param1: java.lang.reflect.Method, param2: number);
						public constructor(param0: com.facebook.react.uimanager.annotations.ReactProp, param1: java.lang.reflect.Method);
						public getValueOrDefault(param0: any, param1: globalAndroid.content.Context): any;
					}
					export class FloatPropSetter extends com.facebook.react.uimanager.ViewManagersPropertyCache.PropSetter {
						public static class: java.lang.Class<com.facebook.react.uimanager.ViewManagersPropertyCache.FloatPropSetter>;
						public constructor(param0: com.facebook.react.uimanager.annotations.ReactPropGroup, param1: java.lang.reflect.Method, param2: number, param3: number);
						public constructor(param0: com.facebook.react.uimanager.annotations.ReactProp, param1: java.lang.reflect.Method, param2: number);
						public getValueOrDefault(param0: any, param1: globalAndroid.content.Context): any;
					}
					export class IntPropSetter extends com.facebook.react.uimanager.ViewManagersPropertyCache.PropSetter {
						public static class: java.lang.Class<com.facebook.react.uimanager.ViewManagersPropertyCache.IntPropSetter>;
						public constructor(param0: com.facebook.react.uimanager.annotations.ReactPropGroup, param1: java.lang.reflect.Method, param2: number, param3: number);
						public constructor(param0: com.facebook.react.uimanager.annotations.ReactProp, param1: java.lang.reflect.Method, param2: number);
						public getValueOrDefault(param0: any, param1: globalAndroid.content.Context): any;
					}
					export class MapPropSetter extends com.facebook.react.uimanager.ViewManagersPropertyCache.PropSetter {
						public static class: java.lang.Class<com.facebook.react.uimanager.ViewManagersPropertyCache.MapPropSetter>;
						public constructor(param0: com.facebook.react.uimanager.annotations.ReactProp, param1: java.lang.reflect.Method);
						public getValueOrDefault(param0: any, param1: globalAndroid.content.Context): any;
					}
					export abstract class PropSetter {
						public static class: java.lang.Class<com.facebook.react.uimanager.ViewManagersPropertyCache.PropSetter>;
						public mPropName: string;
						public mPropType: string;
						public mSetter: java.lang.reflect.Method;
						public mIndex: java.lang.Integer;
						public updateShadowNodeProp(param0: com.facebook.react.uimanager.ReactShadowNode<any>, param1: any): void;
						public updateViewProp(param0: com.facebook.react.uimanager.ViewManager<any,any>, param1: globalAndroid.view.View, param2: any): void;
						public getPropName(): string;
						public getValueOrDefault(param0: any, param1: globalAndroid.content.Context): any;
						public getPropType(): string;
					}
					export class StringPropSetter extends com.facebook.react.uimanager.ViewManagersPropertyCache.PropSetter {
						public static class: java.lang.Class<com.facebook.react.uimanager.ViewManagersPropertyCache.StringPropSetter>;
						public constructor(param0: com.facebook.react.uimanager.annotations.ReactProp, param1: java.lang.reflect.Method);
						public getValueOrDefault(param0: any, param1: globalAndroid.content.Context): any;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export class ViewProps {
					public static class: java.lang.Class<com.facebook.react.uimanager.ViewProps>;
					public static VIEW_CLASS_NAME: string;
					public static ALIGN_ITEMS: string;
					public static ALIGN_SELF: string;
					public static ALIGN_CONTENT: string;
					public static DISPLAY: string;
					public static BOTTOM: string;
					public static COLLAPSABLE: string;
					public static FLEX: string;
					public static FLEX_GROW: string;
					public static FLEX_SHRINK: string;
					public static FLEX_BASIS: string;
					public static FLEX_DIRECTION: string;
					public static FLEX_WRAP: string;
					public static HEIGHT: string;
					public static JUSTIFY_CONTENT: string;
					public static LEFT: string;
					public static MARGIN: string;
					public static MARGIN_VERTICAL: string;
					public static MARGIN_HORIZONTAL: string;
					public static MARGIN_LEFT: string;
					public static MARGIN_RIGHT: string;
					public static MARGIN_TOP: string;
					public static MARGIN_BOTTOM: string;
					public static MARGIN_START: string;
					public static MARGIN_END: string;
					public static PADDING: string;
					public static PADDING_VERTICAL: string;
					public static PADDING_HORIZONTAL: string;
					public static PADDING_LEFT: string;
					public static PADDING_RIGHT: string;
					public static PADDING_TOP: string;
					public static PADDING_BOTTOM: string;
					public static PADDING_START: string;
					public static PADDING_END: string;
					public static POSITION: string;
					public static RIGHT: string;
					public static TOP: string;
					public static WIDTH: string;
					public static START: string;
					public static END: string;
					public static IS_ATTACHMENT: string;
					public static AUTO: string;
					public static NONE: string;
					public static BOX_NONE: string;
					public static MIN_WIDTH: string;
					public static MAX_WIDTH: string;
					public static MIN_HEIGHT: string;
					public static MAX_HEIGHT: string;
					public static ASPECT_RATIO: string;
					public static POINTER_EVENTS: string;
					public static ENABLED: string;
					public static BACKGROUND_COLOR: string;
					public static COLOR: string;
					public static FONT_SIZE: string;
					public static FONT_WEIGHT: string;
					public static FONT_STYLE: string;
					public static FONT_VARIANT: string;
					public static FONT_FAMILY: string;
					public static LINE_HEIGHT: string;
					public static LETTER_SPACING: string;
					public static NEEDS_OFFSCREEN_ALPHA_COMPOSITING: string;
					public static NUMBER_OF_LINES: string;
					public static ELLIPSIZE_MODE: string;
					public static ADJUSTS_FONT_SIZE_TO_FIT: string;
					public static MINIMUM_FONT_SCALE: string;
					public static ON: string;
					public static RESIZE_MODE: string;
					public static RESIZE_METHOD: string;
					public static TEXT_ALIGN: string;
					public static TEXT_ALIGN_VERTICAL: string;
					public static TEXT_DECORATION_LINE: string;
					public static TEXT_BREAK_STRATEGY: string;
					public static OPACITY: string;
					public static OVERFLOW: string;
					public static HIDDEN: string;
					public static SCROLL: string;
					public static VISIBLE: string;
					public static ALLOW_FONT_SCALING: string;
					public static MAX_FONT_SIZE_MULTIPLIER: string;
					public static INCLUDE_FONT_PADDING: string;
					public static BORDER_WIDTH: string;
					public static BORDER_LEFT_WIDTH: string;
					public static BORDER_START_WIDTH: string;
					public static BORDER_END_WIDTH: string;
					public static BORDER_TOP_WIDTH: string;
					public static BORDER_RIGHT_WIDTH: string;
					public static BORDER_BOTTOM_WIDTH: string;
					public static BORDER_RADIUS: string;
					public static BORDER_TOP_LEFT_RADIUS: string;
					public static BORDER_TOP_RIGHT_RADIUS: string;
					public static BORDER_BOTTOM_LEFT_RADIUS: string;
					public static BORDER_BOTTOM_RIGHT_RADIUS: string;
					public static BORDER_COLOR: string;
					public static BORDER_LEFT_COLOR: string;
					public static BORDER_RIGHT_COLOR: string;
					public static BORDER_TOP_COLOR: string;
					public static BORDER_BOTTOM_COLOR: string;
					public static BORDER_TOP_START_RADIUS: string;
					public static BORDER_TOP_END_RADIUS: string;
					public static BORDER_BOTTOM_START_RADIUS: string;
					public static BORDER_BOTTOM_END_RADIUS: string;
					public static BORDER_START_COLOR: string;
					public static BORDER_END_COLOR: string;
					public static ON_LAYOUT: string;
					public static TRANSFORM: string;
					public static ELEVATION: string;
					public static Z_INDEX: string;
					public static RENDER_TO_HARDWARE_TEXTURE: string;
					public static ACCESSIBILITY_LABEL: string;
					public static ACCESSIBILITY_HINT: string;
					public static ACCESSIBILITY_LIVE_REGION: string;
					public static ACCESSIBILITY_ROLE: string;
					public static ACCESSIBILITY_STATE: string;
					public static ACCESSIBILITY_ACTIONS: string;
					public static ACCESSIBILITY_VALUE: string;
					public static IMPORTANT_FOR_ACCESSIBILITY: string;
					public static ROTATION: string;
					public static SCALE_X: string;
					public static SCALE_Y: string;
					public static TRANSLATE_X: string;
					public static TRANSLATE_Y: string;
					public static TEST_ID: string;
					public static NATIVE_ID: string;
					public static BORDER_SPACING_TYPES: native.Array<number>;
					public static PADDING_MARGIN_SPACING_TYPES: native.Array<number>;
					public static POSITION_SPACING_TYPES: native.Array<number>;
					public constructor();
					public static isLayoutOnly(param0: com.facebook.react.bridge.ReadableMap, param1: string): boolean;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export class YogaNodePool {
					public static class: java.lang.Class<com.facebook.react.uimanager.YogaNodePool>;
					public constructor();
					public static get(): com.facebook.react.common.ClearableSynchronizedPool<com.facebook.yoga.YogaNode>;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export module annotations {
					export class ReactProp {
						public static class: java.lang.Class<com.facebook.react.uimanager.annotations.ReactProp>;
						/**
						 * Constructs a new instance of the com.facebook.react.uimanager.annotations.ReactProp interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							name(): string;
							customType(): string;
							defaultDouble(): number;
							defaultFloat(): number;
							defaultInt(): number;
							defaultBoolean(): boolean;
						});
						public constructor();
						public static USE_DEFAULT_TYPE: string;
						public defaultFloat(): number;
						public name(): string;
						public defaultInt(): number;
						public defaultBoolean(): boolean;
						public defaultDouble(): number;
						public customType(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export module annotations {
					export class ReactPropGroup {
						public static class: java.lang.Class<com.facebook.react.uimanager.annotations.ReactPropGroup>;
						/**
						 * Constructs a new instance of the com.facebook.react.uimanager.annotations.ReactPropGroup interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							names(): native.Array<string>;
							customType(): string;
							defaultFloat(): number;
							defaultDouble(): number;
							defaultInt(): number;
						});
						public constructor();
						public static USE_DEFAULT_TYPE: string;
						public defaultFloat(): number;
						public names(): native.Array<string>;
						public defaultInt(): number;
						public defaultDouble(): number;
						public customType(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export module annotations {
					export class ReactPropertyHolder {
						public static class: java.lang.Class<com.facebook.react.uimanager.annotations.ReactPropertyHolder>;
						/**
						 * Constructs a new instance of the com.facebook.react.uimanager.annotations.ReactPropertyHolder interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
						});
						public constructor();
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export module common {
					export class UIManagerType {
						public static class: java.lang.Class<com.facebook.react.uimanager.common.UIManagerType>;
						/**
						 * Constructs a new instance of the com.facebook.react.uimanager.common.UIManagerType interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
						});
						public constructor();
						public static DEFAULT: number;
						public static FABRIC: number;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export module common {
					export class ViewUtil {
						public static class: java.lang.Class<com.facebook.react.uimanager.common.ViewUtil>;
						public constructor();
						/** @deprecated */
						public static isRootTag(param0: number): boolean;
						public static getUIManagerType(param0: number): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export module debug {
					export class NotThreadSafeViewHierarchyUpdateDebugListener {
						public static class: java.lang.Class<com.facebook.react.uimanager.debug.NotThreadSafeViewHierarchyUpdateDebugListener>;
						/**
						 * Constructs a new instance of the com.facebook.react.uimanager.debug.NotThreadSafeViewHierarchyUpdateDebugListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onViewHierarchyUpdateEnqueued(): void;
							onViewHierarchyUpdateFinished(): void;
						});
						public constructor();
						public onViewHierarchyUpdateFinished(): void;
						public onViewHierarchyUpdateEnqueued(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export module events {
					export class BatchEventDispatchedListener {
						public static class: java.lang.Class<com.facebook.react.uimanager.events.BatchEventDispatchedListener>;
						/**
						 * Constructs a new instance of the com.facebook.react.uimanager.events.BatchEventDispatchedListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onBatchEventDispatched(): void;
						});
						public constructor();
						public onBatchEventDispatched(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export module events {
					export class ContentSizeChangeEvent extends com.facebook.react.uimanager.events.Event<com.facebook.react.uimanager.events.ContentSizeChangeEvent> {
						public static class: java.lang.Class<com.facebook.react.uimanager.events.ContentSizeChangeEvent>;
						public static EVENT_NAME: string;
						public constructor();
						public getEventName(): string;
						public constructor(param0: number);
						public constructor(param0: number, param1: number, param2: number);
						public dispatch(param0: com.facebook.react.uimanager.events.RCTEventEmitter): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export module events {
					export abstract class Event<T>  extends java.lang.Object {
						public static class: java.lang.Class<com.facebook.react.uimanager.events.Event<any>>;
						public getUniqueID(): number;
						public constructor();
						public canCoalesce(): boolean;
						public getViewTag(): number;
						public getEventName(): string;
						public constructor(param0: number);
						public coalesce(param0: T): T;
						public getTimestampMs(): number;
						public getCoalescingKey(): number;
						public init(param0: number): void;
						public onDispose(): void;
						public dispatch(param0: com.facebook.react.uimanager.events.RCTEventEmitter): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export module events {
					export class EventDispatcher extends com.facebook.react.bridge.LifecycleEventListener {
						public static class: java.lang.Class<com.facebook.react.uimanager.events.EventDispatcher>;
						public dispatchEvent(param0: com.facebook.react.uimanager.events.Event<any>): void;
						public unregisterEventEmitter(param0: number): void;
						public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
						public removeBatchEventDispatchedListener(param0: com.facebook.react.uimanager.events.BatchEventDispatchedListener): void;
						public onHostPause(): void;
						public registerEventEmitter(param0: number, param1: com.facebook.react.uimanager.events.RCTEventEmitter): void;
						public onCatalystInstanceDestroyed(): void;
						public onHostDestroy(): void;
						public removeListener(param0: com.facebook.react.uimanager.events.EventDispatcherListener): void;
						public addListener(param0: com.facebook.react.uimanager.events.EventDispatcherListener): void;
						public addBatchEventDispatchedListener(param0: com.facebook.react.uimanager.events.BatchEventDispatchedListener): void;
						public onHostResume(): void;
						public dispatchAllEvents(): void;
					}
					export module EventDispatcher {
						export class DispatchEventsRunnable {
							public static class: java.lang.Class<com.facebook.react.uimanager.events.EventDispatcher.DispatchEventsRunnable>;
							public run(): void;
						}
						export class ScheduleDispatchFrameCallback extends com.facebook.react.modules.core.ChoreographerCompat.FrameCallback {
							public static class: java.lang.Class<com.facebook.react.uimanager.events.EventDispatcher.ScheduleDispatchFrameCallback>;
							public maybePostFromNonUI(): void;
							public stop(): void;
							public doFrame(param0: number): void;
							public maybePost(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export module events {
					export class EventDispatcherListener {
						public static class: java.lang.Class<com.facebook.react.uimanager.events.EventDispatcherListener>;
						/**
						 * Constructs a new instance of the com.facebook.react.uimanager.events.EventDispatcherListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onEventDispatch(param0: com.facebook.react.uimanager.events.Event<any>): void;
						});
						public constructor();
						public onEventDispatch(param0: com.facebook.react.uimanager.events.Event<any>): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export module events {
					export class NativeGestureUtil {
						public static class: java.lang.Class<com.facebook.react.uimanager.events.NativeGestureUtil>;
						public constructor();
						public static notifyNativeGestureStarted(param0: globalAndroid.view.View, param1: globalAndroid.view.MotionEvent): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export module events {
					export class RCTEventEmitter extends com.facebook.react.bridge.JavaScriptModule {
						public static class: java.lang.Class<com.facebook.react.uimanager.events.RCTEventEmitter>;
						/**
						 * Constructs a new instance of the com.facebook.react.uimanager.events.RCTEventEmitter interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							receiveEvent(param0: number, param1: string, param2: com.facebook.react.bridge.WritableMap): void;
							receiveTouches(param0: string, param1: com.facebook.react.bridge.WritableArray, param2: com.facebook.react.bridge.WritableArray): void;
						});
						public constructor();
						public receiveTouches(param0: string, param1: com.facebook.react.bridge.WritableArray, param2: com.facebook.react.bridge.WritableArray): void;
						public receiveEvent(param0: number, param1: string, param2: com.facebook.react.bridge.WritableMap): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export module events {
					export class ReactEventEmitter extends com.facebook.react.uimanager.events.RCTEventEmitter {
						public static class: java.lang.Class<com.facebook.react.uimanager.events.ReactEventEmitter>;
						public unregister(param0: number): void;
						public constructor(param0: com.facebook.react.bridge.ReactApplicationContext);
						public receiveTouches(param0: string, param1: com.facebook.react.bridge.WritableArray, param2: com.facebook.react.bridge.WritableArray): void;
						public register(param0: number, param1: com.facebook.react.uimanager.events.RCTEventEmitter): void;
						public receiveEvent(param0: number, param1: string, param2: com.facebook.react.bridge.WritableMap): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export module events {
					export class TouchEvent extends com.facebook.react.uimanager.events.Event<com.facebook.react.uimanager.events.TouchEvent> {
						public static class: java.lang.Class<com.facebook.react.uimanager.events.TouchEvent>;
						public static UNSET: number;
						public getViewY(): number;
						public canCoalesce(): boolean;
						public getEventName(): string;
						public getViewX(): number;
						public getMotionEvent(): globalAndroid.view.MotionEvent;
						public static obtain(param0: number, param1: com.facebook.react.uimanager.events.TouchEventType, param2: globalAndroid.view.MotionEvent, param3: number, param4: number, param5: number, param6: com.facebook.react.uimanager.events.TouchEventCoalescingKeyHelper): com.facebook.react.uimanager.events.TouchEvent;
						public getCoalescingKey(): number;
						public onDispose(): void;
						public dispatch(param0: com.facebook.react.uimanager.events.RCTEventEmitter): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export module events {
					export class TouchEventCoalescingKeyHelper {
						public static class: java.lang.Class<com.facebook.react.uimanager.events.TouchEventCoalescingKeyHelper>;
						public constructor();
						public hasCoalescingKey(param0: number): boolean;
						public removeCoalescingKey(param0: number): void;
						public getCoalescingKey(param0: number): number;
						public incrementCoalescingKey(param0: number): void;
						public addCoalescingKey(param0: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export module events {
					export class TouchEventType {
						public static class: java.lang.Class<com.facebook.react.uimanager.events.TouchEventType>;
						public static START: com.facebook.react.uimanager.events.TouchEventType;
						public static END: com.facebook.react.uimanager.events.TouchEventType;
						public static MOVE: com.facebook.react.uimanager.events.TouchEventType;
						public static CANCEL: com.facebook.react.uimanager.events.TouchEventType;
						public static getJSEventName(param0: com.facebook.react.uimanager.events.TouchEventType): string;
						public static values(): native.Array<com.facebook.react.uimanager.events.TouchEventType>;
						public static valueOf(param0: string): com.facebook.react.uimanager.events.TouchEventType;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export module events {
					export class TouchesHelper {
						public static class: java.lang.Class<com.facebook.react.uimanager.events.TouchesHelper>;
						public static TARGET_KEY: string;
						public static CHANGED_TOUCHES_KEY: string;
						public static TOUCHES_KEY: string;
						public static TOP_TOUCH_END_KEY: string;
						public static TOP_TOUCH_CANCEL_KEY: string;
						public constructor();
						public static sendTouchEvent(param0: com.facebook.react.uimanager.events.RCTEventEmitter, param1: com.facebook.react.uimanager.events.TouchEventType, param2: number, param3: com.facebook.react.uimanager.events.TouchEvent): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export module layoutanimation {
					export abstract class AbstractLayoutAnimation {
						public static class: java.lang.Class<com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation>;
						public mAnimatedProperty: com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType;
						public mDurationMs: number;
						public createAnimation(param0: globalAndroid.view.View, param1: number, param2: number, param3: number, param4: number): globalAndroid.view.animation.Animation;
						public initializeFromConfig(param0: com.facebook.react.bridge.ReadableMap, param1: number): void;
						public reset(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export module layoutanimation {
					export class AnimatedPropertyType {
						public static class: java.lang.Class<com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType>;
						public static OPACITY: com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType;
						public static SCALE_X: com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType;
						public static SCALE_Y: com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType;
						public static SCALE_XY: com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType;
						public static fromString(param0: string): com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType;
						public static valueOf(param0: string): com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType;
						public static values(): native.Array<com.facebook.react.uimanager.layoutanimation.AnimatedPropertyType>;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export module layoutanimation {
					export abstract class BaseLayoutAnimation extends com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation {
						public static class: java.lang.Class<com.facebook.react.uimanager.layoutanimation.BaseLayoutAnimation>;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export module layoutanimation {
					export class InterpolatorType {
						public static class: java.lang.Class<com.facebook.react.uimanager.layoutanimation.InterpolatorType>;
						public static LINEAR: com.facebook.react.uimanager.layoutanimation.InterpolatorType;
						public static EASE_IN: com.facebook.react.uimanager.layoutanimation.InterpolatorType;
						public static EASE_OUT: com.facebook.react.uimanager.layoutanimation.InterpolatorType;
						public static EASE_IN_EASE_OUT: com.facebook.react.uimanager.layoutanimation.InterpolatorType;
						public static SPRING: com.facebook.react.uimanager.layoutanimation.InterpolatorType;
						public static values(): native.Array<com.facebook.react.uimanager.layoutanimation.InterpolatorType>;
						public static fromString(param0: string): com.facebook.react.uimanager.layoutanimation.InterpolatorType;
						public static valueOf(param0: string): com.facebook.react.uimanager.layoutanimation.InterpolatorType;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export module layoutanimation {
					export class LayoutAnimationController {
						public static class: java.lang.Class<com.facebook.react.uimanager.layoutanimation.LayoutAnimationController>;
						public constructor();
						public deleteView(param0: globalAndroid.view.View, param1: com.facebook.react.uimanager.layoutanimation.LayoutAnimationListener): void;
						public applyLayoutUpdate(param0: globalAndroid.view.View, param1: number, param2: number, param3: number, param4: number): void;
						public initializeFromConfig(param0: com.facebook.react.bridge.ReadableMap, param1: com.facebook.react.bridge.Callback): void;
						public shouldAnimateLayout(param0: globalAndroid.view.View): boolean;
						public reset(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export module layoutanimation {
					export class LayoutAnimationListener {
						public static class: java.lang.Class<com.facebook.react.uimanager.layoutanimation.LayoutAnimationListener>;
						/**
						 * Constructs a new instance of the com.facebook.react.uimanager.layoutanimation.LayoutAnimationListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onAnimationEnd(): void;
						});
						public constructor();
						public onAnimationEnd(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export module layoutanimation {
					export class LayoutAnimationType {
						public static class: java.lang.Class<com.facebook.react.uimanager.layoutanimation.LayoutAnimationType>;
						public static CREATE: com.facebook.react.uimanager.layoutanimation.LayoutAnimationType;
						public static UPDATE: com.facebook.react.uimanager.layoutanimation.LayoutAnimationType;
						public static DELETE: com.facebook.react.uimanager.layoutanimation.LayoutAnimationType;
						public static toString(param0: com.facebook.react.uimanager.layoutanimation.LayoutAnimationType): string;
						public static values(): native.Array<com.facebook.react.uimanager.layoutanimation.LayoutAnimationType>;
						public static valueOf(param0: string): com.facebook.react.uimanager.layoutanimation.LayoutAnimationType;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export module layoutanimation {
					export class LayoutCreateAnimation extends com.facebook.react.uimanager.layoutanimation.BaseLayoutAnimation {
						public static class: java.lang.Class<com.facebook.react.uimanager.layoutanimation.LayoutCreateAnimation>;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export module layoutanimation {
					export class LayoutDeleteAnimation extends com.facebook.react.uimanager.layoutanimation.BaseLayoutAnimation {
						public static class: java.lang.Class<com.facebook.react.uimanager.layoutanimation.LayoutDeleteAnimation>;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export module layoutanimation {
					export class LayoutHandlingAnimation {
						public static class: java.lang.Class<com.facebook.react.uimanager.layoutanimation.LayoutHandlingAnimation>;
						/**
						 * Constructs a new instance of the com.facebook.react.uimanager.layoutanimation.LayoutHandlingAnimation interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onLayoutUpdate(param0: number, param1: number, param2: number, param3: number): void;
						});
						public constructor();
						public onLayoutUpdate(param0: number, param1: number, param2: number, param3: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export module layoutanimation {
					export class LayoutUpdateAnimation extends com.facebook.react.uimanager.layoutanimation.AbstractLayoutAnimation {
						public static class: java.lang.Class<com.facebook.react.uimanager.layoutanimation.LayoutUpdateAnimation>;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export module layoutanimation {
					export class OpacityAnimation {
						public static class: java.lang.Class<com.facebook.react.uimanager.layoutanimation.OpacityAnimation>;
						public applyTransformation(param0: number, param1: globalAndroid.view.animation.Transformation): void;
						public willChangeBounds(): boolean;
						public constructor(param0: globalAndroid.view.View, param1: number, param2: number);
					}
					export module OpacityAnimation {
						export class OpacityAnimationListener {
							public static class: java.lang.Class<com.facebook.react.uimanager.layoutanimation.OpacityAnimation.OpacityAnimationListener>;
							public onAnimationStart(param0: globalAndroid.view.animation.Animation): void;
							public constructor(param0: globalAndroid.view.View);
							public onAnimationRepeat(param0: globalAndroid.view.animation.Animation): void;
							public onAnimationEnd(param0: globalAndroid.view.animation.Animation): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export module layoutanimation {
					export class PositionAndSizeAnimation implements com.facebook.react.uimanager.layoutanimation.LayoutHandlingAnimation {
						public static class: java.lang.Class<com.facebook.react.uimanager.layoutanimation.PositionAndSizeAnimation>;
						public onLayoutUpdate(param0: number, param1: number, param2: number, param3: number): void;
						public applyTransformation(param0: number, param1: globalAndroid.view.animation.Transformation): void;
						public willChangeBounds(): boolean;
						public constructor(param0: globalAndroid.view.View, param1: number, param2: number, param3: number, param4: number);
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export module layoutanimation {
					export class SimpleSpringInterpolator {
						public static class: java.lang.Class<com.facebook.react.uimanager.layoutanimation.SimpleSpringInterpolator>;
						public static PARAM_SPRING_DAMPING: string;
						public constructor();
						public constructor(param0: number);
						public static getSpringDamping(param0: com.facebook.react.bridge.ReadableMap): number;
						public getInterpolation(param0: number): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module uimanager {
				export module util {
					export class ReactFindViewUtil {
						public static class: java.lang.Class<com.facebook.react.uimanager.util.ReactFindViewUtil>;
						public static removeViewListener(param0: com.facebook.react.uimanager.util.ReactFindViewUtil.OnViewFoundListener): void;
						public static addViewsListener(param0: com.facebook.react.uimanager.util.ReactFindViewUtil.OnMultipleViewsFoundListener, param1: java.util.Set<string>): void;
						public static findView(param0: globalAndroid.view.View, param1: string): globalAndroid.view.View;
						public static addViewListener(param0: com.facebook.react.uimanager.util.ReactFindViewUtil.OnViewFoundListener): void;
						public constructor();
						public static findView(param0: globalAndroid.view.View, param1: com.facebook.react.uimanager.util.ReactFindViewUtil.OnViewFoundListener): void;
						public static removeViewsListener(param0: com.facebook.react.uimanager.util.ReactFindViewUtil.OnMultipleViewsFoundListener): void;
						public static notifyViewRendered(param0: globalAndroid.view.View): void;
					}
					export module ReactFindViewUtil {
						export class OnMultipleViewsFoundListener {
							public static class: java.lang.Class<com.facebook.react.uimanager.util.ReactFindViewUtil.OnMultipleViewsFoundListener>;
							/**
							 * Constructs a new instance of the com.facebook.react.uimanager.util.ReactFindViewUtil$OnMultipleViewsFoundListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onViewFound(param0: globalAndroid.view.View, param1: string): void;
							});
							public constructor();
							public onViewFound(param0: globalAndroid.view.View, param1: string): void;
						}
						export class OnViewFoundListener {
							public static class: java.lang.Class<com.facebook.react.uimanager.util.ReactFindViewUtil.OnViewFoundListener>;
							/**
							 * Constructs a new instance of the com.facebook.react.uimanager.util.ReactFindViewUtil$OnViewFoundListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								getNativeId(): string;
								onViewFound(param0: globalAndroid.view.View): void;
							});
							public constructor();
							public getNativeId(): string;
							public onViewFound(param0: globalAndroid.view.View): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module util {
				export class ExceptionDataHelper {
					public static class: java.lang.Class<com.facebook.react.util.ExceptionDataHelper>;
					public constructor();
					public static getExtraDataAsJson(param0: com.facebook.react.bridge.ReadableMap): string;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module util {
				export class JSStackTrace {
					public static class: java.lang.Class<com.facebook.react.util.JSStackTrace>;
					public static format(param0: string, param1: com.facebook.react.bridge.ReadableArray): string;
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module util {
				export class RCTLog extends com.facebook.react.bridge.JavaScriptModule {
					public static class: java.lang.Class<com.facebook.react.util.RCTLog>;
					/**
					 * Constructs a new instance of the com.facebook.react.util.RCTLog interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						logIfNoNativeHook(param0: string, param1: string): void;
					});
					public constructor();
					public logIfNoNativeHook(param0: string, param1: string): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module util {
				export class RNLog {
					public static class: java.lang.Class<com.facebook.react.util.RNLog>;
					public static MINIMUM_LEVEL_FOR_UI: number;
					public static LOG: number;
					public static TRACE: number;
					public static ADVICE: number;
					public static WARN: number;
					public static ERROR: number;
					public static w(param0: com.facebook.react.bridge.ReactContext, param1: string): void;
					public static e(param0: com.facebook.react.bridge.ReactContext, param1: string): void;
					public static e(param0: string): void;
					public static l(param0: string): void;
					public constructor();
					public static a(param0: string): void;
					public static t(param0: string): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module viewmanagers {
				export class ActivityIndicatorViewManagerDelegate<T, U>  extends com.facebook.react.uimanager.BaseViewManagerDelegate<any,any> {
					public static class: java.lang.Class<com.facebook.react.viewmanagers.ActivityIndicatorViewManagerDelegate<any,any>>;
					public constructor(param0: any);
					public setProperty(param0: any, param1: string, param2: any): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module viewmanagers {
				export class ActivityIndicatorViewManagerInterface<T>  extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.react.viewmanagers.ActivityIndicatorViewManagerInterface<any>>;
					/**
					 * Constructs a new instance of the com.facebook.react.viewmanagers.ActivityIndicatorViewManagerInterface<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						setHidesWhenStopped(param0: T, param1: boolean): void;
						setAnimating(param0: T, param1: boolean): void;
						setColor(param0: T, param1: java.lang.Integer): void;
						setSize(param0: T, param1: string): void;
					});
					public constructor();
					public setHidesWhenStopped(param0: T, param1: boolean): void;
					public setAnimating(param0: T, param1: boolean): void;
					public setColor(param0: T, param1: java.lang.Integer): void;
					public setSize(param0: T, param1: string): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module viewmanagers {
				export class AndroidDialogPickerManagerDelegate<T, U>  extends com.facebook.react.uimanager.BaseViewManagerDelegate<any,any> {
					public static class: java.lang.Class<com.facebook.react.viewmanagers.AndroidDialogPickerManagerDelegate<any,any>>;
					public constructor(param0: any);
					public setProperty(param0: any, param1: string, param2: any): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module viewmanagers {
				export class AndroidDialogPickerManagerInterface<T>  extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.react.viewmanagers.AndroidDialogPickerManagerInterface<any>>;
					/**
					 * Constructs a new instance of the com.facebook.react.viewmanagers.AndroidDialogPickerManagerInterface<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						setColor(param0: T, param1: java.lang.Integer): void;
						setBackgroundColor(param0: T, param1: java.lang.Integer): void;
						setEnabled(param0: T, param1: boolean): void;
						setItems(param0: T, param1: com.facebook.react.bridge.ReadableArray): void;
						setPrompt(param0: T, param1: string): void;
						setSelected(param0: T, param1: number): void;
					});
					public constructor();
					public setSelected(param0: T, param1: number): void;
					public setItems(param0: T, param1: com.facebook.react.bridge.ReadableArray): void;
					public setBackgroundColor(param0: T, param1: java.lang.Integer): void;
					public setEnabled(param0: T, param1: boolean): void;
					public setColor(param0: T, param1: java.lang.Integer): void;
					public setPrompt(param0: T, param1: string): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module viewmanagers {
				export class AndroidDrawerLayoutManagerDelegate<T, U>  extends com.facebook.react.uimanager.BaseViewManagerDelegate<any,any> {
					public static class: java.lang.Class<com.facebook.react.viewmanagers.AndroidDrawerLayoutManagerDelegate<any,any>>;
					public receiveCommand(param0: com.facebook.react.viewmanagers.AndroidDrawerLayoutManagerInterface<any>, param1: any, param2: string, param3: com.facebook.react.bridge.ReadableArray): void;
					public constructor(param0: any);
					public setProperty(param0: any, param1: string, param2: any): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module viewmanagers {
				export class AndroidDrawerLayoutManagerInterface<T>  extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.react.viewmanagers.AndroidDrawerLayoutManagerInterface<any>>;
					/**
					 * Constructs a new instance of the com.facebook.react.viewmanagers.AndroidDrawerLayoutManagerInterface<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						setKeyboardDismissMode(param0: T, param1: string): void;
						setDrawerBackgroundColor(param0: T, param1: java.lang.Integer): void;
						setDrawerPosition(param0: T, param1: string): void;
						setDrawerWidth(param0: T, param1: java.lang.Float): void;
						setDrawerLockMode(param0: T, param1: string): void;
						setStatusBarBackgroundColor(param0: T, param1: java.lang.Integer): void;
						openDrawer(param0: T): void;
						closeDrawer(param0: T): void;
					});
					public constructor();
					public setStatusBarBackgroundColor(param0: T, param1: java.lang.Integer): void;
					public setDrawerPosition(param0: T, param1: string): void;
					public setKeyboardDismissMode(param0: T, param1: string): void;
					public setDrawerWidth(param0: T, param1: java.lang.Float): void;
					public openDrawer(param0: T): void;
					public setDrawerBackgroundColor(param0: T, param1: java.lang.Integer): void;
					public setDrawerLockMode(param0: T, param1: string): void;
					public closeDrawer(param0: T): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module viewmanagers {
				export class AndroidDropdownPickerManagerDelegate<T, U>  extends com.facebook.react.uimanager.BaseViewManagerDelegate<any,any> {
					public static class: java.lang.Class<com.facebook.react.viewmanagers.AndroidDropdownPickerManagerDelegate<any,any>>;
					public constructor(param0: any);
					public setProperty(param0: any, param1: string, param2: any): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module viewmanagers {
				export class AndroidDropdownPickerManagerInterface<T>  extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.react.viewmanagers.AndroidDropdownPickerManagerInterface<any>>;
					/**
					 * Constructs a new instance of the com.facebook.react.viewmanagers.AndroidDropdownPickerManagerInterface<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						setColor(param0: T, param1: java.lang.Integer): void;
						setEnabled(param0: T, param1: boolean): void;
						setItems(param0: T, param1: com.facebook.react.bridge.ReadableArray): void;
						setPrompt(param0: T, param1: string): void;
						setSelected(param0: T, param1: number): void;
					});
					public constructor();
					public setSelected(param0: T, param1: number): void;
					public setItems(param0: T, param1: com.facebook.react.bridge.ReadableArray): void;
					public setEnabled(param0: T, param1: boolean): void;
					public setColor(param0: T, param1: java.lang.Integer): void;
					public setPrompt(param0: T, param1: string): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module viewmanagers {
				export class AndroidProgressBarManagerDelegate<T, U>  extends com.facebook.react.uimanager.BaseViewManagerDelegate<any,any> {
					public static class: java.lang.Class<com.facebook.react.viewmanagers.AndroidProgressBarManagerDelegate<any,any>>;
					public constructor(param0: any);
					public setProperty(param0: any, param1: string, param2: any): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module viewmanagers {
				export class AndroidProgressBarManagerInterface<T>  extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.react.viewmanagers.AndroidProgressBarManagerInterface<any>>;
					/**
					 * Constructs a new instance of the com.facebook.react.viewmanagers.AndroidProgressBarManagerInterface<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						setStyleAttr(param0: T, param1: string): void;
						setTypeAttr(param0: T, param1: string): void;
						setIndeterminate(param0: T, param1: boolean): void;
						setProgress(param0: T, param1: number): void;
						setAnimating(param0: T, param1: boolean): void;
						setColor(param0: T, param1: java.lang.Integer): void;
						setTestID(param0: T, param1: string): void;
					});
					public constructor();
					public setStyleAttr(param0: T, param1: string): void;
					public setAnimating(param0: T, param1: boolean): void;
					public setProgress(param0: T, param1: number): void;
					public setTypeAttr(param0: T, param1: string): void;
					public setIndeterminate(param0: T, param1: boolean): void;
					public setColor(param0: T, param1: java.lang.Integer): void;
					public setTestID(param0: T, param1: string): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module viewmanagers {
				export class AndroidSwipeRefreshLayoutManagerDelegate<T, U>  extends com.facebook.react.uimanager.BaseViewManagerDelegate<any,any> {
					public static class: java.lang.Class<com.facebook.react.viewmanagers.AndroidSwipeRefreshLayoutManagerDelegate<any,any>>;
					public constructor(param0: any);
					public setProperty(param0: any, param1: string, param2: any): void;
					public receiveCommand(param0: com.facebook.react.viewmanagers.AndroidSwipeRefreshLayoutManagerInterface<any>, param1: any, param2: string, param3: com.facebook.react.bridge.ReadableArray): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module viewmanagers {
				export class AndroidSwipeRefreshLayoutManagerInterface<T>  extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.react.viewmanagers.AndroidSwipeRefreshLayoutManagerInterface<any>>;
					/**
					 * Constructs a new instance of the com.facebook.react.viewmanagers.AndroidSwipeRefreshLayoutManagerInterface<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						setEnabled(param0: T, param1: boolean): void;
						setColors(param0: T, param1: com.facebook.react.bridge.ReadableArray): void;
						setProgressBackgroundColor(param0: T, param1: java.lang.Integer): void;
						setSize(param0: T, param1: number): void;
						setProgressViewOffset(param0: T, param1: number): void;
						setRefreshing(param0: T, param1: boolean): void;
						setNativeRefreshing(param0: T, param1: boolean): void;
					});
					public constructor();
					public setProgressBackgroundColor(param0: T, param1: java.lang.Integer): void;
					public setSize(param0: T, param1: number): void;
					public setColors(param0: T, param1: com.facebook.react.bridge.ReadableArray): void;
					public setProgressViewOffset(param0: T, param1: number): void;
					public setEnabled(param0: T, param1: boolean): void;
					public setRefreshing(param0: T, param1: boolean): void;
					public setNativeRefreshing(param0: T, param1: boolean): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module viewmanagers {
				export class AndroidSwitchManagerDelegate<T, U>  extends com.facebook.react.uimanager.BaseViewManagerDelegate<any,any> {
					public static class: java.lang.Class<com.facebook.react.viewmanagers.AndroidSwitchManagerDelegate<any,any>>;
					public receiveCommand(param0: com.facebook.react.viewmanagers.AndroidSwitchManagerInterface<any>, param1: any, param2: string, param3: com.facebook.react.bridge.ReadableArray): void;
					public constructor(param0: any);
					public setProperty(param0: any, param1: string, param2: any): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module viewmanagers {
				export class AndroidSwitchManagerInterface<T>  extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.react.viewmanagers.AndroidSwitchManagerInterface<any>>;
					/**
					 * Constructs a new instance of the com.facebook.react.viewmanagers.AndroidSwitchManagerInterface<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						setDisabled(param0: T, param1: boolean): void;
						setEnabled(param0: T, param1: boolean): void;
						setThumbColor(param0: T, param1: java.lang.Integer): void;
						setTrackColorForFalse(param0: T, param1: java.lang.Integer): void;
						setTrackColorForTrue(param0: T, param1: java.lang.Integer): void;
						setValue(param0: T, param1: boolean): void;
						setOn(param0: T, param1: boolean): void;
						setThumbTintColor(param0: T, param1: java.lang.Integer): void;
						setTrackTintColor(param0: T, param1: java.lang.Integer): void;
						setNativeValue(param0: T, param1: boolean): void;
					});
					public constructor();
					public setDisabled(param0: T, param1: boolean): void;
					public setTrackTintColor(param0: T, param1: java.lang.Integer): void;
					public setThumbTintColor(param0: T, param1: java.lang.Integer): void;
					public setThumbColor(param0: T, param1: java.lang.Integer): void;
					public setEnabled(param0: T, param1: boolean): void;
					public setOn(param0: T, param1: boolean): void;
					public setValue(param0: T, param1: boolean): void;
					public setTrackColorForTrue(param0: T, param1: java.lang.Integer): void;
					public setNativeValue(param0: T, param1: boolean): void;
					public setTrackColorForFalse(param0: T, param1: java.lang.Integer): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module viewmanagers {
				export class AndroidViewPagerManagerDelegate<T, U>  extends com.facebook.react.uimanager.BaseViewManagerDelegate<any,any> {
					public static class: java.lang.Class<com.facebook.react.viewmanagers.AndroidViewPagerManagerDelegate<any,any>>;
					public receiveCommand(param0: com.facebook.react.viewmanagers.AndroidViewPagerManagerInterface<any>, param1: any, param2: string, param3: com.facebook.react.bridge.ReadableArray): void;
					public constructor(param0: any);
					public setProperty(param0: any, param1: string, param2: any): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module viewmanagers {
				export class AndroidViewPagerManagerInterface<T>  extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.react.viewmanagers.AndroidViewPagerManagerInterface<any>>;
					/**
					 * Constructs a new instance of the com.facebook.react.viewmanagers.AndroidViewPagerManagerInterface<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						setInitialPage(param0: T, param1: number): void;
						setPageMargin(param0: T, param1: number): void;
						setPeekEnabled(param0: T, param1: boolean): void;
						setKeyboardDismissMode(param0: T, param1: string): void;
						setScrollEnabled(param0: T, param1: boolean): void;
						setPage(param0: T, param1: number): void;
						setPageWithoutAnimation(param0: T, param1: number): void;
					});
					public constructor();
					public setPeekEnabled(param0: T, param1: boolean): void;
					public setScrollEnabled(param0: T, param1: boolean): void;
					public setPageWithoutAnimation(param0: T, param1: number): void;
					public setInitialPage(param0: T, param1: number): void;
					public setPageMargin(param0: T, param1: number): void;
					public setKeyboardDismissMode(param0: T, param1: string): void;
					public setPage(param0: T, param1: number): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module viewmanagers {
				export class InputAccessoryViewManagerDelegate<T, U>  extends com.facebook.react.uimanager.BaseViewManagerDelegate<any,any> {
					public static class: java.lang.Class<com.facebook.react.viewmanagers.InputAccessoryViewManagerDelegate<any,any>>;
					public constructor(param0: any);
					public setProperty(param0: any, param1: string, param2: any): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module viewmanagers {
				export class InputAccessoryViewManagerInterface<T>  extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.react.viewmanagers.InputAccessoryViewManagerInterface<any>>;
					/**
					 * Constructs a new instance of the com.facebook.react.viewmanagers.InputAccessoryViewManagerInterface<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						setBackgroundColor(param0: T, param1: java.lang.Integer): void;
					});
					public constructor();
					public setBackgroundColor(param0: T, param1: java.lang.Integer): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module viewmanagers {
				export class MaskedViewManagerDelegate<T, U>  extends com.facebook.react.uimanager.BaseViewManagerDelegate<any,any> {
					public static class: java.lang.Class<com.facebook.react.viewmanagers.MaskedViewManagerDelegate<any,any>>;
					public constructor(param0: any);
					public setProperty(param0: any, param1: string, param2: any): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module viewmanagers {
				export class MaskedViewManagerInterface<T>  extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.react.viewmanagers.MaskedViewManagerInterface<any>>;
					/**
					 * Constructs a new instance of the com.facebook.react.viewmanagers.MaskedViewManagerInterface<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
					});
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module viewmanagers {
				export class ModalHostViewManagerDelegate<T, U>  extends com.facebook.react.uimanager.BaseViewManagerDelegate<any,any> {
					public static class: java.lang.Class<com.facebook.react.viewmanagers.ModalHostViewManagerDelegate<any,any>>;
					public constructor(param0: any);
					public setProperty(param0: any, param1: string, param2: any): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module viewmanagers {
				export class ModalHostViewManagerInterface<T>  extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.react.viewmanagers.ModalHostViewManagerInterface<any>>;
					/**
					 * Constructs a new instance of the com.facebook.react.viewmanagers.ModalHostViewManagerInterface<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						setAnimationType(param0: T, param1: string): void;
						setPresentationStyle(param0: T, param1: string): void;
						setTransparent(param0: T, param1: boolean): void;
						setStatusBarTranslucent(param0: T, param1: boolean): void;
						setHardwareAccelerated(param0: T, param1: boolean): void;
						setAnimated(param0: T, param1: boolean): void;
						setSupportedOrientations(param0: T, param1: com.facebook.react.bridge.ReadableArray): void;
						setIdentifier(param0: T, param1: number): void;
					});
					public constructor();
					public setTransparent(param0: T, param1: boolean): void;
					public setAnimated(param0: T, param1: boolean): void;
					public setIdentifier(param0: T, param1: number): void;
					public setSupportedOrientations(param0: T, param1: com.facebook.react.bridge.ReadableArray): void;
					public setStatusBarTranslucent(param0: T, param1: boolean): void;
					public setHardwareAccelerated(param0: T, param1: boolean): void;
					public setPresentationStyle(param0: T, param1: string): void;
					public setAnimationType(param0: T, param1: string): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module viewmanagers {
				export class ProgressViewManagerDelegate<T, U>  extends com.facebook.react.uimanager.BaseViewManagerDelegate<any,any> {
					public static class: java.lang.Class<com.facebook.react.viewmanagers.ProgressViewManagerDelegate<any,any>>;
					public constructor(param0: any);
					public setProperty(param0: any, param1: string, param2: any): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module viewmanagers {
				export class ProgressViewManagerInterface<T>  extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.react.viewmanagers.ProgressViewManagerInterface<any>>;
					/**
					 * Constructs a new instance of the com.facebook.react.viewmanagers.ProgressViewManagerInterface<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						setProgressViewStyle(param0: T, param1: string): void;
						setProgress(param0: T, param1: number): void;
						setProgressTintColor(param0: T, param1: java.lang.Integer): void;
						setTrackTintColor(param0: T, param1: java.lang.Integer): void;
						setProgressImage(param0: T, param1: com.facebook.react.bridge.ReadableMap): void;
						setTrackImage(param0: T, param1: com.facebook.react.bridge.ReadableMap): void;
					});
					public constructor();
					public setTrackImage(param0: T, param1: com.facebook.react.bridge.ReadableMap): void;
					public setProgressViewStyle(param0: T, param1: string): void;
					public setProgressImage(param0: T, param1: com.facebook.react.bridge.ReadableMap): void;
					public setTrackTintColor(param0: T, param1: java.lang.Integer): void;
					public setProgress(param0: T, param1: number): void;
					public setProgressTintColor(param0: T, param1: java.lang.Integer): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module viewmanagers {
				export class SafeAreaViewManagerDelegate<T, U>  extends com.facebook.react.uimanager.BaseViewManagerDelegate<any,any> {
					public static class: java.lang.Class<com.facebook.react.viewmanagers.SafeAreaViewManagerDelegate<any,any>>;
					public constructor(param0: any);
					public setProperty(param0: any, param1: string, param2: any): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module viewmanagers {
				export class SafeAreaViewManagerInterface<T>  extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.react.viewmanagers.SafeAreaViewManagerInterface<any>>;
					/**
					 * Constructs a new instance of the com.facebook.react.viewmanagers.SafeAreaViewManagerInterface<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						setEmulateUnlessSupported(param0: T, param1: boolean): void;
					});
					public constructor();
					public setEmulateUnlessSupported(param0: T, param1: boolean): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module viewmanagers {
				export class SegmentedControlManagerDelegate<T, U>  extends com.facebook.react.uimanager.BaseViewManagerDelegate<any,any> {
					public static class: java.lang.Class<com.facebook.react.viewmanagers.SegmentedControlManagerDelegate<any,any>>;
					public constructor(param0: any);
					public setProperty(param0: any, param1: string, param2: any): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module viewmanagers {
				export class SegmentedControlManagerInterface<T>  extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.react.viewmanagers.SegmentedControlManagerInterface<any>>;
					/**
					 * Constructs a new instance of the com.facebook.react.viewmanagers.SegmentedControlManagerInterface<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						setValues(param0: T, param1: com.facebook.react.bridge.ReadableArray): void;
						setSelectedIndex(param0: T, param1: number): void;
						setEnabled(param0: T, param1: boolean): void;
						setTintColor(param0: T, param1: java.lang.Integer): void;
						setTextColor(param0: T, param1: java.lang.Integer): void;
						setBackgroundColor(param0: T, param1: java.lang.Integer): void;
						setMomentary(param0: T, param1: boolean): void;
					});
					public constructor();
					public setTintColor(param0: T, param1: java.lang.Integer): void;
					public setSelectedIndex(param0: T, param1: number): void;
					public setEnabled(param0: T, param1: boolean): void;
					public setTextColor(param0: T, param1: java.lang.Integer): void;
					public setBackgroundColor(param0: T, param1: java.lang.Integer): void;
					public setValues(param0: T, param1: com.facebook.react.bridge.ReadableArray): void;
					public setMomentary(param0: T, param1: boolean): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module viewmanagers {
				export class SliderManagerDelegate<T, U>  extends com.facebook.react.uimanager.BaseViewManagerDelegate<any,any> {
					public static class: java.lang.Class<com.facebook.react.viewmanagers.SliderManagerDelegate<any,any>>;
					public constructor(param0: any);
					public setProperty(param0: any, param1: string, param2: any): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module viewmanagers {
				export class SliderManagerInterface<T>  extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.react.viewmanagers.SliderManagerInterface<any>>;
					/**
					 * Constructs a new instance of the com.facebook.react.viewmanagers.SliderManagerInterface<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						setDisabled(param0: T, param1: boolean): void;
						setEnabled(param0: T, param1: boolean): void;
						setMaximumTrackImage(param0: T, param1: com.facebook.react.bridge.ReadableMap): void;
						setMaximumTrackTintColor(param0: T, param1: java.lang.Integer): void;
						setMaximumValue(param0: T, param1: number): void;
						setMinimumTrackImage(param0: T, param1: com.facebook.react.bridge.ReadableMap): void;
						setMinimumTrackTintColor(param0: T, param1: java.lang.Integer): void;
						setMinimumValue(param0: T, param1: number): void;
						setStep(param0: T, param1: number): void;
						setTestID(param0: T, param1: string): void;
						setThumbImage(param0: T, param1: com.facebook.react.bridge.ReadableMap): void;
						setThumbTintColor(param0: T, param1: java.lang.Integer): void;
						setTrackImage(param0: T, param1: com.facebook.react.bridge.ReadableMap): void;
						setValue(param0: T, param1: number): void;
					});
					public constructor();
					public setDisabled(param0: T, param1: boolean): void;
					public setEnabled(param0: T, param1: boolean): void;
					public setTrackImage(param0: T, param1: com.facebook.react.bridge.ReadableMap): void;
					public setMaximumTrackImage(param0: T, param1: com.facebook.react.bridge.ReadableMap): void;
					public setMaximumTrackTintColor(param0: T, param1: java.lang.Integer): void;
					public setMinimumTrackTintColor(param0: T, param1: java.lang.Integer): void;
					public setValue(param0: T, param1: number): void;
					public setThumbImage(param0: T, param1: com.facebook.react.bridge.ReadableMap): void;
					public setMinimumTrackImage(param0: T, param1: com.facebook.react.bridge.ReadableMap): void;
					public setThumbTintColor(param0: T, param1: java.lang.Integer): void;
					public setMinimumValue(param0: T, param1: number): void;
					public setStep(param0: T, param1: number): void;
					public setMaximumValue(param0: T, param1: number): void;
					public setTestID(param0: T, param1: string): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module viewmanagers {
				export class SwitchManagerDelegate<T, U>  extends com.facebook.react.uimanager.BaseViewManagerDelegate<any,any> {
					public static class: java.lang.Class<com.facebook.react.viewmanagers.SwitchManagerDelegate<any,any>>;
					public constructor(param0: any);
					public setProperty(param0: any, param1: string, param2: any): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module viewmanagers {
				export class SwitchManagerInterface<T>  extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.react.viewmanagers.SwitchManagerInterface<any>>;
					/**
					 * Constructs a new instance of the com.facebook.react.viewmanagers.SwitchManagerInterface<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						setDisabled(param0: T, param1: boolean): void;
						setValue(param0: T, param1: boolean): void;
						setTintColor(param0: T, param1: java.lang.Integer): void;
						setOnTintColor(param0: T, param1: java.lang.Integer): void;
						setThumbTintColor(param0: T, param1: java.lang.Integer): void;
						setThumbColor(param0: T, param1: java.lang.Integer): void;
						setTrackColorForFalse(param0: T, param1: java.lang.Integer): void;
						setTrackColorForTrue(param0: T, param1: java.lang.Integer): void;
					});
					public constructor();
					public setTintColor(param0: T, param1: java.lang.Integer): void;
					public setDisabled(param0: T, param1: boolean): void;
					public setThumbTintColor(param0: T, param1: java.lang.Integer): void;
					public setThumbColor(param0: T, param1: java.lang.Integer): void;
					public setValue(param0: T, param1: boolean): void;
					public setTrackColorForTrue(param0: T, param1: java.lang.Integer): void;
					public setTrackColorForFalse(param0: T, param1: java.lang.Integer): void;
					public setOnTintColor(param0: T, param1: java.lang.Integer): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module viewmanagers {
				export class UnimplementedNativeViewManagerDelegate<T, U>  extends com.facebook.react.uimanager.BaseViewManagerDelegate<any,any> {
					public static class: java.lang.Class<com.facebook.react.viewmanagers.UnimplementedNativeViewManagerDelegate<any,any>>;
					public constructor(param0: any);
					public setProperty(param0: any, param1: string, param2: any): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module viewmanagers {
				export class UnimplementedNativeViewManagerInterface<T>  extends java.lang.Object {
					public static class: java.lang.Class<com.facebook.react.viewmanagers.UnimplementedNativeViewManagerInterface<any>>;
					/**
					 * Constructs a new instance of the com.facebook.react.viewmanagers.UnimplementedNativeViewManagerInterface<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						setName(param0: T, param1: string): void;
					});
					public constructor();
					public setName(param0: T, param1: string): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module art {
					export class ARTGroupShadowNode extends com.facebook.react.views.art.ARTVirtualNode {
						public static class: java.lang.Class<com.facebook.react.views.art.ARTGroupShadowNode>;
						public mClipping: globalAndroid.graphics.RectF;
						public getNativeChildCount(): number;
						public getViewClass(): string;
						public getPadding(param0: number): number;
						public hasUpdates(): boolean;
						public isDescendantOf(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): boolean;
						public setAlignContent(param0: com.facebook.yoga.YogaAlign): void;
						public hasUnseenUpdates(): boolean;
						public updateProperties(param0: com.facebook.react.uimanager.ReactStylesDiffMap): void;
						public setAlignSelf(param0: com.facebook.yoga.YogaAlign): void;
						public getLayoutParent(): any;
						public setRootTag(param0: number): void;
						public markLayoutSeen(): void;
						public shouldNotifyOnLayout(): boolean;
						public getParent(): any;
						public getLayoutHeight(): number;
						public markUpdateSeen(): void;
						public setPadding(param0: number, param1: number): void;
						public addChildAt(param0: any, param1: number): void;
						public constructor();
						public getStyleHeight(): com.facebook.yoga.YogaValue;
						public addNativeChildAt(param0: com.facebook.react.uimanager.ReactShadowNodeImpl, param1: number): void;
						public setIsLayoutOnly(param0: boolean): void;
						public calculateLayout(): void;
						public setFlexBasisPercent(param0: number): void;
						public hasNewLayout(): boolean;
						public isDescendantOf(param0: any): boolean;
						public getNativeOffsetForChild(param0: any): number;
						public onCollectExtraUpdates(param0: com.facebook.react.uimanager.UIViewOperationQueue): void;
						public setPosition(param0: number, param1: number): void;
						public setStyleWidth(param0: number): void;
						public draw(param0: globalAndroid.graphics.Canvas, param1: globalAndroid.graphics.Paint, param2: number): void;
						public getScreenY(): number;
						public isVirtualAnchor(): boolean;
						public isMeasureDefined(): boolean;
						public setStyleMaxWidthPercent(param0: number): void;
						public getStyleWidth(): com.facebook.yoga.YogaValue;
						public setDisplay(param0: com.facebook.yoga.YogaDisplay): void;
						public getLayoutDirection(): com.facebook.yoga.YogaDirection;
						public setFlex(param0: number): void;
						public getHeightMeasureSpec(): java.lang.Integer;
						public calculateLayoutOnChildren(): java.lang.Iterable<any>;
						public getRootTag(): number;
						public getTotalNativeChildren(): number;
						public indexOfNativeChild(param0: any): number;
						public getReactTag(): number;
						public getChildCount(): number;
						public getNativeParent(): com.facebook.react.uimanager.ReactShadowNodeImpl;
						public getNativeKind(): com.facebook.react.uimanager.NativeKind;
						public setFlexWrap(param0: com.facebook.yoga.YogaWrap): void;
						public isDirty(): boolean;
						public calculateLayout(param0: number, param1: number): void;
						public setPositionType(param0: com.facebook.yoga.YogaPositionType): void;
						public removeChildAt(param0: number): com.facebook.react.uimanager.ReactShadowNodeImpl;
						public getNativeOffsetForChild(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): number;
						public setMargin(param0: number, param1: number): void;
						public getStylePadding(param0: number): com.facebook.yoga.YogaValue;
						public setClipping(param0: com.facebook.react.bridge.ReadableArray): void;
						public dispatchUpdates(param0: number, param1: number, param2: com.facebook.react.uimanager.UIViewOperationQueue, param3: com.facebook.react.uimanager.NativeViewHierarchyOptimizer): boolean;
						public setStyleHeightPercent(param0: number): void;
						public setStyleMinHeight(param0: number): void;
						public setDefaultPadding(param0: number, param1: number): void;
						public setPositionPercent(param0: number, param1: number): void;
						public setStyleMinWidthPercent(param0: number): void;
						public setStyleHeight(param0: number): void;
						public setPaddingPercent(param0: number, param1: number): void;
						public setStyleWidthAuto(): void;
						public setAlignItems(param0: com.facebook.yoga.YogaAlign): void;
						public removeAllNativeChildren(): void;
						public setStyleMinHeightPercent(param0: number): void;
						public setFlexDirection(param0: com.facebook.yoga.YogaFlexDirection): void;
						public setOverflow(param0: com.facebook.yoga.YogaOverflow): void;
						public getLayoutY(): number;
						public removeNativeChildAt(param0: number): com.facebook.react.uimanager.ReactShadowNodeImpl;
						public setStyleMaxHeightPercent(param0: number): void;
						public setJustifyContent(param0: com.facebook.yoga.YogaJustify): void;
						public setStyleMaxHeight(param0: number): void;
						public removeNativeChildAt(param0: number): any;
						public setMarginPercent(param0: number, param1: number): void;
						public getChildAt(param0: number): any;
						public setReactTag(param0: number): void;
						public setMeasureSpecs(param0: number, param1: number): void;
						public dirty(): void;
						public setThemedContext(param0: com.facebook.react.uimanager.ThemedReactContext): void;
						public onBeforeLayout(param0: com.facebook.react.uimanager.NativeViewHierarchyOptimizer): void;
						public getWidthMeasureSpec(): java.lang.Integer;
						public removeAndDisposeAllChildren(): void;
						public hoistNativeChildren(): boolean;
						public dispose(): void;
						public setFlexBasisAuto(): void;
						public indexOf(param0: any): number;
						public isLayoutOnly(): boolean;
						public onAfterUpdateTransaction(): void;
						public setMarginAuto(param0: number): void;
						public setShouldNotifyOnLayout(param0: boolean): void;
						public markUpdated(): void;
						public setLayoutParent(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): void;
						public getScreenHeight(): number;
						public setStyleAspectRatio(param0: number): void;
						public addChildAt(param0: com.facebook.react.uimanager.ReactShadowNodeImpl, param1: number): void;
						public addNativeChildAt(param0: any, param1: number): void;
						public getChildAt(param0: number): com.facebook.react.uimanager.ReactShadowNodeImpl;
						public getThemedContext(): com.facebook.react.uimanager.ThemedReactContext;
						public getScreenX(): number;
						public getLayoutWidth(): number;
						public isYogaLeafNode(): boolean;
						public setStyleMaxWidth(param0: number): void;
						public setStyleWidthPercent(param0: number): void;
						public setStyleHeightAuto(): void;
						public getScreenWidth(): number;
						public getLayoutX(): number;
						public setStyleMinWidth(param0: number): void;
						public setBaselineFunction(param0: com.facebook.yoga.YogaBaselineFunction): void;
						public setFlexGrow(param0: number): void;
						public removeChildAt(param0: number): any;
						public setLayoutDirection(param0: com.facebook.yoga.YogaDirection): void;
						public getParent(): com.facebook.react.uimanager.ReactShadowNodeImpl;
						public getLayoutParent(): com.facebook.react.uimanager.ReactShadowNodeImpl;
						public indexOfNativeChild(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): number;
						public isVirtual(): boolean;
						public setMeasureFunction(param0: com.facebook.yoga.YogaMeasureFunction): void;
						public setViewClassName(param0: string): void;
						public setLocalData(param0: any): void;
						public setLayoutParent(param0: any): void;
						public setFlexShrink(param0: number): void;
						public getHierarchyInfo(): string;
						public setFlexBasis(param0: number): void;
						public getNativeParent(): any;
						public indexOf(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): number;
						public setBorder(param0: number, param1: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module art {
					export class ARTGroupViewManager extends com.facebook.react.views.art.ARTRenderableViewManager {
						public static class: java.lang.Class<com.facebook.react.views.art.ARTGroupViewManager>;
						public canOverrideExistingModule(): boolean;
						public initialize(): void;
						public onCatalystInstanceDestroy(): void;
						public getName(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module art {
					export class ARTRenderableViewManager extends com.facebook.react.uimanager.ViewManager<globalAndroid.view.View,com.facebook.react.uimanager.ReactShadowNode<any>> {
						public static class: java.lang.Class<com.facebook.react.views.art.ARTRenderableViewManager>;
						public static CLASS_GROUP: string;
						public static CLASS_SHAPE: string;
						public static CLASS_TEXT: string;
						public createViewInstance(param0: com.facebook.react.uimanager.ThemedReactContext): any;
						public updateExtraData(param0: any, param1: any): void;
						public createViewInstance(param0: com.facebook.react.uimanager.ThemedReactContext): globalAndroid.view.View;
						public canOverrideExistingModule(): boolean;
						public createViewInstance(param0: com.facebook.react.uimanager.ThemedReactContext, param1: com.facebook.react.uimanager.ReactStylesDiffMap, param2: com.facebook.react.uimanager.StateWrapper): any;
						public onCatalystInstanceDestroy(): void;
						public getName(): string;
						public createShadowNodeInstance(): com.facebook.react.uimanager.ReactShadowNode<any>;
						public static createARTTextViewManager(): com.facebook.react.views.art.ARTRenderableViewManager;
						public static createARTGroupViewManager(): com.facebook.react.views.art.ARTRenderableViewManager;
						public createShadowNodeInstance(): any;
						public getShadowNodeClass(): java.lang.Class<any>;
						public static createARTShapeViewManager(): com.facebook.react.views.art.ARTRenderableViewManager;
						public initialize(): void;
						public updateExtraData(param0: globalAndroid.view.View, param1: any): void;
						public createShadowNodeInstance(param0: com.facebook.react.bridge.ReactApplicationContext): any;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module art {
					export class ARTShapeShadowNode extends com.facebook.react.views.art.ARTVirtualNode {
						public static class: java.lang.Class<com.facebook.react.views.art.ARTShapeShadowNode>;
						public mPath: globalAndroid.graphics.Path;
						public getNativeChildCount(): number;
						public getViewClass(): string;
						public getPadding(param0: number): number;
						public hasUpdates(): boolean;
						public isDescendantOf(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): boolean;
						public setAlignContent(param0: com.facebook.yoga.YogaAlign): void;
						public hasUnseenUpdates(): boolean;
						public updateProperties(param0: com.facebook.react.uimanager.ReactStylesDiffMap): void;
						public setAlignSelf(param0: com.facebook.yoga.YogaAlign): void;
						public getLayoutParent(): any;
						public setRootTag(param0: number): void;
						public markLayoutSeen(): void;
						public shouldNotifyOnLayout(): boolean;
						public setStrokeJoin(param0: number): void;
						public getParent(): any;
						public getLayoutHeight(): number;
						public markUpdateSeen(): void;
						public setPadding(param0: number, param1: number): void;
						public addChildAt(param0: any, param1: number): void;
						public constructor();
						public getStyleHeight(): com.facebook.yoga.YogaValue;
						public addNativeChildAt(param0: com.facebook.react.uimanager.ReactShadowNodeImpl, param1: number): void;
						public setIsLayoutOnly(param0: boolean): void;
						public calculateLayout(): void;
						public setFlexBasisPercent(param0: number): void;
						public hasNewLayout(): boolean;
						public isDescendantOf(param0: any): boolean;
						public setupFillPaint(param0: globalAndroid.graphics.Paint, param1: number): boolean;
						public getNativeOffsetForChild(param0: any): number;
						public setStrokeWidth(param0: number): void;
						public onCollectExtraUpdates(param0: com.facebook.react.uimanager.UIViewOperationQueue): void;
						public setPosition(param0: number, param1: number): void;
						public setStyleWidth(param0: number): void;
						public draw(param0: globalAndroid.graphics.Canvas, param1: globalAndroid.graphics.Paint, param2: number): void;
						public getScreenY(): number;
						public isVirtualAnchor(): boolean;
						public isMeasureDefined(): boolean;
						public setStyleMaxWidthPercent(param0: number): void;
						public getStyleWidth(): com.facebook.yoga.YogaValue;
						public setDisplay(param0: com.facebook.yoga.YogaDisplay): void;
						public getLayoutDirection(): com.facebook.yoga.YogaDirection;
						public setFlex(param0: number): void;
						public getHeightMeasureSpec(): java.lang.Integer;
						public calculateLayoutOnChildren(): java.lang.Iterable<any>;
						public getRootTag(): number;
						public getTotalNativeChildren(): number;
						public indexOfNativeChild(param0: any): number;
						public getReactTag(): number;
						public getChildCount(): number;
						public getNativeParent(): com.facebook.react.uimanager.ReactShadowNodeImpl;
						public getNativeKind(): com.facebook.react.uimanager.NativeKind;
						public setFlexWrap(param0: com.facebook.yoga.YogaWrap): void;
						public isDirty(): boolean;
						public calculateLayout(param0: number, param1: number): void;
						public setPositionType(param0: com.facebook.yoga.YogaPositionType): void;
						public removeChildAt(param0: number): com.facebook.react.uimanager.ReactShadowNodeImpl;
						public getNativeOffsetForChild(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): number;
						public setMargin(param0: number, param1: number): void;
						public getStylePadding(param0: number): com.facebook.yoga.YogaValue;
						public dispatchUpdates(param0: number, param1: number, param2: com.facebook.react.uimanager.UIViewOperationQueue, param3: com.facebook.react.uimanager.NativeViewHierarchyOptimizer): boolean;
						public setStyleHeightPercent(param0: number): void;
						public setStyleMinHeight(param0: number): void;
						public setDefaultPadding(param0: number, param1: number): void;
						public setPositionPercent(param0: number, param1: number): void;
						public setStyleMinWidthPercent(param0: number): void;
						public setStyleHeight(param0: number): void;
						public setPaddingPercent(param0: number, param1: number): void;
						public setStyleWidthAuto(): void;
						public setAlignItems(param0: com.facebook.yoga.YogaAlign): void;
						public setStroke(param0: com.facebook.react.bridge.ReadableArray): void;
						public removeAllNativeChildren(): void;
						public setStyleMinHeightPercent(param0: number): void;
						public setFlexDirection(param0: com.facebook.yoga.YogaFlexDirection): void;
						public setOverflow(param0: com.facebook.yoga.YogaOverflow): void;
						public getLayoutY(): number;
						public removeNativeChildAt(param0: number): com.facebook.react.uimanager.ReactShadowNodeImpl;
						public setStyleMaxHeightPercent(param0: number): void;
						public setJustifyContent(param0: com.facebook.yoga.YogaJustify): void;
						public setStyleMaxHeight(param0: number): void;
						public removeNativeChildAt(param0: number): any;
						public setMarginPercent(param0: number, param1: number): void;
						public getChildAt(param0: number): any;
						public setReactTag(param0: number): void;
						public setMeasureSpecs(param0: number, param1: number): void;
						public dirty(): void;
						public setThemedContext(param0: com.facebook.react.uimanager.ThemedReactContext): void;
						public onBeforeLayout(param0: com.facebook.react.uimanager.NativeViewHierarchyOptimizer): void;
						public getWidthMeasureSpec(): java.lang.Integer;
						public removeAndDisposeAllChildren(): void;
						public setShapePath(param0: com.facebook.react.bridge.ReadableArray): void;
						public hoistNativeChildren(): boolean;
						public dispose(): void;
						public setFlexBasisAuto(): void;
						public indexOf(param0: any): number;
						public isLayoutOnly(): boolean;
						public onAfterUpdateTransaction(): void;
						public setMarginAuto(param0: number): void;
						public setShouldNotifyOnLayout(param0: boolean): void;
						public markUpdated(): void;
						public setLayoutParent(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): void;
						public getScreenHeight(): number;
						public setStyleAspectRatio(param0: number): void;
						public addChildAt(param0: com.facebook.react.uimanager.ReactShadowNodeImpl, param1: number): void;
						public addNativeChildAt(param0: any, param1: number): void;
						public getChildAt(param0: number): com.facebook.react.uimanager.ReactShadowNodeImpl;
						public getThemedContext(): com.facebook.react.uimanager.ThemedReactContext;
						public getScreenX(): number;
						public setStrokeDash(param0: com.facebook.react.bridge.ReadableArray): void;
						public getLayoutWidth(): number;
						public setStrokeCap(param0: number): void;
						public setupStrokePaint(param0: globalAndroid.graphics.Paint, param1: number): boolean;
						public isYogaLeafNode(): boolean;
						public setStyleMaxWidth(param0: number): void;
						public setStyleWidthPercent(param0: number): void;
						public setStyleHeightAuto(): void;
						public getScreenWidth(): number;
						public getLayoutX(): number;
						public setStyleMinWidth(param0: number): void;
						public setBaselineFunction(param0: com.facebook.yoga.YogaBaselineFunction): void;
						public setFlexGrow(param0: number): void;
						public removeChildAt(param0: number): any;
						public setLayoutDirection(param0: com.facebook.yoga.YogaDirection): void;
						public getParent(): com.facebook.react.uimanager.ReactShadowNodeImpl;
						public getLayoutParent(): com.facebook.react.uimanager.ReactShadowNodeImpl;
						public indexOfNativeChild(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): number;
						public isVirtual(): boolean;
						public setMeasureFunction(param0: com.facebook.yoga.YogaMeasureFunction): void;
						public setViewClassName(param0: string): void;
						public setLocalData(param0: any): void;
						public setLayoutParent(param0: any): void;
						public setFlexShrink(param0: number): void;
						public getHierarchyInfo(): string;
						public setFlexBasis(param0: number): void;
						public getNativeParent(): any;
						public setFill(param0: com.facebook.react.bridge.ReadableArray): void;
						public indexOf(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): number;
						public setBorder(param0: number, param1: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module art {
					export class ARTShapeViewManager extends com.facebook.react.views.art.ARTRenderableViewManager {
						public static class: java.lang.Class<com.facebook.react.views.art.ARTShapeViewManager>;
						public canOverrideExistingModule(): boolean;
						public initialize(): void;
						public onCatalystInstanceDestroy(): void;
						public getName(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module art {
					export class ARTSurfaceView {
						public static class: java.lang.Class<com.facebook.react.views.art.ARTSurfaceView>;
						public constructor(param0: globalAndroid.content.Context);
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module art {
					export class ARTSurfaceViewManager extends com.facebook.react.uimanager.BaseViewManager<com.facebook.react.views.art.ARTSurfaceView,com.facebook.react.views.art.ARTSurfaceViewShadowNode> {
						public static class: java.lang.Class<com.facebook.react.views.art.ARTSurfaceViewManager>;
						public static REACT_CLASS: string;
						public setBorderRadius(param0: any, param1: number): void;
						public setBorderBottomRightRadius(param0: any, param1: number): void;
						public createViewInstance(param0: com.facebook.react.uimanager.ThemedReactContext): any;
						public updateExtraData(param0: any, param1: any): void;
						public setTranslateX(param0: any, param1: number): void;
						public setBackgroundColor(param0: com.facebook.react.views.art.ARTSurfaceView, param1: number): void;
						public setZIndex(param0: any, param1: number): void;
						public updateExtraData(param0: com.facebook.react.views.art.ARTSurfaceView, param1: any): void;
						public onCatalystInstanceDestroy(): void;
						public setAccessibilityLiveRegion(param0: any, param1: string): void;
						public getName(): string;
						public createViewInstance(param0: com.facebook.react.uimanager.ThemedReactContext): com.facebook.react.views.art.ARTSurfaceView;
						public getShadowNodeClass(): java.lang.Class<com.facebook.react.views.art.ARTSurfaceViewShadowNode>;
						public setBorderTopLeftRadius(param0: any, param1: number): void;
						/** @deprecated */
						public setScaleX(param0: any, param1: number): void;
						public createShadowNodeInstance(): any;
						public getShadowNodeClass(): java.lang.Class<any>;
						public setScaleX(param0: any, param1: number): void;
						/** @deprecated */
						public setTranslateX(param0: any, param1: number): void;
						public setTestId(param0: any, param1: string): void;
						public setImportantForAccessibility(param0: any, param1: string): void;
						public setAccessibilityRole(param0: any, param1: string): void;
						public setNativeId(param0: any, param1: string): void;
						public setTransform(param0: any, param1: com.facebook.react.bridge.ReadableArray): void;
						public setAccessibilityActions(param0: any, param1: com.facebook.react.bridge.ReadableArray): void;
						public constructor();
						public setTranslateY(param0: any, param1: number): void;
						public setAccessibilityHint(param0: any, param1: string): void;
						public setElevation(param0: any, param1: number): void;
						public setOpacity(param0: any, param1: number): void;
						public canOverrideExistingModule(): boolean;
						public createViewInstance(param0: com.facebook.react.uimanager.ThemedReactContext, param1: com.facebook.react.uimanager.ReactStylesDiffMap, param2: com.facebook.react.uimanager.StateWrapper): any;
						/** @deprecated */
						public setScaleY(param0: any, param1: number): void;
						public setRenderToHardwareTexture(param0: any, param1: boolean): void;
						public setBackgroundColor(param0: any, param1: number): void;
						public setRotation(param0: any, param1: number): void;
						/** @deprecated */
						public setRotation(param0: any, param1: number): void;
						public createShadowNodeInstance(): com.facebook.react.views.art.ARTSurfaceViewShadowNode;
						public setAccessibilityLabel(param0: any, param1: string): void;
						public setViewState(param0: any, param1: com.facebook.react.bridge.ReadableMap): void;
						public initialize(): void;
						public setBorderBottomLeftRadius(param0: any, param1: number): void;
						public setBorderTopRightRadius(param0: any, param1: number): void;
						public createShadowNodeInstance(param0: com.facebook.react.bridge.ReactApplicationContext): any;
						/** @deprecated */
						public setTranslateY(param0: any, param1: number): void;
						public setScaleY(param0: any, param1: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module art {
					export class ARTSurfaceViewShadowNode extends com.facebook.react.uimanager.LayoutShadowNode implements com.facebook.react.bridge.LifecycleEventListener {
						public static class: java.lang.Class<com.facebook.react.views.art.ARTSurfaceViewShadowNode>;
						public getNativeChildCount(): number;
						public getViewClass(): string;
						public getPadding(param0: number): number;
						public hasUpdates(): boolean;
						public isDescendantOf(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): boolean;
						public setAlignContent(param0: com.facebook.yoga.YogaAlign): void;
						public hasUnseenUpdates(): boolean;
						public updateProperties(param0: com.facebook.react.uimanager.ReactStylesDiffMap): void;
						public setAlignSelf(param0: com.facebook.yoga.YogaAlign): void;
						public getLayoutParent(): any;
						public setRootTag(param0: number): void;
						public markLayoutSeen(): void;
						public shouldNotifyOnLayout(): boolean;
						public getParent(): any;
						public getLayoutHeight(): number;
						public markUpdateSeen(): void;
						public setPadding(param0: number, param1: number): void;
						public addChildAt(param0: any, param1: number): void;
						public constructor();
						public getStyleHeight(): com.facebook.yoga.YogaValue;
						public addNativeChildAt(param0: com.facebook.react.uimanager.ReactShadowNodeImpl, param1: number): void;
						public setIsLayoutOnly(param0: boolean): void;
						public setOverflow(param0: string): void;
						public calculateLayout(): void;
						public setFlexBasisPercent(param0: number): void;
						public hasNewLayout(): boolean;
						public isDescendantOf(param0: any): boolean;
						public getNativeOffsetForChild(param0: any): number;
						public onCollectExtraUpdates(param0: com.facebook.react.uimanager.UIViewOperationQueue): void;
						public setPosition(param0: string): void;
						public setPosition(param0: number, param1: number): void;
						public setStyleWidth(param0: number): void;
						public getScreenY(): number;
						public isVirtualAnchor(): boolean;
						public onHostResume(): void;
						public isMeasureDefined(): boolean;
						public setStyleMaxWidthPercent(param0: number): void;
						public getStyleWidth(): com.facebook.yoga.YogaValue;
						public setAlignItems(param0: string): void;
						public setFlexWrap(param0: string): void;
						public setDisplay(param0: string): void;
						public onSurfaceTextureSizeChanged(param0: globalAndroid.graphics.SurfaceTexture, param1: number, param2: number): void;
						public setDisplay(param0: com.facebook.yoga.YogaDisplay): void;
						public onHostDestroy(): void;
						public getLayoutDirection(): com.facebook.yoga.YogaDirection;
						public setFlex(param0: number): void;
						public getHeightMeasureSpec(): java.lang.Integer;
						public calculateLayoutOnChildren(): java.lang.Iterable<any>;
						public getRootTag(): number;
						public setAlignContent(param0: string): void;
						public getTotalNativeChildren(): number;
						public indexOfNativeChild(param0: any): number;
						public setFlexBasis(param0: com.facebook.react.bridge.Dynamic): void;
						public getReactTag(): number;
						public getChildCount(): number;
						public getNativeParent(): com.facebook.react.uimanager.ReactShadowNodeImpl;
						public getNativeKind(): com.facebook.react.uimanager.NativeKind;
						public setFlexWrap(param0: com.facebook.yoga.YogaWrap): void;
						public setFlexDirection(param0: string): void;
						public isDirty(): boolean;
						public calculateLayout(param0: number, param1: number): void;
						public setPositionType(param0: com.facebook.yoga.YogaPositionType): void;
						public removeChildAt(param0: number): com.facebook.react.uimanager.ReactShadowNodeImpl;
						public getNativeOffsetForChild(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): number;
						public setMargin(param0: number, param1: number): void;
						public getStylePadding(param0: number): com.facebook.yoga.YogaValue;
						public dispatchUpdates(param0: number, param1: number, param2: com.facebook.react.uimanager.UIViewOperationQueue, param3: com.facebook.react.uimanager.NativeViewHierarchyOptimizer): boolean;
						public setStyleHeightPercent(param0: number): void;
						public setStyleMinHeight(param0: number): void;
						public setDefaultPadding(param0: number, param1: number): void;
						public setPositionPercent(param0: number, param1: number): void;
						public setStyleMinWidthPercent(param0: number): void;
						public setStyleHeight(param0: number): void;
						public setPaddingPercent(param0: number, param1: number): void;
						public setStyleWidthAuto(): void;
						public setAlignItems(param0: com.facebook.yoga.YogaAlign): void;
						public removeAllNativeChildren(): void;
						public setStyleMinHeightPercent(param0: number): void;
						public setFlexDirection(param0: com.facebook.yoga.YogaFlexDirection): void;
						public setOverflow(param0: com.facebook.yoga.YogaOverflow): void;
						public getLayoutY(): number;
						public removeNativeChildAt(param0: number): com.facebook.react.uimanager.ReactShadowNodeImpl;
						public onHostPause(): void;
						public setJustifyContent(param0: string): void;
						public setStyleMaxHeightPercent(param0: number): void;
						public setJustifyContent(param0: com.facebook.yoga.YogaJustify): void;
						public setStyleMaxHeight(param0: number): void;
						public setAlignSelf(param0: string): void;
						public removeNativeChildAt(param0: number): any;
						public setMarginPercent(param0: number, param1: number): void;
						public setupSurfaceTextureListener(param0: com.facebook.react.views.art.ARTSurfaceView): void;
						public getChildAt(param0: number): any;
						public onSurfaceTextureUpdated(param0: globalAndroid.graphics.SurfaceTexture): void;
						public setReactTag(param0: number): void;
						public setMeasureSpecs(param0: number, param1: number): void;
						public setThemedContext(param0: com.facebook.react.uimanager.ThemedReactContext): void;
						public dirty(): void;
						public onBeforeLayout(param0: com.facebook.react.uimanager.NativeViewHierarchyOptimizer): void;
						public getWidthMeasureSpec(): java.lang.Integer;
						public removeAndDisposeAllChildren(): void;
						public onSurfaceTextureDestroyed(param0: globalAndroid.graphics.SurfaceTexture): boolean;
						public hoistNativeChildren(): boolean;
						public onSurfaceTextureAvailable(param0: globalAndroid.graphics.SurfaceTexture, param1: number, param2: number): void;
						public dispose(): void;
						public setFlexBasisAuto(): void;
						public indexOf(param0: any): number;
						public isLayoutOnly(): boolean;
						public onAfterUpdateTransaction(): void;
						public setMarginAuto(param0: number): void;
						public setShouldNotifyOnLayout(param0: boolean): void;
						public markUpdated(): void;
						public setLayoutParent(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): void;
						public getScreenHeight(): number;
						public setStyleAspectRatio(param0: number): void;
						public addChildAt(param0: com.facebook.react.uimanager.ReactShadowNodeImpl, param1: number): void;
						public addNativeChildAt(param0: any, param1: number): void;
						public getChildAt(param0: number): com.facebook.react.uimanager.ReactShadowNodeImpl;
						public getThemedContext(): com.facebook.react.uimanager.ThemedReactContext;
						public getScreenX(): number;
						public getLayoutWidth(): number;
						public isYogaLeafNode(): boolean;
						public setStyleMaxWidth(param0: number): void;
						public setStyleWidthPercent(param0: number): void;
						public setStyleHeightAuto(): void;
						public getScreenWidth(): number;
						public getLayoutX(): number;
						public setStyleMinWidth(param0: number): void;
						public setBaselineFunction(param0: com.facebook.yoga.YogaBaselineFunction): void;
						public setFlexGrow(param0: number): void;
						public removeChildAt(param0: number): any;
						public setLayoutDirection(param0: com.facebook.yoga.YogaDirection): void;
						public getParent(): com.facebook.react.uimanager.ReactShadowNodeImpl;
						public getLayoutParent(): com.facebook.react.uimanager.ReactShadowNodeImpl;
						public indexOfNativeChild(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): number;
						public isVirtual(): boolean;
						public setMeasureFunction(param0: com.facebook.yoga.YogaMeasureFunction): void;
						public setViewClassName(param0: string): void;
						public setBackgroundColor(param0: java.lang.Integer): void;
						public setLocalData(param0: any): void;
						public setLayoutParent(param0: any): void;
						public setFlexShrink(param0: number): void;
						public getHierarchyInfo(): string;
						public setFlexBasis(param0: number): void;
						public getNativeParent(): any;
						public indexOf(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): number;
						public setBorder(param0: number, param1: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module art {
					export class ARTTextShadowNode extends com.facebook.react.views.art.ARTShapeShadowNode {
						public static class: java.lang.Class<com.facebook.react.views.art.ARTTextShadowNode>;
						public getNativeChildCount(): number;
						public getViewClass(): string;
						public getPadding(param0: number): number;
						public hasUpdates(): boolean;
						public isDescendantOf(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): boolean;
						public setAlignContent(param0: com.facebook.yoga.YogaAlign): void;
						public setAlignment(param0: number): void;
						public hasUnseenUpdates(): boolean;
						public setFrame(param0: com.facebook.react.bridge.ReadableMap): void;
						public updateProperties(param0: com.facebook.react.uimanager.ReactStylesDiffMap): void;
						public setAlignSelf(param0: com.facebook.yoga.YogaAlign): void;
						public getLayoutParent(): any;
						public setRootTag(param0: number): void;
						public markLayoutSeen(): void;
						public shouldNotifyOnLayout(): boolean;
						public getParent(): any;
						public getLayoutHeight(): number;
						public markUpdateSeen(): void;
						public setPadding(param0: number, param1: number): void;
						public addChildAt(param0: any, param1: number): void;
						public constructor();
						public getStyleHeight(): com.facebook.yoga.YogaValue;
						public addNativeChildAt(param0: com.facebook.react.uimanager.ReactShadowNodeImpl, param1: number): void;
						public setIsLayoutOnly(param0: boolean): void;
						public calculateLayout(): void;
						public setFlexBasisPercent(param0: number): void;
						public hasNewLayout(): boolean;
						public isDescendantOf(param0: any): boolean;
						public getNativeOffsetForChild(param0: any): number;
						public onCollectExtraUpdates(param0: com.facebook.react.uimanager.UIViewOperationQueue): void;
						public setPosition(param0: number, param1: number): void;
						public setStyleWidth(param0: number): void;
						public draw(param0: globalAndroid.graphics.Canvas, param1: globalAndroid.graphics.Paint, param2: number): void;
						public getScreenY(): number;
						public isVirtualAnchor(): boolean;
						public isMeasureDefined(): boolean;
						public setStyleMaxWidthPercent(param0: number): void;
						public getStyleWidth(): com.facebook.yoga.YogaValue;
						public setDisplay(param0: com.facebook.yoga.YogaDisplay): void;
						public getLayoutDirection(): com.facebook.yoga.YogaDirection;
						public setFlex(param0: number): void;
						public getHeightMeasureSpec(): java.lang.Integer;
						public calculateLayoutOnChildren(): java.lang.Iterable<any>;
						public getRootTag(): number;
						public getTotalNativeChildren(): number;
						public indexOfNativeChild(param0: any): number;
						public getReactTag(): number;
						public getChildCount(): number;
						public getNativeParent(): com.facebook.react.uimanager.ReactShadowNodeImpl;
						public getNativeKind(): com.facebook.react.uimanager.NativeKind;
						public setFlexWrap(param0: com.facebook.yoga.YogaWrap): void;
						public isDirty(): boolean;
						public calculateLayout(param0: number, param1: number): void;
						public setPositionType(param0: com.facebook.yoga.YogaPositionType): void;
						public removeChildAt(param0: number): com.facebook.react.uimanager.ReactShadowNodeImpl;
						public getNativeOffsetForChild(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): number;
						public setMargin(param0: number, param1: number): void;
						public getStylePadding(param0: number): com.facebook.yoga.YogaValue;
						public dispatchUpdates(param0: number, param1: number, param2: com.facebook.react.uimanager.UIViewOperationQueue, param3: com.facebook.react.uimanager.NativeViewHierarchyOptimizer): boolean;
						public setStyleHeightPercent(param0: number): void;
						public setStyleMinHeight(param0: number): void;
						public setDefaultPadding(param0: number, param1: number): void;
						public setPositionPercent(param0: number, param1: number): void;
						public setStyleMinWidthPercent(param0: number): void;
						public setStyleHeight(param0: number): void;
						public setPaddingPercent(param0: number, param1: number): void;
						public setStyleWidthAuto(): void;
						public setAlignItems(param0: com.facebook.yoga.YogaAlign): void;
						public removeAllNativeChildren(): void;
						public setStyleMinHeightPercent(param0: number): void;
						public setFlexDirection(param0: com.facebook.yoga.YogaFlexDirection): void;
						public setOverflow(param0: com.facebook.yoga.YogaOverflow): void;
						public getLayoutY(): number;
						public removeNativeChildAt(param0: number): com.facebook.react.uimanager.ReactShadowNodeImpl;
						public setStyleMaxHeightPercent(param0: number): void;
						public setJustifyContent(param0: com.facebook.yoga.YogaJustify): void;
						public setStyleMaxHeight(param0: number): void;
						public removeNativeChildAt(param0: number): any;
						public setMarginPercent(param0: number, param1: number): void;
						public getChildAt(param0: number): any;
						public setReactTag(param0: number): void;
						public setMeasureSpecs(param0: number, param1: number): void;
						public dirty(): void;
						public setThemedContext(param0: com.facebook.react.uimanager.ThemedReactContext): void;
						public onBeforeLayout(param0: com.facebook.react.uimanager.NativeViewHierarchyOptimizer): void;
						public getWidthMeasureSpec(): java.lang.Integer;
						public removeAndDisposeAllChildren(): void;
						public hoistNativeChildren(): boolean;
						public dispose(): void;
						public setFlexBasisAuto(): void;
						public indexOf(param0: any): number;
						public isLayoutOnly(): boolean;
						public onAfterUpdateTransaction(): void;
						public setMarginAuto(param0: number): void;
						public setShouldNotifyOnLayout(param0: boolean): void;
						public markUpdated(): void;
						public setLayoutParent(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): void;
						public getScreenHeight(): number;
						public setStyleAspectRatio(param0: number): void;
						public addChildAt(param0: com.facebook.react.uimanager.ReactShadowNodeImpl, param1: number): void;
						public addNativeChildAt(param0: any, param1: number): void;
						public getChildAt(param0: number): com.facebook.react.uimanager.ReactShadowNodeImpl;
						public getThemedContext(): com.facebook.react.uimanager.ThemedReactContext;
						public getScreenX(): number;
						public getLayoutWidth(): number;
						public isYogaLeafNode(): boolean;
						public setStyleMaxWidth(param0: number): void;
						public setStyleWidthPercent(param0: number): void;
						public setStyleHeightAuto(): void;
						public getScreenWidth(): number;
						public getLayoutX(): number;
						public setStyleMinWidth(param0: number): void;
						public setBaselineFunction(param0: com.facebook.yoga.YogaBaselineFunction): void;
						public setFlexGrow(param0: number): void;
						public removeChildAt(param0: number): any;
						public setLayoutDirection(param0: com.facebook.yoga.YogaDirection): void;
						public getParent(): com.facebook.react.uimanager.ReactShadowNodeImpl;
						public getLayoutParent(): com.facebook.react.uimanager.ReactShadowNodeImpl;
						public indexOfNativeChild(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): number;
						public isVirtual(): boolean;
						public setMeasureFunction(param0: com.facebook.yoga.YogaMeasureFunction): void;
						public setViewClassName(param0: string): void;
						public setLocalData(param0: any): void;
						public setLayoutParent(param0: any): void;
						public setFlexShrink(param0: number): void;
						public getHierarchyInfo(): string;
						public setFlexBasis(param0: number): void;
						public getNativeParent(): any;
						public indexOf(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): number;
						public setBorder(param0: number, param1: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module art {
					export class ARTTextViewManager extends com.facebook.react.views.art.ARTRenderableViewManager {
						public static class: java.lang.Class<com.facebook.react.views.art.ARTTextViewManager>;
						public canOverrideExistingModule(): boolean;
						public initialize(): void;
						public onCatalystInstanceDestroy(): void;
						public getName(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module art {
					export abstract class ARTVirtualNode extends com.facebook.react.uimanager.ReactShadowNodeImpl {
						public static class: java.lang.Class<com.facebook.react.views.art.ARTVirtualNode>;
						public static MIN_OPACITY_FOR_DRAW: number;
						public mOpacity: number;
						public mScale: number;
						public getNativeChildCount(): number;
						public getViewClass(): string;
						public getPadding(param0: number): number;
						public hasUpdates(): boolean;
						public isDescendantOf(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): boolean;
						public setAlignContent(param0: com.facebook.yoga.YogaAlign): void;
						public hasUnseenUpdates(): boolean;
						public updateProperties(param0: com.facebook.react.uimanager.ReactStylesDiffMap): void;
						public setAlignSelf(param0: com.facebook.yoga.YogaAlign): void;
						public getLayoutParent(): any;
						public setRootTag(param0: number): void;
						public markLayoutSeen(): void;
						public shouldNotifyOnLayout(): boolean;
						public getParent(): any;
						public getLayoutHeight(): number;
						public markUpdateSeen(): void;
						public setPadding(param0: number, param1: number): void;
						public setOpacity(param0: number): void;
						public addChildAt(param0: any, param1: number): void;
						public constructor();
						public getStyleHeight(): com.facebook.yoga.YogaValue;
						public addNativeChildAt(param0: com.facebook.react.uimanager.ReactShadowNodeImpl, param1: number): void;
						public setIsLayoutOnly(param0: boolean): void;
						public calculateLayout(): void;
						public setFlexBasisPercent(param0: number): void;
						public hasNewLayout(): boolean;
						public isDescendantOf(param0: any): boolean;
						public getNativeOffsetForChild(param0: any): number;
						public onCollectExtraUpdates(param0: com.facebook.react.uimanager.UIViewOperationQueue): void;
						public setPosition(param0: number, param1: number): void;
						public setStyleWidth(param0: number): void;
						public draw(param0: globalAndroid.graphics.Canvas, param1: globalAndroid.graphics.Paint, param2: number): void;
						public getScreenY(): number;
						public isVirtualAnchor(): boolean;
						public isMeasureDefined(): boolean;
						public setStyleMaxWidthPercent(param0: number): void;
						public getStyleWidth(): com.facebook.yoga.YogaValue;
						public setDisplay(param0: com.facebook.yoga.YogaDisplay): void;
						public getLayoutDirection(): com.facebook.yoga.YogaDirection;
						public setFlex(param0: number): void;
						public getHeightMeasureSpec(): java.lang.Integer;
						public calculateLayoutOnChildren(): java.lang.Iterable<any>;
						public getRootTag(): number;
						public getTotalNativeChildren(): number;
						public indexOfNativeChild(param0: any): number;
						public getReactTag(): number;
						public getChildCount(): number;
						public getNativeParent(): com.facebook.react.uimanager.ReactShadowNodeImpl;
						public getNativeKind(): com.facebook.react.uimanager.NativeKind;
						public setFlexWrap(param0: com.facebook.yoga.YogaWrap): void;
						public isDirty(): boolean;
						public calculateLayout(param0: number, param1: number): void;
						public setPositionType(param0: com.facebook.yoga.YogaPositionType): void;
						public removeChildAt(param0: number): com.facebook.react.uimanager.ReactShadowNodeImpl;
						public getNativeOffsetForChild(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): number;
						public setMargin(param0: number, param1: number): void;
						public restoreCanvas(param0: globalAndroid.graphics.Canvas): void;
						public getStylePadding(param0: number): com.facebook.yoga.YogaValue;
						public dispatchUpdates(param0: number, param1: number, param2: com.facebook.react.uimanager.UIViewOperationQueue, param3: com.facebook.react.uimanager.NativeViewHierarchyOptimizer): boolean;
						public setStyleHeightPercent(param0: number): void;
						public setStyleMinHeight(param0: number): void;
						public saveAndSetupCanvas(param0: globalAndroid.graphics.Canvas): void;
						public setDefaultPadding(param0: number, param1: number): void;
						public setPositionPercent(param0: number, param1: number): void;
						public setStyleMinWidthPercent(param0: number): void;
						public setStyleHeight(param0: number): void;
						public setPaddingPercent(param0: number, param1: number): void;
						public setStyleWidthAuto(): void;
						public setupMatrix(): void;
						public setAlignItems(param0: com.facebook.yoga.YogaAlign): void;
						public removeAllNativeChildren(): void;
						public setStyleMinHeightPercent(param0: number): void;
						public setFlexDirection(param0: com.facebook.yoga.YogaFlexDirection): void;
						public setOverflow(param0: com.facebook.yoga.YogaOverflow): void;
						public getLayoutY(): number;
						public removeNativeChildAt(param0: number): com.facebook.react.uimanager.ReactShadowNodeImpl;
						public setStyleMaxHeightPercent(param0: number): void;
						public setJustifyContent(param0: com.facebook.yoga.YogaJustify): void;
						public setStyleMaxHeight(param0: number): void;
						public removeNativeChildAt(param0: number): any;
						public setMarginPercent(param0: number, param1: number): void;
						public getChildAt(param0: number): any;
						public setReactTag(param0: number): void;
						public setMeasureSpecs(param0: number, param1: number): void;
						public dirty(): void;
						public setThemedContext(param0: com.facebook.react.uimanager.ThemedReactContext): void;
						public onBeforeLayout(param0: com.facebook.react.uimanager.NativeViewHierarchyOptimizer): void;
						public getWidthMeasureSpec(): java.lang.Integer;
						public removeAndDisposeAllChildren(): void;
						public hoistNativeChildren(): boolean;
						public dispose(): void;
						public setFlexBasisAuto(): void;
						public indexOf(param0: any): number;
						public isLayoutOnly(): boolean;
						public onAfterUpdateTransaction(): void;
						public setMarginAuto(param0: number): void;
						public setShouldNotifyOnLayout(param0: boolean): void;
						public markUpdated(): void;
						public setLayoutParent(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): void;
						public getScreenHeight(): number;
						public setStyleAspectRatio(param0: number): void;
						public addChildAt(param0: com.facebook.react.uimanager.ReactShadowNodeImpl, param1: number): void;
						public addNativeChildAt(param0: any, param1: number): void;
						public getChildAt(param0: number): com.facebook.react.uimanager.ReactShadowNodeImpl;
						public getThemedContext(): com.facebook.react.uimanager.ThemedReactContext;
						public getScreenX(): number;
						public getLayoutWidth(): number;
						public isYogaLeafNode(): boolean;
						public setStyleMaxWidth(param0: number): void;
						public setStyleWidthPercent(param0: number): void;
						public setTransform(param0: com.facebook.react.bridge.ReadableArray): void;
						public setStyleHeightAuto(): void;
						public getScreenWidth(): number;
						public getLayoutX(): number;
						public setStyleMinWidth(param0: number): void;
						public setBaselineFunction(param0: com.facebook.yoga.YogaBaselineFunction): void;
						public setFlexGrow(param0: number): void;
						public removeChildAt(param0: number): any;
						public setLayoutDirection(param0: com.facebook.yoga.YogaDirection): void;
						public getParent(): com.facebook.react.uimanager.ReactShadowNodeImpl;
						public getLayoutParent(): com.facebook.react.uimanager.ReactShadowNodeImpl;
						public indexOfNativeChild(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): number;
						public isVirtual(): boolean;
						public setMeasureFunction(param0: com.facebook.yoga.YogaMeasureFunction): void;
						public setViewClassName(param0: string): void;
						public setLocalData(param0: any): void;
						public setLayoutParent(param0: any): void;
						public setFlexShrink(param0: number): void;
						public getHierarchyInfo(): string;
						public setFlexBasis(param0: number): void;
						public getNativeParent(): any;
						public indexOf(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): number;
						public setBorder(param0: number, param1: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module art {
					export class PropHelper {
						public static class: java.lang.Class<com.facebook.react.views.art.PropHelper>;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module checkbox {
					export class ReactCheckBox {
						public static class: java.lang.Class<com.facebook.react.views.checkbox.ReactCheckBox>;
						public setChecked(param0: boolean): void;
						public constructor(param0: globalAndroid.content.Context);
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module checkbox {
					export class ReactCheckBoxEvent extends com.facebook.react.uimanager.events.Event<com.facebook.react.views.checkbox.ReactCheckBoxEvent> {
						public static class: java.lang.Class<com.facebook.react.views.checkbox.ReactCheckBoxEvent>;
						public static EVENT_NAME: string;
						public constructor();
						public constructor(param0: number, param1: boolean);
						public getEventName(): string;
						public constructor(param0: number);
						public getIsChecked(): boolean;
						public getCoalescingKey(): number;
						public dispatch(param0: com.facebook.react.uimanager.events.RCTEventEmitter): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module checkbox {
					export class ReactCheckBoxManager extends com.facebook.react.uimanager.SimpleViewManager<com.facebook.react.views.checkbox.ReactCheckBox> {
						public static class: java.lang.Class<com.facebook.react.views.checkbox.ReactCheckBoxManager>;
						public static REACT_CLASS: string;
						public setBorderRadius(param0: any, param1: number): void;
						public receiveCommand(param0: com.facebook.react.views.checkbox.ReactCheckBox, param1: string, param2: com.facebook.react.bridge.ReadableArray): void;
						public setBorderBottomRightRadius(param0: any, param1: number): void;
						public createViewInstance(param0: com.facebook.react.uimanager.ThemedReactContext): any;
						public setTranslateX(param0: any, param1: number): void;
						public setZIndex(param0: any, param1: number): void;
						public onCatalystInstanceDestroy(): void;
						public setAccessibilityLiveRegion(param0: any, param1: string): void;
						public getName(): string;
						public receiveCommand(param0: any, param1: string, param2: com.facebook.react.bridge.ReadableArray): void;
						public setBorderTopLeftRadius(param0: any, param1: number): void;
						/** @deprecated */
						public setScaleX(param0: any, param1: number): void;
						public setScaleX(param0: any, param1: number): void;
						/** @deprecated */
						public setTranslateX(param0: any, param1: number): void;
						public setTestId(param0: any, param1: string): void;
						public setImportantForAccessibility(param0: any, param1: string): void;
						public setAccessibilityRole(param0: any, param1: string): void;
						public setNativeId(param0: any, param1: string): void;
						public setTransform(param0: any, param1: com.facebook.react.bridge.ReadableArray): void;
						public setAccessibilityActions(param0: any, param1: com.facebook.react.bridge.ReadableArray): void;
						public constructor();
						/** @deprecated */
						public receiveCommand(param0: any, param1: number, param2: com.facebook.react.bridge.ReadableArray): void;
						public setTranslateY(param0: any, param1: number): void;
						public setAccessibilityHint(param0: any, param1: string): void;
						public setElevation(param0: any, param1: number): void;
						public setOpacity(param0: any, param1: number): void;
						public canOverrideExistingModule(): boolean;
						public createViewInstance(param0: com.facebook.react.uimanager.ThemedReactContext, param1: com.facebook.react.uimanager.ReactStylesDiffMap, param2: com.facebook.react.uimanager.StateWrapper): any;
						/** @deprecated */
						public setScaleY(param0: any, param1: number): void;
						public createViewInstance(param0: com.facebook.react.uimanager.ThemedReactContext): com.facebook.react.views.checkbox.ReactCheckBox;
						public setEnabled(param0: com.facebook.react.views.checkbox.ReactCheckBox, param1: boolean): void;
						public setRenderToHardwareTexture(param0: any, param1: boolean): void;
						public addEventEmitters(param0: com.facebook.react.uimanager.ThemedReactContext, param1: com.facebook.react.views.checkbox.ReactCheckBox): void;
						public setBackgroundColor(param0: any, param1: number): void;
						public setOn(param0: com.facebook.react.views.checkbox.ReactCheckBox, param1: boolean): void;
						public setRotation(param0: any, param1: number): void;
						/** @deprecated */
						public setRotation(param0: any, param1: number): void;
						public setAccessibilityLabel(param0: any, param1: string): void;
						public addEventEmitters(param0: com.facebook.react.uimanager.ThemedReactContext, param1: any): void;
						public setViewState(param0: any, param1: com.facebook.react.bridge.ReadableMap): void;
						public initialize(): void;
						public setTintColors(param0: com.facebook.react.views.checkbox.ReactCheckBox, param1: com.facebook.react.bridge.ReadableMap): void;
						public setBorderBottomLeftRadius(param0: any, param1: number): void;
						public setBorderTopRightRadius(param0: any, param1: number): void;
						/** @deprecated */
						public setTranslateY(param0: any, param1: number): void;
						public setScaleY(param0: any, param1: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module common {
					export class ContextUtils {
						public static class: java.lang.Class<com.facebook.react.views.common.ContextUtils>;
						public constructor();
						public static findContextOfType(param0: globalAndroid.content.Context, param1: java.lang.Class): any;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module drawer {
					export class ReactDrawerLayout {
						public static class: java.lang.Class<com.facebook.react.views.drawer.ReactDrawerLayout>;
						public static DEFAULT_DRAWER_WIDTH: number;
						public constructor(param0: com.facebook.react.bridge.ReactContext);
						public onInterceptTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module drawer {
					export class ReactDrawerLayoutManager extends com.facebook.react.uimanager.ViewGroupManager<com.facebook.react.views.drawer.ReactDrawerLayout> implements com.facebook.react.viewmanagers.AndroidDrawerLayoutManagerInterface<com.facebook.react.views.drawer.ReactDrawerLayout>  {
						public static class: java.lang.Class<com.facebook.react.views.drawer.ReactDrawerLayoutManager>;
						public static REACT_CLASS: string;
						public static OPEN_DRAWER: number;
						public static CLOSE_DRAWER: number;
						public setBorderRadius(param0: any, param1: number): void;
						public createViewInstance(param0: com.facebook.react.uimanager.ThemedReactContext): any;
						public setTranslateX(param0: any, param1: number): void;
						public setAccessibilityLiveRegion(param0: any, param1: string): void;
						public getExportedCustomDirectEventTypeConstants(): java.util.Map<string,any>;
						public setKeyboardDismissMode(param0: any, param1: string): void;
						public closeDrawer(param0: com.facebook.react.views.drawer.ReactDrawerLayout): void;
						public setDrawerWidth(param0: com.facebook.react.views.drawer.ReactDrawerLayout, param1: java.lang.Float): void;
						public setScaleX(param0: any, param1: number): void;
						/** @deprecated */
						public setTranslateX(param0: any, param1: number): void;
						public getDelegate(): com.facebook.react.uimanager.ViewManagerDelegate<any>;
						public setTestId(param0: any, param1: string): void;
						public setImportantForAccessibility(param0: any, param1: string): void;
						public setKeyboardDismissMode(param0: com.facebook.react.views.drawer.ReactDrawerLayout, param1: string): void;
						public setAccessibilityRole(param0: any, param1: string): void;
						public setDrawerPosition(param0: com.facebook.react.views.drawer.ReactDrawerLayout, param1: string): void;
						public setDrawerPosition(param0: com.facebook.react.views.drawer.ReactDrawerLayout, param1: com.facebook.react.bridge.Dynamic): void;
						public setNativeId(param0: any, param1: string): void;
						public setAccessibilityActions(param0: any, param1: com.facebook.react.bridge.ReadableArray): void;
						public receiveCommand(param0: com.facebook.react.views.drawer.ReactDrawerLayout, param1: string, param2: com.facebook.react.bridge.ReadableArray): void;
						public constructor();
						/** @deprecated */
						public receiveCommand(param0: any, param1: number, param2: com.facebook.react.bridge.ReadableArray): void;
						public setTranslateY(param0: any, param1: number): void;
						public setElevation(param0: any, param1: number): void;
						public closeDrawer(param0: any): void;
						public setAccessibilityHint(param0: any, param1: string): void;
						public setOpacity(param0: any, param1: number): void;
						public canOverrideExistingModule(): boolean;
						public getDelegate(): com.facebook.react.uimanager.ViewManagerDelegate<com.facebook.react.views.drawer.ReactDrawerLayout>;
						/** @deprecated */
						public setScaleY(param0: any, param1: number): void;
						public setDrawerWidth(param0: any, param1: java.lang.Float): void;
						public receiveCommand(param0: com.facebook.react.views.drawer.ReactDrawerLayout, param1: number, param2: com.facebook.react.bridge.ReadableArray): void;
						/** @deprecated */
						public setRotation(param0: any, param1: number): void;
						public setStatusBarBackgroundColor(param0: com.facebook.react.views.drawer.ReactDrawerLayout, param1: java.lang.Integer): void;
						public setAccessibilityLabel(param0: any, param1: string): void;
						public addEventEmitters(param0: com.facebook.react.uimanager.ThemedReactContext, param1: any): void;
						public setDrawerLockMode(param0: any, param1: string): void;
						public addEventEmitters(param0: com.facebook.react.uimanager.ThemedReactContext, param1: com.facebook.react.views.drawer.ReactDrawerLayout): void;
						public initialize(): void;
						public setDrawerPosition(param0: any, param1: string): void;
						public setScaleY(param0: any, param1: number): void;
						public needsCustomLayoutForChildren(): boolean;
						public setBorderBottomRightRadius(param0: any, param1: number): void;
						public setZIndex(param0: any, param1: number): void;
						public setElevation(param0: com.facebook.react.views.drawer.ReactDrawerLayout, param1: number): void;
						public openDrawer(param0: any): void;
						public onCatalystInstanceDestroy(): void;
						public openDrawer(param0: com.facebook.react.views.drawer.ReactDrawerLayout): void;
						public getName(): string;
						public getCommandsMap(): java.util.Map<string,java.lang.Integer>;
						public receiveCommand(param0: any, param1: string, param2: com.facebook.react.bridge.ReadableArray): void;
						public setBorderTopLeftRadius(param0: any, param1: number): void;
						/** @deprecated */
						public setScaleX(param0: any, param1: number): void;
						public setTransform(param0: any, param1: com.facebook.react.bridge.ReadableArray): void;
						public setDrawerLockMode(param0: com.facebook.react.views.drawer.ReactDrawerLayout, param1: string): void;
						public setDrawerBackgroundColor(param0: any, param1: java.lang.Integer): void;
						public setStatusBarBackgroundColor(param0: any, param1: java.lang.Integer): void;
						public getExportedViewConstants(): java.util.Map<string,any>;
						public getExportedCustomDirectEventTypeConstants(): java.util.Map;
						public addView(param0: com.facebook.react.views.drawer.ReactDrawerLayout, param1: globalAndroid.view.View, param2: number): void;
						public createViewInstance(param0: com.facebook.react.uimanager.ThemedReactContext, param1: com.facebook.react.uimanager.ReactStylesDiffMap, param2: com.facebook.react.uimanager.StateWrapper): any;
						public setRenderToHardwareTexture(param0: any, param1: boolean): void;
						public addView(param0: any, param1: globalAndroid.view.View, param2: number): void;
						public setBackgroundColor(param0: any, param1: number): void;
						public createViewInstance(param0: com.facebook.react.uimanager.ThemedReactContext): com.facebook.react.views.drawer.ReactDrawerLayout;
						public getExportedViewConstants(): java.util.Map;
						public setRotation(param0: any, param1: number): void;
						public setDrawerWidth(param0: com.facebook.react.views.drawer.ReactDrawerLayout, param1: number): void;
						public setViewState(param0: any, param1: com.facebook.react.bridge.ReadableMap): void;
						public setBorderBottomLeftRadius(param0: any, param1: number): void;
						public setBorderTopRightRadius(param0: any, param1: number): void;
						/** @deprecated */
						public setTranslateY(param0: any, param1: number): void;
						public setDrawerBackgroundColor(param0: com.facebook.react.views.drawer.ReactDrawerLayout, param1: java.lang.Integer): void;
					}
					export module ReactDrawerLayoutManager {
						export class DrawerEventEmitter {
							public static class: java.lang.Class<com.facebook.react.views.drawer.ReactDrawerLayoutManager.DrawerEventEmitter>;
							public onDrawerSlide(param0: globalAndroid.view.View, param1: number): void;
							public constructor(param0: androidx.drawerlayout.widget.DrawerLayout, param1: com.facebook.react.uimanager.events.EventDispatcher);
							public onDrawerClosed(param0: globalAndroid.view.View): void;
							public onDrawerOpened(param0: globalAndroid.view.View): void;
							public onDrawerStateChanged(param0: number): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module drawer {
					export module events {
						export class DrawerClosedEvent extends com.facebook.react.uimanager.events.Event<com.facebook.react.views.drawer.events.DrawerClosedEvent> {
							public static class: java.lang.Class<com.facebook.react.views.drawer.events.DrawerClosedEvent>;
							public static EVENT_NAME: string;
							public constructor();
							public getEventName(): string;
							public constructor(param0: number);
							public getCoalescingKey(): number;
							public dispatch(param0: com.facebook.react.uimanager.events.RCTEventEmitter): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module drawer {
					export module events {
						export class DrawerOpenedEvent extends com.facebook.react.uimanager.events.Event<com.facebook.react.views.drawer.events.DrawerOpenedEvent> {
							public static class: java.lang.Class<com.facebook.react.views.drawer.events.DrawerOpenedEvent>;
							public static EVENT_NAME: string;
							public constructor();
							public getEventName(): string;
							public constructor(param0: number);
							public getCoalescingKey(): number;
							public dispatch(param0: com.facebook.react.uimanager.events.RCTEventEmitter): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module drawer {
					export module events {
						export class DrawerSlideEvent extends com.facebook.react.uimanager.events.Event<com.facebook.react.views.drawer.events.DrawerSlideEvent> {
							public static class: java.lang.Class<com.facebook.react.views.drawer.events.DrawerSlideEvent>;
							public static EVENT_NAME: string;
							public constructor();
							public constructor(param0: number, param1: number);
							public getEventName(): string;
							public getOffset(): number;
							public constructor(param0: number);
							public getCoalescingKey(): number;
							public dispatch(param0: com.facebook.react.uimanager.events.RCTEventEmitter): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module drawer {
					export module events {
						export class DrawerStateChangedEvent extends com.facebook.react.uimanager.events.Event<com.facebook.react.views.drawer.events.DrawerStateChangedEvent> {
							public static class: java.lang.Class<com.facebook.react.views.drawer.events.DrawerStateChangedEvent>;
							public static EVENT_NAME: string;
							public constructor();
							public constructor(param0: number, param1: number);
							public getEventName(): string;
							public getDrawerState(): number;
							public constructor(param0: number);
							public getCoalescingKey(): number;
							public dispatch(param0: com.facebook.react.uimanager.events.RCTEventEmitter): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module image {
					export class GlobalImageLoadListener {
						public static class: java.lang.Class<com.facebook.react.views.image.GlobalImageLoadListener>;
						/**
						 * Constructs a new instance of the com.facebook.react.views.image.GlobalImageLoadListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onLoadAttempt(param0: globalAndroid.net.Uri): void;
						});
						public constructor();
						public onLoadAttempt(param0: globalAndroid.net.Uri): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module image {
					export class ImageLoadEvent extends com.facebook.react.uimanager.events.Event<com.facebook.react.views.image.ImageLoadEvent> {
						public static class: java.lang.Class<com.facebook.react.views.image.ImageLoadEvent>;
						public static ON_ERROR: number;
						public static ON_LOAD: number;
						public static ON_LOAD_END: number;
						public static ON_LOAD_START: number;
						public static ON_PROGRESS: number;
						public constructor();
						public constructor(param0: number, param1: number, param2: boolean, param3: string);
						public static eventNameForType(param0: number): string;
						public constructor(param0: number, param1: number, param2: string);
						public getEventName(): string;
						public constructor(param0: number);
						public constructor(param0: number, param1: number, param2: string, param3: number, param4: number, param5: string);
						public getCoalescingKey(): number;
						public constructor(param0: number, param1: number, param2: string, param3: number, param4: number);
						public constructor(param0: number, param1: number);
						public dispatch(param0: com.facebook.react.uimanager.events.RCTEventEmitter): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module image {
					export class ImageResizeMethod {
						public static class: java.lang.Class<com.facebook.react.views.image.ImageResizeMethod>;
						public static AUTO: com.facebook.react.views.image.ImageResizeMethod;
						public static RESIZE: com.facebook.react.views.image.ImageResizeMethod;
						public static SCALE: com.facebook.react.views.image.ImageResizeMethod;
						public static valueOf(param0: string): com.facebook.react.views.image.ImageResizeMethod;
						public static values(): native.Array<com.facebook.react.views.image.ImageResizeMethod>;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module image {
					export class ImageResizeMode {
						public static class: java.lang.Class<com.facebook.react.views.image.ImageResizeMode>;
						public constructor();
						public static defaultValue(): com.facebook.drawee.drawable.ScalingUtils.ScaleType;
						public static toTileMode(param0: string): globalAndroid.graphics.Shader.TileMode;
						public static toScaleType(param0: string): com.facebook.drawee.drawable.ScalingUtils.ScaleType;
						public static defaultTileMode(): globalAndroid.graphics.Shader.TileMode;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module image {
					export class MultiPostprocessor {
						public static class: java.lang.Class<com.facebook.react.views.image.MultiPostprocessor>;
						public getPostprocessorCacheKey(): com.facebook.cache.common.CacheKey;
						public static from(param0: java.util.List<com.facebook.imagepipeline.request.Postprocessor>): com.facebook.imagepipeline.request.Postprocessor;
						public process(param0: globalAndroid.graphics.Bitmap, param1: com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory): com.facebook.common.references.CloseableReference<globalAndroid.graphics.Bitmap>;
						public getName(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module image {
					export class ReactCallerContextFactory {
						public static class: java.lang.Class<com.facebook.react.views.image.ReactCallerContextFactory>;
						/**
						 * Constructs a new instance of the com.facebook.react.views.image.ReactCallerContextFactory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getOrCreateCallerContext(param0: com.facebook.react.uimanager.ThemedReactContext, param1: string): any;
						});
						public constructor();
						public getOrCreateCallerContext(param0: com.facebook.react.uimanager.ThemedReactContext, param1: string): any;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module image {
					export class ReactImageManager extends com.facebook.react.uimanager.SimpleViewManager<com.facebook.react.views.image.ReactImageView> {
						public static class: java.lang.Class<com.facebook.react.views.image.ReactImageManager>;
						public static REACT_CLASS: string;
						public setBorderRadius(param0: any, param1: number): void;
						public setFadeDuration(param0: com.facebook.react.views.image.ReactImageView, param1: number): void;
						public createViewInstance(param0: com.facebook.react.uimanager.ThemedReactContext): any;
						public setTranslateX(param0: any, param1: number): void;
						public onAfterUpdateTransaction(param0: any): void;
						/** @deprecated */
						public getCallerContext(): any;
						public setResizeMode(param0: com.facebook.react.views.image.ReactImageView, param1: string): void;
						public setAccessibilityLiveRegion(param0: any, param1: string): void;
						/** @deprecated */
						public constructor(param0: com.facebook.drawee.controller.AbstractDraweeControllerBuilder, param1: com.facebook.react.views.image.GlobalImageLoadListener, param2: any);
						public getExportedCustomDirectEventTypeConstants(): java.util.Map<string,any>;
						public setOverlayColor(param0: com.facebook.react.views.image.ReactImageView, param1: java.lang.Integer): void;
						public setScaleX(param0: any, param1: number): void;
						/** @deprecated */
						public setTranslateX(param0: any, param1: number): void;
						public constructor(param0: com.facebook.drawee.controller.AbstractDraweeControllerBuilder, param1: com.facebook.react.views.image.GlobalImageLoadListener, param2: com.facebook.react.views.image.ReactCallerContextFactory);
						public setSource(param0: com.facebook.react.views.image.ReactImageView, param1: com.facebook.react.bridge.ReadableArray): void;
						public setTestId(param0: any, param1: string): void;
						public setImportantForAccessibility(param0: any, param1: string): void;
						public setBlurRadius(param0: com.facebook.react.views.image.ReactImageView, param1: number): void;
						public setAccessibilityRole(param0: any, param1: string): void;
						public setNativeId(param0: any, param1: string): void;
						public setAccessibilityActions(param0: any, param1: com.facebook.react.bridge.ReadableArray): void;
						public constructor();
						public setTranslateY(param0: any, param1: number): void;
						public setAccessibilityHint(param0: any, param1: string): void;
						public setElevation(param0: any, param1: number): void;
						public setOpacity(param0: any, param1: number): void;
						public canOverrideExistingModule(): boolean;
						/** @deprecated */
						public setScaleY(param0: any, param1: number): void;
						/** @deprecated */
						public constructor(param0: com.facebook.drawee.controller.AbstractDraweeControllerBuilder, param1: any);
						/** @deprecated */
						public setRotation(param0: any, param1: number): void;
						public setAccessibilityLabel(param0: any, param1: string): void;
						public initialize(): void;
						public createViewInstance(param0: com.facebook.react.uimanager.ThemedReactContext): com.facebook.react.views.image.ReactImageView;
						public setBorderColor(param0: com.facebook.react.views.image.ReactImageView, param1: java.lang.Integer): void;
						public setScaleY(param0: any, param1: number): void;
						public setProgressiveRenderingEnabled(param0: com.facebook.react.views.image.ReactImageView, param1: boolean): void;
						public setTintColor(param0: com.facebook.react.views.image.ReactImageView, param1: java.lang.Integer): void;
						public setBorderBottomRightRadius(param0: any, param1: number): void;
						public setLoadHandlersRegistered(param0: com.facebook.react.views.image.ReactImageView, param1: boolean): void;
						public setZIndex(param0: any, param1: number): void;
						public onCatalystInstanceDestroy(): void;
						public getName(): string;
						public setResizeMethod(param0: com.facebook.react.views.image.ReactImageView, param1: string): void;
						public setBorderTopLeftRadius(param0: any, param1: number): void;
						/** @deprecated */
						public setScaleX(param0: any, param1: number): void;
						public onAfterUpdateTransaction(param0: com.facebook.react.views.image.ReactImageView): void;
						public setBorderWidth(param0: com.facebook.react.views.image.ReactImageView, param1: number): void;
						public setTransform(param0: any, param1: com.facebook.react.bridge.ReadableArray): void;
						public setBorderRadius(param0: com.facebook.react.views.image.ReactImageView, param1: number, param2: number): void;
						public getExportedCustomDirectEventTypeConstants(): java.util.Map;
						public setHeaders(param0: com.facebook.react.views.image.ReactImageView, param1: com.facebook.react.bridge.ReadableMap): void;
						public createViewInstance(param0: com.facebook.react.uimanager.ThemedReactContext, param1: com.facebook.react.uimanager.ReactStylesDiffMap, param2: com.facebook.react.uimanager.StateWrapper): any;
						public setRenderToHardwareTexture(param0: any, param1: boolean): void;
						public setInternal_AnalyticsTag(param0: com.facebook.react.views.image.ReactImageView, param1: string): void;
						public setBackgroundColor(param0: any, param1: number): void;
						public setRotation(param0: any, param1: number): void;
						public getDraweeControllerBuilder(): com.facebook.drawee.controller.AbstractDraweeControllerBuilder;
						public setLoadingIndicatorSource(param0: com.facebook.react.views.image.ReactImageView, param1: string): void;
						public setViewState(param0: any, param1: com.facebook.react.bridge.ReadableMap): void;
						public setBorderBottomLeftRadius(param0: any, param1: number): void;
						public setDefaultSource(param0: com.facebook.react.views.image.ReactImageView, param1: string): void;
						public setBorderTopRightRadius(param0: any, param1: number): void;
						/** @deprecated */
						public setTranslateY(param0: any, param1: number): void;
						public constructor(param0: com.facebook.drawee.controller.AbstractDraweeControllerBuilder, param1: com.facebook.react.views.image.ReactCallerContextFactory);
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module image {
					export class ReactImageView {
						public static class: java.lang.Class<com.facebook.react.views.image.ReactImageView>;
						public static REMOTE_IMAGE_FADE_DURATION_MS: number;
						public static REMOTE_TRANSPARENT_BITMAP_URI: string;
						public setBorderColor(param0: number): void;
						public setLoadingIndicatorSource(param0: string): void;
						public setDefaultSource(param0: string): void;
						public constructor(param0: globalAndroid.content.Context, param1: com.facebook.drawee.controller.AbstractDraweeControllerBuilder, param2: com.facebook.react.views.image.GlobalImageLoadListener, param3: any);
						public setBorderRadius(param0: number, param1: number): void;
						public setHeaders(param0: com.facebook.react.bridge.ReadableMap): void;
						public setScaleType(param0: com.facebook.drawee.drawable.ScalingUtils.ScaleType): void;
						public hasOverlappingRendering(): boolean;
						public setBlurRadius(param0: number): void;
						public setSource(param0: com.facebook.react.bridge.ReadableArray): void;
						public setShouldNotifyLoadEvents(param0: boolean): void;
						public setBorderWidth(param0: number): void;
						public updateCallerContext(param0: any): void;
						public setBorderRadius(param0: number): void;
						public onSizeChanged(param0: number, param1: number, param2: number, param3: number): void;
						public setOverlayColor(param0: number): void;
						public setTileMode(param0: globalAndroid.graphics.Shader.TileMode): void;
						public setProgressiveRenderingEnabled(param0: boolean): void;
						public setResizeMethod(param0: com.facebook.react.views.image.ImageResizeMethod): void;
						public setBackgroundColor(param0: number): void;
						public setFadeDuration(param0: number): void;
						public maybeUpdateView(): void;
						public setControllerListener(param0: com.facebook.drawee.controller.ControllerListener): void;
					}
					export module ReactImageView {
						export class RoundedCornerPostprocessor {
							public static class: java.lang.Class<com.facebook.react.views.image.ReactImageView.RoundedCornerPostprocessor>;
							public process(param0: globalAndroid.graphics.Bitmap, param1: globalAndroid.graphics.Bitmap): void;
						}
						export class TilePostprocessor {
							public static class: java.lang.Class<com.facebook.react.views.image.ReactImageView.TilePostprocessor>;
							public process(param0: globalAndroid.graphics.Bitmap, param1: com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory): com.facebook.common.references.CloseableReference<globalAndroid.graphics.Bitmap>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module image {
					export class ScaleTypeStartInside {
						public static class: java.lang.Class<com.facebook.react.views.image.ScaleTypeStartInside>;
						public static INSTANCE: com.facebook.drawee.drawable.ScalingUtils.ScaleType;
						public constructor();
						public getTransformImpl(param0: globalAndroid.graphics.Matrix, param1: globalAndroid.graphics.Rect, param2: number, param3: number, param4: number, param5: number, param6: number, param7: number): void;
						public toString(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module imagehelper {
					export class ImageSource {
						public static class: java.lang.Class<com.facebook.react.views.imagehelper.ImageSource>;
						public getSource(): string;
						public constructor(param0: globalAndroid.content.Context, param1: string, param2: number, param3: number);
						public getSize(): number;
						public isResource(): boolean;
						public constructor(param0: globalAndroid.content.Context, param1: string);
						public getUri(): globalAndroid.net.Uri;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module imagehelper {
					export class MultiSourceHelper {
						public static class: java.lang.Class<com.facebook.react.views.imagehelper.MultiSourceHelper>;
						public static getBestSourceForSize(param0: number, param1: number, param2: java.util.List<com.facebook.react.views.imagehelper.ImageSource>, param3: number): com.facebook.react.views.imagehelper.MultiSourceHelper.MultiSourceResult;
						public constructor();
						public static getBestSourceForSize(param0: number, param1: number, param2: java.util.List<com.facebook.react.views.imagehelper.ImageSource>): com.facebook.react.views.imagehelper.MultiSourceHelper.MultiSourceResult;
					}
					export module MultiSourceHelper {
						export class MultiSourceResult {
							public static class: java.lang.Class<com.facebook.react.views.imagehelper.MultiSourceHelper.MultiSourceResult>;
							public getBestResultInCache(): com.facebook.react.views.imagehelper.ImageSource;
							public getBestResult(): com.facebook.react.views.imagehelper.ImageSource;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module imagehelper {
					export class ResourceDrawableIdHelper {
						public static class: java.lang.Class<com.facebook.react.views.imagehelper.ResourceDrawableIdHelper>;
						public getResourceDrawableId(param0: globalAndroid.content.Context, param1: string): number;
						public getResourceDrawableUri(param0: globalAndroid.content.Context, param1: string): globalAndroid.net.Uri;
						public getResourceDrawable(param0: globalAndroid.content.Context, param1: string): globalAndroid.graphics.drawable.Drawable;
						public static getInstance(): com.facebook.react.views.imagehelper.ResourceDrawableIdHelper;
						public clear(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module modal {
					export class ModalHostHelper {
						public static class: java.lang.Class<com.facebook.react.views.modal.ModalHostHelper>;
						public static getModalHostSize(param0: globalAndroid.content.Context): globalAndroid.graphics.Point;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module modal {
					export class ModalHostShadowNode extends com.facebook.react.uimanager.LayoutShadowNode {
						public static class: java.lang.Class<com.facebook.react.views.modal.ModalHostShadowNode>;
						public getNativeChildCount(): number;
						public getViewClass(): string;
						public getPadding(param0: number): number;
						public hasUpdates(): boolean;
						public isDescendantOf(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): boolean;
						public setAlignContent(param0: com.facebook.yoga.YogaAlign): void;
						public hasUnseenUpdates(): boolean;
						public updateProperties(param0: com.facebook.react.uimanager.ReactStylesDiffMap): void;
						public setAlignSelf(param0: com.facebook.yoga.YogaAlign): void;
						public getLayoutParent(): any;
						public setRootTag(param0: number): void;
						public markLayoutSeen(): void;
						public shouldNotifyOnLayout(): boolean;
						public getParent(): any;
						public getLayoutHeight(): number;
						public markUpdateSeen(): void;
						public setPadding(param0: number, param1: number): void;
						public addChildAt(param0: any, param1: number): void;
						public constructor();
						public getStyleHeight(): com.facebook.yoga.YogaValue;
						public addNativeChildAt(param0: com.facebook.react.uimanager.ReactShadowNodeImpl, param1: number): void;
						public setIsLayoutOnly(param0: boolean): void;
						public setOverflow(param0: string): void;
						public calculateLayout(): void;
						public setFlexBasisPercent(param0: number): void;
						public hasNewLayout(): boolean;
						public isDescendantOf(param0: any): boolean;
						public getNativeOffsetForChild(param0: any): number;
						public onCollectExtraUpdates(param0: com.facebook.react.uimanager.UIViewOperationQueue): void;
						public setPosition(param0: string): void;
						public setPosition(param0: number, param1: number): void;
						public setStyleWidth(param0: number): void;
						public getScreenY(): number;
						public isVirtualAnchor(): boolean;
						public isMeasureDefined(): boolean;
						public setStyleMaxWidthPercent(param0: number): void;
						public getStyleWidth(): com.facebook.yoga.YogaValue;
						public setAlignItems(param0: string): void;
						public setFlexWrap(param0: string): void;
						public setDisplay(param0: string): void;
						public setDisplay(param0: com.facebook.yoga.YogaDisplay): void;
						public getLayoutDirection(): com.facebook.yoga.YogaDirection;
						public setFlex(param0: number): void;
						public getHeightMeasureSpec(): java.lang.Integer;
						public calculateLayoutOnChildren(): java.lang.Iterable<any>;
						public getRootTag(): number;
						public setAlignContent(param0: string): void;
						public getTotalNativeChildren(): number;
						public indexOfNativeChild(param0: any): number;
						public setFlexBasis(param0: com.facebook.react.bridge.Dynamic): void;
						public getReactTag(): number;
						public getChildCount(): number;
						public getNativeParent(): com.facebook.react.uimanager.ReactShadowNodeImpl;
						public getNativeKind(): com.facebook.react.uimanager.NativeKind;
						public setFlexWrap(param0: com.facebook.yoga.YogaWrap): void;
						public setFlexDirection(param0: string): void;
						public isDirty(): boolean;
						public calculateLayout(param0: number, param1: number): void;
						public setPositionType(param0: com.facebook.yoga.YogaPositionType): void;
						public removeChildAt(param0: number): com.facebook.react.uimanager.ReactShadowNodeImpl;
						public getNativeOffsetForChild(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): number;
						public setMargin(param0: number, param1: number): void;
						public getStylePadding(param0: number): com.facebook.yoga.YogaValue;
						public dispatchUpdates(param0: number, param1: number, param2: com.facebook.react.uimanager.UIViewOperationQueue, param3: com.facebook.react.uimanager.NativeViewHierarchyOptimizer): boolean;
						public setStyleHeightPercent(param0: number): void;
						public setStyleMinHeight(param0: number): void;
						public setDefaultPadding(param0: number, param1: number): void;
						public setPositionPercent(param0: number, param1: number): void;
						public setStyleMinWidthPercent(param0: number): void;
						public setStyleHeight(param0: number): void;
						public setPaddingPercent(param0: number, param1: number): void;
						public setStyleWidthAuto(): void;
						public setAlignItems(param0: com.facebook.yoga.YogaAlign): void;
						public removeAllNativeChildren(): void;
						public setStyleMinHeightPercent(param0: number): void;
						public setFlexDirection(param0: com.facebook.yoga.YogaFlexDirection): void;
						public setOverflow(param0: com.facebook.yoga.YogaOverflow): void;
						public getLayoutY(): number;
						public removeNativeChildAt(param0: number): com.facebook.react.uimanager.ReactShadowNodeImpl;
						public setJustifyContent(param0: string): void;
						public setStyleMaxHeightPercent(param0: number): void;
						public setJustifyContent(param0: com.facebook.yoga.YogaJustify): void;
						public setStyleMaxHeight(param0: number): void;
						public setAlignSelf(param0: string): void;
						public removeNativeChildAt(param0: number): any;
						public setMarginPercent(param0: number, param1: number): void;
						public getChildAt(param0: number): any;
						public setReactTag(param0: number): void;
						public setMeasureSpecs(param0: number, param1: number): void;
						public dirty(): void;
						public setThemedContext(param0: com.facebook.react.uimanager.ThemedReactContext): void;
						public onBeforeLayout(param0: com.facebook.react.uimanager.NativeViewHierarchyOptimizer): void;
						public getWidthMeasureSpec(): java.lang.Integer;
						public removeAndDisposeAllChildren(): void;
						public hoistNativeChildren(): boolean;
						public dispose(): void;
						public setFlexBasisAuto(): void;
						public indexOf(param0: any): number;
						public isLayoutOnly(): boolean;
						public onAfterUpdateTransaction(): void;
						public setMarginAuto(param0: number): void;
						public setShouldNotifyOnLayout(param0: boolean): void;
						public markUpdated(): void;
						public setLayoutParent(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): void;
						public getScreenHeight(): number;
						public setStyleAspectRatio(param0: number): void;
						public addChildAt(param0: com.facebook.react.uimanager.ReactShadowNodeImpl, param1: number): void;
						public addNativeChildAt(param0: any, param1: number): void;
						public getChildAt(param0: number): com.facebook.react.uimanager.ReactShadowNodeImpl;
						public getThemedContext(): com.facebook.react.uimanager.ThemedReactContext;
						public getScreenX(): number;
						public getLayoutWidth(): number;
						public isYogaLeafNode(): boolean;
						public setStyleMaxWidth(param0: number): void;
						public setStyleWidthPercent(param0: number): void;
						public setStyleHeightAuto(): void;
						public getScreenWidth(): number;
						public getLayoutX(): number;
						public setStyleMinWidth(param0: number): void;
						public setBaselineFunction(param0: com.facebook.yoga.YogaBaselineFunction): void;
						public setFlexGrow(param0: number): void;
						public removeChildAt(param0: number): any;
						public setLayoutDirection(param0: com.facebook.yoga.YogaDirection): void;
						public getParent(): com.facebook.react.uimanager.ReactShadowNodeImpl;
						public getLayoutParent(): com.facebook.react.uimanager.ReactShadowNodeImpl;
						public indexOfNativeChild(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): number;
						public isVirtual(): boolean;
						public setMeasureFunction(param0: com.facebook.yoga.YogaMeasureFunction): void;
						public setViewClassName(param0: string): void;
						public setLocalData(param0: any): void;
						public setLayoutParent(param0: any): void;
						public setFlexShrink(param0: number): void;
						public getHierarchyInfo(): string;
						public setFlexBasis(param0: number): void;
						public getNativeParent(): any;
						public indexOf(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): number;
						public setBorder(param0: number, param1: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module modal {
					export class ReactModalHostManager extends com.facebook.react.uimanager.ViewGroupManager<com.facebook.react.views.modal.ReactModalHostView> implements com.facebook.react.viewmanagers.ModalHostViewManagerInterface<com.facebook.react.views.modal.ReactModalHostView>  {
						public static class: java.lang.Class<com.facebook.react.views.modal.ReactModalHostManager>;
						public static REACT_CLASS: string;
						public setBorderRadius(param0: any, param1: number): void;
						public createViewInstance(param0: com.facebook.react.uimanager.ThemedReactContext): any;
						public setIdentifier(param0: any, param1: number): void;
						public setTranslateX(param0: any, param1: number): void;
						public onAfterUpdateTransaction(param0: any): void;
						public onDropViewInstance(param0: any): void;
						public setAccessibilityLiveRegion(param0: any, param1: string): void;
						public getExportedCustomDirectEventTypeConstants(): java.util.Map<string,any>;
						public createShadowNodeInstance(): any;
						public getShadowNodeClass(): java.lang.Class<any>;
						public setScaleX(param0: any, param1: number): void;
						/** @deprecated */
						public setTranslateX(param0: any, param1: number): void;
						public getDelegate(): com.facebook.react.uimanager.ViewManagerDelegate<any>;
						public setTestId(param0: any, param1: string): void;
						public setSupportedOrientations(param0: any, param1: com.facebook.react.bridge.ReadableArray): void;
						public setImportantForAccessibility(param0: any, param1: string): void;
						public setHardwareAccelerated(param0: any, param1: boolean): void;
						public setAccessibilityRole(param0: any, param1: string): void;
						public setAnimated(param0: any, param1: boolean): void;
						public setNativeId(param0: any, param1: string): void;
						public setAnimationType(param0: any, param1: string): void;
						public setAccessibilityActions(param0: any, param1: com.facebook.react.bridge.ReadableArray): void;
						public setAnimated(param0: com.facebook.react.views.modal.ReactModalHostView, param1: boolean): void;
						public constructor();
						public setTranslateY(param0: any, param1: number): void;
						public setAccessibilityHint(param0: any, param1: string): void;
						public setElevation(param0: any, param1: number): void;
						public setOpacity(param0: any, param1: number): void;
						public canOverrideExistingModule(): boolean;
						public setTransparent(param0: any, param1: boolean): void;
						/** @deprecated */
						public setScaleY(param0: any, param1: number): void;
						public updateState(param0: any, param1: com.facebook.react.uimanager.ReactStylesDiffMap, param2: com.facebook.react.uimanager.StateWrapper): any;
						public getDelegate(): com.facebook.react.uimanager.ViewManagerDelegate<com.facebook.react.views.modal.ReactModalHostView>;
						public onAfterUpdateTransaction(param0: com.facebook.react.views.modal.ReactModalHostView): void;
						public setIdentifier(param0: com.facebook.react.views.modal.ReactModalHostView, param1: number): void;
						/** @deprecated */
						public setRotation(param0: any, param1: number): void;
						public setAccessibilityLabel(param0: any, param1: string): void;
						public addEventEmitters(param0: com.facebook.react.uimanager.ThemedReactContext, param1: any): void;
						public initialize(): void;
						public createShadowNodeInstance(param0: com.facebook.react.bridge.ReactApplicationContext): any;
						public setScaleY(param0: any, param1: number): void;
						public needsCustomLayoutForChildren(): boolean;
						public createViewInstance(param0: com.facebook.react.uimanager.ThemedReactContext): com.facebook.react.views.modal.ReactModalHostView;
						public setBorderBottomRightRadius(param0: any, param1: number): void;
						public addEventEmitters(param0: com.facebook.react.uimanager.ThemedReactContext, param1: com.facebook.react.views.modal.ReactModalHostView): void;
						public setZIndex(param0: any, param1: number): void;
						public onCatalystInstanceDestroy(): void;
						public getName(): string;
						public setBorderTopLeftRadius(param0: any, param1: number): void;
						/** @deprecated */
						public setScaleX(param0: any, param1: number): void;
						public setTransform(param0: any, param1: com.facebook.react.bridge.ReadableArray): void;
						public setAnimationType(param0: com.facebook.react.views.modal.ReactModalHostView, param1: string): void;
						public createViewInstance(param0: com.facebook.react.uimanager.ThemedReactContext, param1: com.facebook.react.uimanager.ReactStylesDiffMap, param2: com.facebook.react.uimanager.StateWrapper): any;
						public setRenderToHardwareTexture(param0: any, param1: boolean): void;
						public setHardwareAccelerated(param0: com.facebook.react.views.modal.ReactModalHostView, param1: boolean): void;
						public setSupportedOrientations(param0: com.facebook.react.views.modal.ReactModalHostView, param1: com.facebook.react.bridge.ReadableArray): void;
						public setBackgroundColor(param0: any, param1: number): void;
						public setPresentationStyle(param0: com.facebook.react.views.modal.ReactModalHostView, param1: string): void;
						public setRotation(param0: any, param1: number): void;
						public onDropViewInstance(param0: com.facebook.react.views.modal.ReactModalHostView): void;
						public setStatusBarTranslucent(param0: any, param1: boolean): void;
						public setTransparent(param0: com.facebook.react.views.modal.ReactModalHostView, param1: boolean): void;
						public updateState(param0: com.facebook.react.views.modal.ReactModalHostView, param1: com.facebook.react.uimanager.ReactStylesDiffMap, param2: com.facebook.react.uimanager.StateWrapper): any;
						public setViewState(param0: any, param1: com.facebook.react.bridge.ReadableMap): void;
						public setPresentationStyle(param0: any, param1: string): void;
						public setBorderBottomLeftRadius(param0: any, param1: number): void;
						public createShadowNodeInstance(): com.facebook.react.uimanager.LayoutShadowNode;
						public setStatusBarTranslucent(param0: com.facebook.react.views.modal.ReactModalHostView, param1: boolean): void;
						public setBorderTopRightRadius(param0: any, param1: number): void;
						/** @deprecated */
						public setTranslateY(param0: any, param1: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module modal {
					export class ReactModalHostView implements com.facebook.react.bridge.LifecycleEventListener {
						public static class: java.lang.Class<com.facebook.react.views.modal.ReactModalHostView>;
						public removeView(param0: globalAndroid.view.View): void;
						public setTransparent(param0: boolean): void;
						public constructor(param0: globalAndroid.content.Context);
						public getChildCount(): number;
						public removeViewAt(param0: number): void;
						public dispatchPopulateAccessibilityEvent(param0: globalAndroid.view.accessibility.AccessibilityEvent): boolean;
						public setOnShowListener(param0: globalAndroid.content.DialogInterface.OnShowListener): void;
						public getDialog(): globalAndroid.app.Dialog;
						public onDetachedFromWindow(): void;
						public showOrUpdate(): void;
						public getChildAt(param0: number): globalAndroid.view.View;
						public addChildrenForAccessibility(param0: java.util.ArrayList<globalAndroid.view.View>): void;
						public setStatusBarTranslucent(param0: boolean): void;
						public onHostPause(): void;
						public onLayout(param0: boolean, param1: number, param2: number, param3: number, param4: number): void;
						public updateState(param0: com.facebook.react.uimanager.StateWrapper, param1: number, param2: number): void;
						public dispatchProvideStructure(param0: any): void;
						public onHostDestroy(): void;
						public setOnRequestCloseListener(param0: com.facebook.react.views.modal.ReactModalHostView.OnRequestCloseListener): void;
						public onDropInstance(): void;
						public setAnimationType(param0: string): void;
						public setHardwareAccelerated(param0: boolean): void;
						public addView(param0: globalAndroid.view.View, param1: number): void;
						public onHostResume(): void;
					}
					export module ReactModalHostView {
						export class DialogRootViewGroup extends com.facebook.react.views.view.ReactViewGroup implements com.facebook.react.uimanager.RootView {
							public static class: java.lang.Class<com.facebook.react.views.modal.ReactModalHostView.DialogRootViewGroup>;
							public getHitSlopRect(): globalAndroid.graphics.Rect;
							public getZIndexMappedChildIndex(param0: number): number;
							public updateClippingRect(): void;
							public updateDrawingOrder(): void;
							public getClippingRect(param0: globalAndroid.graphics.Rect): void;
							public addView(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.view.ViewGroup.LayoutParams): void;
							public onSizeChanged(param0: number, param1: number, param2: number, param3: number): void;
							public handleException(param0: java.lang.Throwable): void;
							public updateState(param0: com.facebook.react.uimanager.StateWrapper, param1: number, param2: number): void;
							public onTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
							public onChildStartedNativeGesture(param0: globalAndroid.view.MotionEvent): void;
							public setOnInterceptTouchEventListener(param0: com.facebook.react.touch.OnInterceptTouchEventListener): void;
							public setRemoveClippedSubviews(param0: boolean): void;
							public getPointerEvents(): com.facebook.react.uimanager.PointerEvents;
							public onInterceptTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
							public requestDisallowInterceptTouchEvent(param0: boolean): void;
							public getRemoveClippedSubviews(): boolean;
							public constructor(param0: globalAndroid.content.Context);
						}
						export class OnRequestCloseListener {
							public static class: java.lang.Class<com.facebook.react.views.modal.ReactModalHostView.OnRequestCloseListener>;
							/**
							 * Constructs a new instance of the com.facebook.react.views.modal.ReactModalHostView$OnRequestCloseListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onRequestClose(param0: globalAndroid.content.DialogInterface): void;
							});
							public constructor();
							public onRequestClose(param0: globalAndroid.content.DialogInterface): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module modal {
					export class RequestCloseEvent extends com.facebook.react.uimanager.events.Event<com.facebook.react.views.modal.RequestCloseEvent> {
						public static class: java.lang.Class<com.facebook.react.views.modal.RequestCloseEvent>;
						public static EVENT_NAME: string;
						public constructor();
						public getEventName(): string;
						public constructor(param0: number);
						public dispatch(param0: com.facebook.react.uimanager.events.RCTEventEmitter): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module modal {
					export class ShowEvent extends com.facebook.react.uimanager.events.Event<com.facebook.react.views.modal.ShowEvent> {
						public static class: java.lang.Class<com.facebook.react.views.modal.ShowEvent>;
						public static EVENT_NAME: string;
						public constructor();
						public getEventName(): string;
						public constructor(param0: number);
						public dispatch(param0: com.facebook.react.uimanager.events.RCTEventEmitter): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module picker {
					export class ReactDialogPickerManager extends com.facebook.react.views.picker.ReactPickerManager implements com.facebook.react.viewmanagers.AndroidDialogPickerManagerInterface<com.facebook.react.views.picker.ReactPicker>  {
						public static class: java.lang.Class<com.facebook.react.views.picker.ReactDialogPickerManager>;
						public static REACT_CLASS: string;
						public setBorderRadius(param0: any, param1: number): void;
						public setPrompt(param0: com.facebook.react.views.picker.ReactPicker, param1: string): void;
						public createViewInstance(param0: com.facebook.react.uimanager.ThemedReactContext): any;
						public setTranslateX(param0: any, param1: number): void;
						public createViewInstance(param0: com.facebook.react.uimanager.ThemedReactContext): com.facebook.react.views.picker.ReactPicker;
						public setAccessibilityLiveRegion(param0: any, param1: string): void;
						public getDelegate(): com.facebook.react.uimanager.ViewManagerDelegate<com.facebook.react.views.picker.ReactPicker>;
						public setScaleX(param0: any, param1: number): void;
						/** @deprecated */
						public setTranslateX(param0: any, param1: number): void;
						public getDelegate(): com.facebook.react.uimanager.ViewManagerDelegate<any>;
						public setTestId(param0: any, param1: string): void;
						public setImportantForAccessibility(param0: any, param1: string): void;
						public setBackgroundColor(param0: any, param1: java.lang.Integer): void;
						public setAccessibilityRole(param0: any, param1: string): void;
						public setNativeId(param0: any, param1: string): void;
						public setPrompt(param0: any, param1: string): void;
						public setAccessibilityActions(param0: any, param1: com.facebook.react.bridge.ReadableArray): void;
						public constructor();
						public setTranslateY(param0: any, param1: number): void;
						public setAccessibilityHint(param0: any, param1: string): void;
						public setElevation(param0: any, param1: number): void;
						public setOpacity(param0: any, param1: number): void;
						public canOverrideExistingModule(): boolean;
						/** @deprecated */
						public setScaleY(param0: any, param1: number): void;
						/** @deprecated */
						public setRotation(param0: any, param1: number): void;
						public setAccessibilityLabel(param0: any, param1: string): void;
						public setBackgroundColor(param0: com.facebook.react.views.picker.ReactPicker, param1: java.lang.Integer): void;
						public initialize(): void;
						public setScaleY(param0: any, param1: number): void;
						public setBorderBottomRightRadius(param0: any, param1: number): void;
						public setColor(param0: any, param1: java.lang.Integer): void;
						public setZIndex(param0: any, param1: number): void;
						public onCatalystInstanceDestroy(): void;
						public setItems(param0: com.facebook.react.views.picker.ReactPicker, param1: com.facebook.react.bridge.ReadableArray): void;
						public getName(): string;
						public setSelected(param0: any, param1: number): void;
						public setBorderTopLeftRadius(param0: any, param1: number): void;
						/** @deprecated */
						public setScaleX(param0: any, param1: number): void;
						public setColor(param0: com.facebook.react.views.picker.ReactPicker, param1: java.lang.Integer): void;
						public setTransform(param0: any, param1: com.facebook.react.bridge.ReadableArray): void;
						public setItems(param0: any, param1: com.facebook.react.bridge.ReadableArray): void;
						public createViewInstance(param0: com.facebook.react.uimanager.ThemedReactContext, param1: com.facebook.react.uimanager.ReactStylesDiffMap, param2: com.facebook.react.uimanager.StateWrapper): any;
						public setRenderToHardwareTexture(param0: any, param1: boolean): void;
						public setBackgroundColor(param0: any, param1: number): void;
						public setSelected(param0: com.facebook.react.views.picker.ReactPicker, param1: number): void;
						public setRotation(param0: any, param1: number): void;
						public setEnabled(param0: com.facebook.react.views.picker.ReactPicker, param1: boolean): void;
						public setViewState(param0: any, param1: com.facebook.react.bridge.ReadableMap): void;
						public setEnabled(param0: any, param1: boolean): void;
						public setBorderBottomLeftRadius(param0: any, param1: number): void;
						public setBorderTopRightRadius(param0: any, param1: number): void;
						/** @deprecated */
						public setTranslateY(param0: any, param1: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module picker {
					export class ReactDropdownPickerManager extends com.facebook.react.views.picker.ReactPickerManager implements com.facebook.react.viewmanagers.AndroidDropdownPickerManagerInterface<com.facebook.react.views.picker.ReactPicker>  {
						public static class: java.lang.Class<com.facebook.react.views.picker.ReactDropdownPickerManager>;
						public static REACT_CLASS: string;
						public setBorderRadius(param0: any, param1: number): void;
						public setPrompt(param0: com.facebook.react.views.picker.ReactPicker, param1: string): void;
						public createViewInstance(param0: com.facebook.react.uimanager.ThemedReactContext): any;
						public setTranslateX(param0: any, param1: number): void;
						public setBackgroundColor(param0: com.facebook.react.views.picker.ReactPicker, param1: number): void;
						public createViewInstance(param0: com.facebook.react.uimanager.ThemedReactContext): com.facebook.react.views.picker.ReactPicker;
						public setAccessibilityLiveRegion(param0: any, param1: string): void;
						public getDelegate(): com.facebook.react.uimanager.ViewManagerDelegate<com.facebook.react.views.picker.ReactPicker>;
						public setScaleX(param0: any, param1: number): void;
						/** @deprecated */
						public setTranslateX(param0: any, param1: number): void;
						public getDelegate(): com.facebook.react.uimanager.ViewManagerDelegate<any>;
						public setTestId(param0: any, param1: string): void;
						public setImportantForAccessibility(param0: any, param1: string): void;
						public setAccessibilityRole(param0: any, param1: string): void;
						public setNativeId(param0: any, param1: string): void;
						public setPrompt(param0: any, param1: string): void;
						public setAccessibilityActions(param0: any, param1: com.facebook.react.bridge.ReadableArray): void;
						public constructor();
						public setTranslateY(param0: any, param1: number): void;
						public setAccessibilityHint(param0: any, param1: string): void;
						public setElevation(param0: any, param1: number): void;
						public setOpacity(param0: any, param1: number): void;
						public canOverrideExistingModule(): boolean;
						/** @deprecated */
						public setScaleY(param0: any, param1: number): void;
						/** @deprecated */
						public setRotation(param0: any, param1: number): void;
						public setAccessibilityLabel(param0: any, param1: string): void;
						public initialize(): void;
						public setScaleY(param0: any, param1: number): void;
						public setBorderBottomRightRadius(param0: any, param1: number): void;
						public setColor(param0: any, param1: java.lang.Integer): void;
						public setZIndex(param0: any, param1: number): void;
						public onCatalystInstanceDestroy(): void;
						public setItems(param0: com.facebook.react.views.picker.ReactPicker, param1: com.facebook.react.bridge.ReadableArray): void;
						public getName(): string;
						public setSelected(param0: any, param1: number): void;
						public setBorderTopLeftRadius(param0: any, param1: number): void;
						/** @deprecated */
						public setScaleX(param0: any, param1: number): void;
						public setColor(param0: com.facebook.react.views.picker.ReactPicker, param1: java.lang.Integer): void;
						public setTransform(param0: any, param1: com.facebook.react.bridge.ReadableArray): void;
						public setItems(param0: any, param1: com.facebook.react.bridge.ReadableArray): void;
						public createViewInstance(param0: com.facebook.react.uimanager.ThemedReactContext, param1: com.facebook.react.uimanager.ReactStylesDiffMap, param2: com.facebook.react.uimanager.StateWrapper): any;
						public setRenderToHardwareTexture(param0: any, param1: boolean): void;
						public setBackgroundColor(param0: any, param1: number): void;
						public setSelected(param0: com.facebook.react.views.picker.ReactPicker, param1: number): void;
						public setRotation(param0: any, param1: number): void;
						public setEnabled(param0: com.facebook.react.views.picker.ReactPicker, param1: boolean): void;
						public setViewState(param0: any, param1: com.facebook.react.bridge.ReadableMap): void;
						public setEnabled(param0: any, param1: boolean): void;
						public setBorderBottomLeftRadius(param0: any, param1: number): void;
						public setBorderTopRightRadius(param0: any, param1: number): void;
						/** @deprecated */
						public setTranslateY(param0: any, param1: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module picker {
					export class ReactPicker {
						public static class: java.lang.Class<com.facebook.react.views.picker.ReactPicker>;
						public constructor(param0: globalAndroid.content.Context);
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: number);
						public setOnSelectListener(param0: com.facebook.react.views.picker.ReactPicker.OnSelectListener): void;
						public getMode(): number;
						public getOnSelectListener(): com.facebook.react.views.picker.ReactPicker.OnSelectListener;
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
						public requestLayout(): void;
						public constructor(param0: globalAndroid.content.Context, param1: number);
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
						public onLayout(param0: boolean, param1: number, param2: number, param3: number, param4: number): void;
					}
					export module ReactPicker {
						export class OnSelectListener {
							public static class: java.lang.Class<com.facebook.react.views.picker.ReactPicker.OnSelectListener>;
							/**
							 * Constructs a new instance of the com.facebook.react.views.picker.ReactPicker$OnSelectListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onItemSelected(param0: number): void;
							});
							public constructor();
							public onItemSelected(param0: number): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module picker {
					export class ReactPickerAdapter extends globalAndroid.widget.ArrayAdapter<com.facebook.react.views.picker.ReactPickerItem> {
						public static class: java.lang.Class<com.facebook.react.views.picker.ReactPickerAdapter>;
						public constructor(param0: globalAndroid.content.Context, param1: java.util.List<com.facebook.react.views.picker.ReactPickerItem>);
						public setPrimaryTextColor(param0: java.lang.Integer): void;
						public getBackgroundColor(): java.lang.Integer;
						public getView(param0: number, param1: globalAndroid.view.View, param2: globalAndroid.view.ViewGroup): globalAndroid.view.View;
						public getPrimaryTextColor(): java.lang.Integer;
						public getDropDownView(param0: number, param1: globalAndroid.view.View, param2: globalAndroid.view.ViewGroup): globalAndroid.view.View;
						public setBackgroundColor(param0: java.lang.Integer): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module picker {
					export class ReactPickerItem {
						public static class: java.lang.Class<com.facebook.react.views.picker.ReactPickerItem>;
						public label: string;
						public color: java.lang.Integer;
						public constructor(param0: com.facebook.react.bridge.ReadableMap);
						public static createFromJsArrayMap(param0: com.facebook.react.bridge.ReadableArray): java.util.List<com.facebook.react.views.picker.ReactPickerItem>;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module picker {
					export abstract class ReactPickerManager extends com.facebook.react.uimanager.SimpleViewManager<com.facebook.react.views.picker.ReactPicker> {
						public static class: java.lang.Class<com.facebook.react.views.picker.ReactPickerManager>;
						public setBorderRadius(param0: any, param1: number): void;
						public setPrompt(param0: com.facebook.react.views.picker.ReactPicker, param1: string): void;
						public setBorderBottomRightRadius(param0: any, param1: number): void;
						public setTranslateX(param0: any, param1: number): void;
						public onAfterUpdateTransaction(param0: com.facebook.react.views.picker.ReactPicker): void;
						public onAfterUpdateTransaction(param0: any): void;
						public setZIndex(param0: any, param1: number): void;
						public onCatalystInstanceDestroy(): void;
						public setAccessibilityLiveRegion(param0: any, param1: string): void;
						public setItems(param0: com.facebook.react.views.picker.ReactPicker, param1: com.facebook.react.bridge.ReadableArray): void;
						public receiveCommand(param0: any, param1: string, param2: com.facebook.react.bridge.ReadableArray): void;
						public getName(): string;
						public addEventEmitters(param0: com.facebook.react.uimanager.ThemedReactContext, param1: com.facebook.react.views.picker.ReactPicker): void;
						public setBorderTopLeftRadius(param0: any, param1: number): void;
						/** @deprecated */
						public setScaleX(param0: any, param1: number): void;
						public setScaleX(param0: any, param1: number): void;
						/** @deprecated */
						public setTranslateX(param0: any, param1: number): void;
						public setTestId(param0: any, param1: string): void;
						public setImportantForAccessibility(param0: any, param1: string): void;
						public setColor(param0: com.facebook.react.views.picker.ReactPicker, param1: java.lang.Integer): void;
						public setAccessibilityRole(param0: any, param1: string): void;
						public setNativeId(param0: any, param1: string): void;
						public setTransform(param0: any, param1: com.facebook.react.bridge.ReadableArray): void;
						public setAccessibilityActions(param0: any, param1: com.facebook.react.bridge.ReadableArray): void;
						public constructor();
						/** @deprecated */
						public receiveCommand(param0: any, param1: number, param2: com.facebook.react.bridge.ReadableArray): void;
						public setTranslateY(param0: any, param1: number): void;
						public setAccessibilityHint(param0: any, param1: string): void;
						public setElevation(param0: any, param1: number): void;
						public setOpacity(param0: any, param1: number): void;
						public canOverrideExistingModule(): boolean;
						/** @deprecated */
						public setScaleY(param0: any, param1: number): void;
						public setRenderToHardwareTexture(param0: any, param1: boolean): void;
						public setSelected(param0: com.facebook.react.views.picker.ReactPicker, param1: number): void;
						public setBackgroundColor(param0: any, param1: number): void;
						public receiveCommand(param0: com.facebook.react.views.picker.ReactPicker, param1: string, param2: com.facebook.react.bridge.ReadableArray): void;
						public setRotation(param0: any, param1: number): void;
						/** @deprecated */
						public setRotation(param0: any, param1: number): void;
						public setAccessibilityLabel(param0: any, param1: string): void;
						public addEventEmitters(param0: com.facebook.react.uimanager.ThemedReactContext, param1: any): void;
						public setEnabled(param0: com.facebook.react.views.picker.ReactPicker, param1: boolean): void;
						public setViewState(param0: any, param1: com.facebook.react.bridge.ReadableMap): void;
						public initialize(): void;
						public setBorderBottomLeftRadius(param0: any, param1: number): void;
						public setBorderTopRightRadius(param0: any, param1: number): void;
						/** @deprecated */
						public setTranslateY(param0: any, param1: number): void;
						public setScaleY(param0: any, param1: number): void;
					}
					export module ReactPickerManager {
						export class PickerEventEmitter extends com.facebook.react.views.picker.ReactPicker.OnSelectListener {
							public static class: java.lang.Class<com.facebook.react.views.picker.ReactPickerManager.PickerEventEmitter>;
							public onItemSelected(param0: number): void;
							public constructor(param0: com.facebook.react.views.picker.ReactPicker, param1: com.facebook.react.uimanager.events.EventDispatcher);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module picker {
					export module events {
						export class PickerItemSelectEvent extends com.facebook.react.uimanager.events.Event<com.facebook.react.views.picker.events.PickerItemSelectEvent> {
							public static class: java.lang.Class<com.facebook.react.views.picker.events.PickerItemSelectEvent>;
							public static EVENT_NAME: string;
							public constructor();
							public constructor(param0: number, param1: number);
							public getEventName(): string;
							public constructor(param0: number);
							public dispatch(param0: com.facebook.react.uimanager.events.RCTEventEmitter): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module progressbar {
					export class ProgressBarContainerView {
						public static class: java.lang.Class<com.facebook.react.views.progressbar.ProgressBarContainerView>;
						public setProgress(param0: number): void;
						public setAnimating(param0: boolean): void;
						public apply(): void;
						public constructor(param0: globalAndroid.content.Context);
						public setColor(param0: java.lang.Integer): void;
						public setIndeterminate(param0: boolean): void;
						public setStyle(param0: string): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module progressbar {
					export class ProgressBarShadowNode extends com.facebook.react.uimanager.LayoutShadowNode implements com.facebook.yoga.YogaMeasureFunction {
						public static class: java.lang.Class<com.facebook.react.views.progressbar.ProgressBarShadowNode>;
						public getNativeChildCount(): number;
						public getViewClass(): string;
						public getPadding(param0: number): number;
						public getStyle(): string;
						public hasUpdates(): boolean;
						public isDescendantOf(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): boolean;
						public setAlignContent(param0: com.facebook.yoga.YogaAlign): void;
						public hasUnseenUpdates(): boolean;
						public updateProperties(param0: com.facebook.react.uimanager.ReactStylesDiffMap): void;
						public setAlignSelf(param0: com.facebook.yoga.YogaAlign): void;
						public getLayoutParent(): any;
						public setRootTag(param0: number): void;
						public markLayoutSeen(): void;
						public shouldNotifyOnLayout(): boolean;
						public getParent(): any;
						public getLayoutHeight(): number;
						public markUpdateSeen(): void;
						public setPadding(param0: number, param1: number): void;
						public addChildAt(param0: any, param1: number): void;
						public constructor();
						public getStyleHeight(): com.facebook.yoga.YogaValue;
						public addNativeChildAt(param0: com.facebook.react.uimanager.ReactShadowNodeImpl, param1: number): void;
						public setIsLayoutOnly(param0: boolean): void;
						public setOverflow(param0: string): void;
						public calculateLayout(): void;
						public setFlexBasisPercent(param0: number): void;
						public hasNewLayout(): boolean;
						public isDescendantOf(param0: any): boolean;
						public getNativeOffsetForChild(param0: any): number;
						public onCollectExtraUpdates(param0: com.facebook.react.uimanager.UIViewOperationQueue): void;
						public setPosition(param0: string): void;
						public setPosition(param0: number, param1: number): void;
						public setStyleWidth(param0: number): void;
						public getScreenY(): number;
						public isVirtualAnchor(): boolean;
						public setStyle(param0: string): void;
						public isMeasureDefined(): boolean;
						public setStyleMaxWidthPercent(param0: number): void;
						public getStyleWidth(): com.facebook.yoga.YogaValue;
						public setAlignItems(param0: string): void;
						public setFlexWrap(param0: string): void;
						public setDisplay(param0: string): void;
						public setDisplay(param0: com.facebook.yoga.YogaDisplay): void;
						public getLayoutDirection(): com.facebook.yoga.YogaDirection;
						public setFlex(param0: number): void;
						public getHeightMeasureSpec(): java.lang.Integer;
						public calculateLayoutOnChildren(): java.lang.Iterable<any>;
						public getRootTag(): number;
						public setAlignContent(param0: string): void;
						public getTotalNativeChildren(): number;
						public indexOfNativeChild(param0: any): number;
						public setFlexBasis(param0: com.facebook.react.bridge.Dynamic): void;
						public getReactTag(): number;
						public getChildCount(): number;
						public getNativeParent(): com.facebook.react.uimanager.ReactShadowNodeImpl;
						public getNativeKind(): com.facebook.react.uimanager.NativeKind;
						public setFlexWrap(param0: com.facebook.yoga.YogaWrap): void;
						public setFlexDirection(param0: string): void;
						public isDirty(): boolean;
						public calculateLayout(param0: number, param1: number): void;
						public setPositionType(param0: com.facebook.yoga.YogaPositionType): void;
						public removeChildAt(param0: number): com.facebook.react.uimanager.ReactShadowNodeImpl;
						public getNativeOffsetForChild(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): number;
						public setMargin(param0: number, param1: number): void;
						public getStylePadding(param0: number): com.facebook.yoga.YogaValue;
						public dispatchUpdates(param0: number, param1: number, param2: com.facebook.react.uimanager.UIViewOperationQueue, param3: com.facebook.react.uimanager.NativeViewHierarchyOptimizer): boolean;
						public setStyleHeightPercent(param0: number): void;
						public setStyleMinHeight(param0: number): void;
						public setDefaultPadding(param0: number, param1: number): void;
						public setPositionPercent(param0: number, param1: number): void;
						public setStyleMinWidthPercent(param0: number): void;
						public setStyleHeight(param0: number): void;
						public setPaddingPercent(param0: number, param1: number): void;
						public setStyleWidthAuto(): void;
						public setAlignItems(param0: com.facebook.yoga.YogaAlign): void;
						public removeAllNativeChildren(): void;
						public setStyleMinHeightPercent(param0: number): void;
						public setFlexDirection(param0: com.facebook.yoga.YogaFlexDirection): void;
						public setOverflow(param0: com.facebook.yoga.YogaOverflow): void;
						public getLayoutY(): number;
						public removeNativeChildAt(param0: number): com.facebook.react.uimanager.ReactShadowNodeImpl;
						public setJustifyContent(param0: string): void;
						public setStyleMaxHeightPercent(param0: number): void;
						public setJustifyContent(param0: com.facebook.yoga.YogaJustify): void;
						public setStyleMaxHeight(param0: number): void;
						public setAlignSelf(param0: string): void;
						public removeNativeChildAt(param0: number): any;
						public setMarginPercent(param0: number, param1: number): void;
						public getChildAt(param0: number): any;
						public setReactTag(param0: number): void;
						public setMeasureSpecs(param0: number, param1: number): void;
						public measure(param0: com.facebook.yoga.YogaNode, param1: number, param2: com.facebook.yoga.YogaMeasureMode, param3: number, param4: com.facebook.yoga.YogaMeasureMode): number;
						public dirty(): void;
						public setThemedContext(param0: com.facebook.react.uimanager.ThemedReactContext): void;
						public onBeforeLayout(param0: com.facebook.react.uimanager.NativeViewHierarchyOptimizer): void;
						public getWidthMeasureSpec(): java.lang.Integer;
						public removeAndDisposeAllChildren(): void;
						public hoistNativeChildren(): boolean;
						public dispose(): void;
						public setFlexBasisAuto(): void;
						public indexOf(param0: any): number;
						public isLayoutOnly(): boolean;
						public onAfterUpdateTransaction(): void;
						public setMarginAuto(param0: number): void;
						public setShouldNotifyOnLayout(param0: boolean): void;
						public markUpdated(): void;
						public setLayoutParent(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): void;
						public getScreenHeight(): number;
						public setStyleAspectRatio(param0: number): void;
						public addChildAt(param0: com.facebook.react.uimanager.ReactShadowNodeImpl, param1: number): void;
						public addNativeChildAt(param0: any, param1: number): void;
						public getChildAt(param0: number): com.facebook.react.uimanager.ReactShadowNodeImpl;
						public getThemedContext(): com.facebook.react.uimanager.ThemedReactContext;
						public getScreenX(): number;
						public getLayoutWidth(): number;
						public isYogaLeafNode(): boolean;
						public setStyleMaxWidth(param0: number): void;
						public setStyleWidthPercent(param0: number): void;
						public setStyleHeightAuto(): void;
						public getScreenWidth(): number;
						public getLayoutX(): number;
						public setStyleMinWidth(param0: number): void;
						public setBaselineFunction(param0: com.facebook.yoga.YogaBaselineFunction): void;
						public setFlexGrow(param0: number): void;
						public removeChildAt(param0: number): any;
						public setLayoutDirection(param0: com.facebook.yoga.YogaDirection): void;
						public getParent(): com.facebook.react.uimanager.ReactShadowNodeImpl;
						public getLayoutParent(): com.facebook.react.uimanager.ReactShadowNodeImpl;
						public indexOfNativeChild(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): number;
						public isVirtual(): boolean;
						public setMeasureFunction(param0: com.facebook.yoga.YogaMeasureFunction): void;
						public setViewClassName(param0: string): void;
						public setLocalData(param0: any): void;
						public setLayoutParent(param0: any): void;
						public setFlexShrink(param0: number): void;
						public getHierarchyInfo(): string;
						public setFlexBasis(param0: number): void;
						public getNativeParent(): any;
						public indexOf(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): number;
						public setBorder(param0: number, param1: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module progressbar {
					export class ReactProgressBarViewManager extends com.facebook.react.uimanager.BaseViewManager<com.facebook.react.views.progressbar.ProgressBarContainerView,com.facebook.react.views.progressbar.ProgressBarShadowNode> implements com.facebook.react.viewmanagers.AndroidProgressBarManagerInterface<com.facebook.react.views.progressbar.ProgressBarContainerView>  {
						public static class: java.lang.Class<com.facebook.react.views.progressbar.ReactProgressBarViewManager>;
						public static REACT_CLASS: string;
						public setBorderRadius(param0: any, param1: number): void;
						public createViewInstance(param0: com.facebook.react.uimanager.ThemedReactContext): any;
						public updateExtraData(param0: any, param1: any): void;
						public setTranslateX(param0: any, param1: number): void;
						public setAnimating(param0: com.facebook.react.views.progressbar.ProgressBarContainerView, param1: boolean): void;
						public onAfterUpdateTransaction(param0: any): void;
						public static createProgressBar(param0: globalAndroid.content.Context, param1: number): globalAndroid.widget.ProgressBar;
						public getDelegate(): com.facebook.react.uimanager.ViewManagerDelegate<com.facebook.react.views.progressbar.ProgressBarContainerView>;
						public setAccessibilityLiveRegion(param0: any, param1: string): void;
						public setIndeterminate(param0: any, param1: boolean): void;
						public createShadowNodeInstance(): any;
						public getShadowNodeClass(): java.lang.Class<any>;
						public setScaleX(param0: any, param1: number): void;
						/** @deprecated */
						public setTranslateX(param0: any, param1: number): void;
						public setProgress(param0: com.facebook.react.views.progressbar.ProgressBarContainerView, param1: number): void;
						public getDelegate(): com.facebook.react.uimanager.ViewManagerDelegate<any>;
						public setTestId(param0: any, param1: string): void;
						public setImportantForAccessibility(param0: any, param1: string): void;
						public setAccessibilityRole(param0: any, param1: string): void;
						public setNativeId(param0: any, param1: string): void;
						public onAfterUpdateTransaction(param0: com.facebook.react.views.progressbar.ProgressBarContainerView): void;
						public setAccessibilityActions(param0: any, param1: com.facebook.react.bridge.ReadableArray): void;
						public createShadowNodeInstance(): com.facebook.react.views.progressbar.ProgressBarShadowNode;
						public constructor();
						public getShadowNodeClass(): java.lang.Class<com.facebook.react.views.progressbar.ProgressBarShadowNode>;
						public setTranslateY(param0: any, param1: number): void;
						public setAccessibilityHint(param0: any, param1: string): void;
						public setElevation(param0: any, param1: number): void;
						public setOpacity(param0: any, param1: number): void;
						public canOverrideExistingModule(): boolean;
						/** @deprecated */
						public setScaleY(param0: any, param1: number): void;
						public setColor(param0: com.facebook.react.views.progressbar.ProgressBarContainerView, param1: java.lang.Integer): void;
						/** @deprecated */
						public setRotation(param0: any, param1: number): void;
						public setAccessibilityLabel(param0: any, param1: string): void;
						public initialize(): void;
						public setStyleAttr(param0: any, param1: string): void;
						public setIndeterminate(param0: com.facebook.react.views.progressbar.ProgressBarContainerView, param1: boolean): void;
						public createShadowNodeInstance(param0: com.facebook.react.bridge.ReactApplicationContext): any;
						public setScaleY(param0: any, param1: number): void;
						public setBorderBottomRightRadius(param0: any, param1: number): void;
						public setColor(param0: any, param1: java.lang.Integer): void;
						public setProgress(param0: any, param1: number): void;
						public setZIndex(param0: any, param1: number): void;
						public onCatalystInstanceDestroy(): void;
						public getName(): string;
						public setBorderTopLeftRadius(param0: any, param1: number): void;
						/** @deprecated */
						public setScaleX(param0: any, param1: number): void;
						public setStyleAttr(param0: com.facebook.react.views.progressbar.ProgressBarContainerView, param1: string): void;
						public setTestID(param0: com.facebook.react.views.progressbar.ProgressBarContainerView, param1: string): void;
						public setAnimating(param0: any, param1: boolean): void;
						public setTypeAttr(param0: any, param1: string): void;
						public setTransform(param0: any, param1: com.facebook.react.bridge.ReadableArray): void;
						public createViewInstance(param0: com.facebook.react.uimanager.ThemedReactContext): com.facebook.react.views.progressbar.ProgressBarContainerView;
						public updateExtraData(param0: com.facebook.react.views.progressbar.ProgressBarContainerView, param1: any): void;
						public createViewInstance(param0: com.facebook.react.uimanager.ThemedReactContext, param1: com.facebook.react.uimanager.ReactStylesDiffMap, param2: com.facebook.react.uimanager.StateWrapper): any;
						public setTestID(param0: any, param1: string): void;
						public setRenderToHardwareTexture(param0: any, param1: boolean): void;
						public setBackgroundColor(param0: any, param1: number): void;
						public setRotation(param0: any, param1: number): void;
						public setViewState(param0: any, param1: com.facebook.react.bridge.ReadableMap): void;
						public setTypeAttr(param0: com.facebook.react.views.progressbar.ProgressBarContainerView, param1: string): void;
						public setBorderBottomLeftRadius(param0: any, param1: number): void;
						public setBorderTopRightRadius(param0: any, param1: number): void;
						/** @deprecated */
						public setTranslateY(param0: any, param1: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module scroll {
					export class FpsListener {
						public static class: java.lang.Class<com.facebook.react.views.scroll.FpsListener>;
						/**
						 * Constructs a new instance of the com.facebook.react.views.scroll.FpsListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							enable(param0: string): void;
							disable(param0: string): void;
							isEnabled(): boolean;
						});
						public constructor();
						public disable(param0: string): void;
						public enable(param0: string): void;
						public isEnabled(): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module scroll {
					export class OnScrollDispatchHelper {
						public static class: java.lang.Class<com.facebook.react.views.scroll.OnScrollDispatchHelper>;
						public getYFlingVelocity(): number;
						public constructor();
						public onScrollChanged(param0: number, param1: number): boolean;
						public getXFlingVelocity(): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module scroll {
					export class ReactHorizontalScrollContainerView extends com.facebook.react.views.view.ReactViewGroup {
						public static class: java.lang.Class<com.facebook.react.views.scroll.ReactHorizontalScrollContainerView>;
						public constructor(param0: globalAndroid.content.Context);
						public getZIndexMappedChildIndex(param0: number): number;
						public updateClippingRect(): void;
						public getClippingRect(param0: globalAndroid.graphics.Rect): void;
						public setRemoveClippedSubviews(param0: boolean): void;
						public updateDrawingOrder(): void;
						public getHitSlopRect(): globalAndroid.graphics.Rect;
						public getRemoveClippedSubviews(): boolean;
						public setOnInterceptTouchEventListener(param0: com.facebook.react.touch.OnInterceptTouchEventListener): void;
						public getPointerEvents(): com.facebook.react.uimanager.PointerEvents;
						public onLayout(param0: boolean, param1: number, param2: number, param3: number, param4: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module scroll {
					export class ReactHorizontalScrollContainerViewManager extends com.facebook.react.views.view.ReactClippingViewManager<com.facebook.react.views.scroll.ReactHorizontalScrollContainerView> {
						public static class: java.lang.Class<com.facebook.react.views.scroll.ReactHorizontalScrollContainerViewManager>;
						public static REACT_CLASS: string;
						public setBorderRadius(param0: any, param1: number): void;
						public setBorderBottomRightRadius(param0: any, param1: number): void;
						public createViewInstance(param0: com.facebook.react.uimanager.ThemedReactContext): any;
						public setTranslateX(param0: any, param1: number): void;
						public setZIndex(param0: any, param1: number): void;
						public onCatalystInstanceDestroy(): void;
						public setAccessibilityLiveRegion(param0: any, param1: string): void;
						public getName(): string;
						public setBorderTopLeftRadius(param0: any, param1: number): void;
						/** @deprecated */
						public setScaleX(param0: any, param1: number): void;
						public setScaleX(param0: any, param1: number): void;
						/** @deprecated */
						public setTranslateX(param0: any, param1: number): void;
						public setTestId(param0: any, param1: string): void;
						public setImportantForAccessibility(param0: any, param1: string): void;
						public setAccessibilityRole(param0: any, param1: string): void;
						public setNativeId(param0: any, param1: string): void;
						public setTransform(param0: any, param1: com.facebook.react.bridge.ReadableArray): void;
						public setAccessibilityActions(param0: any, param1: com.facebook.react.bridge.ReadableArray): void;
						public constructor();
						public createViewInstance(param0: com.facebook.react.uimanager.ThemedReactContext): com.facebook.react.views.scroll.ReactHorizontalScrollContainerView;
						public setTranslateY(param0: any, param1: number): void;
						public setAccessibilityHint(param0: any, param1: string): void;
						public setElevation(param0: any, param1: number): void;
						public setOpacity(param0: any, param1: number): void;
						public canOverrideExistingModule(): boolean;
						public createViewInstance(param0: com.facebook.react.uimanager.ThemedReactContext, param1: com.facebook.react.uimanager.ReactStylesDiffMap, param2: com.facebook.react.uimanager.StateWrapper): any;
						/** @deprecated */
						public setScaleY(param0: any, param1: number): void;
						public setRenderToHardwareTexture(param0: any, param1: boolean): void;
						public setBackgroundColor(param0: any, param1: number): void;
						public setRotation(param0: any, param1: number): void;
						/** @deprecated */
						public setRotation(param0: any, param1: number): void;
						public setAccessibilityLabel(param0: any, param1: string): void;
						public setViewState(param0: any, param1: com.facebook.react.bridge.ReadableMap): void;
						public initialize(): void;
						public setBorderBottomLeftRadius(param0: any, param1: number): void;
						public setBorderTopRightRadius(param0: any, param1: number): void;
						/** @deprecated */
						public setTranslateY(param0: any, param1: number): void;
						public setScaleY(param0: any, param1: number): void;
						public needsCustomLayoutForChildren(): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module scroll {
					export class ReactHorizontalScrollView implements com.facebook.react.uimanager.ReactClippingViewGroup {
						public static class: java.lang.Class<com.facebook.react.views.scroll.ReactHorizontalScrollView>;
						public reactScrollTo(param0: number, param1: number): void;
						public setPagingEnabled(param0: boolean): void;
						public constructor(param0: globalAndroid.content.Context);
						public updateClippingRect(): void;
						public setDisableIntervalMomentum(param0: boolean): void;
						public setBorderRadius(param0: number, param1: number): void;
						public updateState(param0: com.facebook.react.uimanager.StateWrapper): void;
						public setSnapToStart(param0: boolean): void;
						public onAttachedToWindow(): void;
						public setRemoveClippedSubviews(param0: boolean): void;
						public setSnapToEnd(param0: boolean): void;
						public setEndFillColor(param0: number): void;
						public requestChildFocus(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
						public fling(param0: number): void;
						public getRemoveClippedSubviews(): boolean;
						public onLayout(param0: boolean, param1: number, param2: number, param3: number, param4: number): void;
						public onSizeChanged(param0: number, param1: number, param2: number, param3: number): void;
						public setSnapInterval(param0: number): void;
						public onInterceptTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
						public setBackgroundColor(param0: number): void;
						public onMeasure(param0: number, param1: number): void;
						public setBorderColor(param0: number, param1: number, param2: number): void;
						public onTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
						public setBorderStyle(param0: string): void;
						public arrowScroll(param0: number): boolean;
						public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point): boolean;
						public setOverflow(param0: string): void;
						public getClippingRect(param0: globalAndroid.graphics.Rect): void;
						public setScrollEnabled(param0: boolean): void;
						public constructor(param0: globalAndroid.content.Context, param1: com.facebook.react.views.scroll.FpsListener);
						public setSendMomentumEvents(param0: boolean): void;
						public onScrollChanged(param0: number, param1: number, param2: number, param3: number): void;
						public reactSmoothScrollTo(param0: number, param1: number): void;
						public setSnapOffsets(param0: java.util.List<java.lang.Integer>): void;
						public onOverScrolled(param0: number, param1: number, param2: boolean, param3: boolean): void;
						public setBorderRadius(param0: number): void;
						public draw(param0: globalAndroid.graphics.Canvas): void;
						public flashScrollIndicators(): void;
						public onDraw(param0: globalAndroid.graphics.Canvas): void;
						public setBorderWidth(param0: number, param1: number): void;
						public setScrollPerfTag(param0: string): void;
						public setDecelerationRate(param0: number): void;
						public pageScroll(param0: number): boolean;
						public addFocusables(param0: java.util.ArrayList<globalAndroid.view.View>, param1: number, param2: number): void;
						public executeKeyEvent(param0: globalAndroid.view.KeyEvent): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module scroll {
					export class ReactHorizontalScrollViewManager extends com.facebook.react.uimanager.ViewGroupManager<com.facebook.react.views.scroll.ReactHorizontalScrollView> implements com.facebook.react.views.scroll.ReactScrollViewCommandHelper.ScrollCommandHandler<com.facebook.react.views.scroll.ReactHorizontalScrollView>  {
						public static class: java.lang.Class<com.facebook.react.views.scroll.ReactHorizontalScrollViewManager>;
						public static REACT_CLASS: string;
						public setBorderRadius(param0: any, param1: number): void;
						public createViewInstance(param0: com.facebook.react.uimanager.ThemedReactContext): any;
						public setTranslateX(param0: any, param1: number): void;
						public setSnapToEnd(param0: com.facebook.react.views.scroll.ReactHorizontalScrollView, param1: boolean): void;
						public setSnapToOffsets(param0: com.facebook.react.views.scroll.ReactHorizontalScrollView, param1: com.facebook.react.bridge.ReadableArray): void;
						public receiveCommand(param0: com.facebook.react.views.scroll.ReactHorizontalScrollView, param1: string, param2: com.facebook.react.bridge.ReadableArray): void;
						public setSnapToStart(param0: com.facebook.react.views.scroll.ReactHorizontalScrollView, param1: boolean): void;
						public setAccessibilityLiveRegion(param0: any, param1: string): void;
						public setDecelerationRate(param0: com.facebook.react.views.scroll.ReactHorizontalScrollView, param1: number): void;
						public setBorderRadius(param0: com.facebook.react.views.scroll.ReactHorizontalScrollView, param1: number, param2: number): void;
						public setScaleX(param0: any, param1: number): void;
						/** @deprecated */
						public setTranslateX(param0: any, param1: number): void;
						public flashScrollIndicators(param0: any): void;
						public setSendMomentumEvents(param0: com.facebook.react.views.scroll.ReactHorizontalScrollView, param1: boolean): void;
						public setShowsHorizontalScrollIndicator(param0: com.facebook.react.views.scroll.ReactHorizontalScrollView, param1: boolean): void;
						public setTestId(param0: any, param1: string): void;
						public setScrollPerfTag(param0: com.facebook.react.views.scroll.ReactHorizontalScrollView, param1: string): void;
						public setImportantForAccessibility(param0: any, param1: string): void;
						public setAccessibilityRole(param0: any, param1: string): void;
						public setNativeId(param0: any, param1: string): void;
						public setAccessibilityActions(param0: any, param1: com.facebook.react.bridge.ReadableArray): void;
						public createViewInstance(param0: com.facebook.react.uimanager.ThemedReactContext): com.facebook.react.views.scroll.ReactHorizontalScrollView;
						public setBorderStyle(param0: com.facebook.react.views.scroll.ReactHorizontalScrollView, param1: string): void;
						public constructor();
						/** @deprecated */
						public receiveCommand(param0: any, param1: number, param2: com.facebook.react.bridge.ReadableArray): void;
						public setTranslateY(param0: any, param1: number): void;
						public setAccessibilityHint(param0: any, param1: string): void;
						public setElevation(param0: any, param1: number): void;
						public setOpacity(param0: any, param1: number): void;
						public canOverrideExistingModule(): boolean;
						public setBottomFillColor(param0: com.facebook.react.views.scroll.ReactHorizontalScrollView, param1: number): void;
						public setRemoveClippedSubviews(param0: com.facebook.react.views.scroll.ReactHorizontalScrollView, param1: boolean): void;
						public setBorderColor(param0: com.facebook.react.views.scroll.ReactHorizontalScrollView, param1: number, param2: java.lang.Integer): void;
						/** @deprecated */
						public setScaleY(param0: any, param1: number): void;
						public updateState(param0: any, param1: com.facebook.react.uimanager.ReactStylesDiffMap, param2: com.facebook.react.uimanager.StateWrapper): any;
						public setNestedScrollEnabled(param0: com.facebook.react.views.scroll.ReactHorizontalScrollView, param1: boolean): void;
						/** @deprecated */
						public setRotation(param0: any, param1: number): void;
						public setAccessibilityLabel(param0: any, param1: string): void;
						public receiveCommand(param0: com.facebook.react.views.scroll.ReactHorizontalScrollView, param1: number, param2: com.facebook.react.bridge.ReadableArray): void;
						public initialize(): void;
						public setFadingEdgeLength(param0: com.facebook.react.views.scroll.ReactHorizontalScrollView, param1: number): void;
						public scrollToEnd(param0: com.facebook.react.views.scroll.ReactHorizontalScrollView, param1: com.facebook.react.views.scroll.ReactScrollViewCommandHelper.ScrollToEndCommandData): void;
						public scrollTo(param0: any, param1: com.facebook.react.views.scroll.ReactScrollViewCommandHelper.ScrollToCommandData): void;
						public setScaleY(param0: any, param1: number): void;
						public needsCustomLayoutForChildren(): boolean;
						public setPersistentScrollbar(param0: com.facebook.react.views.scroll.ReactHorizontalScrollView, param1: boolean): void;
						public scrollTo(param0: com.facebook.react.views.scroll.ReactHorizontalScrollView, param1: com.facebook.react.views.scroll.ReactScrollViewCommandHelper.ScrollToCommandData): void;
						public setBorderBottomRightRadius(param0: any, param1: number): void;
						public setScrollEnabled(param0: com.facebook.react.views.scroll.ReactHorizontalScrollView, param1: boolean): void;
						public setZIndex(param0: any, param1: number): void;
						public setSnapToInterval(param0: com.facebook.react.views.scroll.ReactHorizontalScrollView, param1: number): void;
						public onCatalystInstanceDestroy(): void;
						public setOverScrollMode(param0: com.facebook.react.views.scroll.ReactHorizontalScrollView, param1: string): void;
						public getName(): string;
						public receiveCommand(param0: any, param1: string, param2: com.facebook.react.bridge.ReadableArray): void;
						public setBorderTopLeftRadius(param0: any, param1: number): void;
						/** @deprecated */
						public setScaleX(param0: any, param1: number): void;
						public setDisableIntervalMomentum(param0: com.facebook.react.views.scroll.ReactHorizontalScrollView, param1: boolean): void;
						public scrollToEnd(param0: any, param1: com.facebook.react.views.scroll.ReactScrollViewCommandHelper.ScrollToEndCommandData): void;
						public setContentOffset(param0: com.facebook.react.views.scroll.ReactHorizontalScrollView, param1: com.facebook.react.bridge.ReadableMap): void;
						public setBorderWidth(param0: com.facebook.react.views.scroll.ReactHorizontalScrollView, param1: number, param2: number): void;
						public setOverflow(param0: com.facebook.react.views.scroll.ReactHorizontalScrollView, param1: string): void;
						public setTransform(param0: any, param1: com.facebook.react.bridge.ReadableArray): void;
						public constructor(param0: com.facebook.react.views.scroll.FpsListener);
						public updateState(param0: com.facebook.react.views.scroll.ReactHorizontalScrollView, param1: com.facebook.react.uimanager.ReactStylesDiffMap, param2: com.facebook.react.uimanager.StateWrapper): any;
						public createViewInstance(param0: com.facebook.react.uimanager.ThemedReactContext, param1: com.facebook.react.uimanager.ReactStylesDiffMap, param2: com.facebook.react.uimanager.StateWrapper): any;
						public setRenderToHardwareTexture(param0: any, param1: boolean): void;
						public setBackgroundColor(param0: any, param1: number): void;
						public flashScrollIndicators(param0: com.facebook.react.views.scroll.ReactHorizontalScrollView): void;
						public setRotation(param0: any, param1: number): void;
						public setViewState(param0: any, param1: com.facebook.react.bridge.ReadableMap): void;
						public setBorderBottomLeftRadius(param0: any, param1: number): void;
						public setPagingEnabled(param0: com.facebook.react.views.scroll.ReactHorizontalScrollView, param1: boolean): void;
						public setBorderTopRightRadius(param0: any, param1: number): void;
						/** @deprecated */
						public setTranslateY(param0: any, param1: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module scroll {
					export class ReactScrollView implements com.facebook.react.uimanager.ReactClippingViewGroup {
						public static class: java.lang.Class<com.facebook.react.views.scroll.ReactScrollView>;
						public reactScrollTo(param0: number, param1: number): void;
						public setPagingEnabled(param0: boolean): void;
						public updateClippingRect(): void;
						public setDisableIntervalMomentum(param0: boolean): void;
						public setBorderRadius(param0: number, param1: number): void;
						public updateState(param0: com.facebook.react.uimanager.StateWrapper): void;
						public setSnapToStart(param0: boolean): void;
						public onAttachedToWindow(): void;
						public setSnapToEnd(param0: boolean): void;
						public setRemoveClippedSubviews(param0: boolean): void;
						public setEndFillColor(param0: number): void;
						public requestChildFocus(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
						public fling(param0: number): void;
						public constructor(param0: com.facebook.react.bridge.ReactContext, param1: com.facebook.react.views.scroll.FpsListener);
						public getRemoveClippedSubviews(): boolean;
						public onLayout(param0: boolean, param1: number, param2: number, param3: number, param4: number): void;
						public onSizeChanged(param0: number, param1: number, param2: number, param3: number): void;
						public setSnapInterval(param0: number): void;
						public onLayoutChange(param0: globalAndroid.view.View, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: number, param8: number): void;
						public onInterceptTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
						public setBackgroundColor(param0: number): void;
						public onMeasure(param0: number, param1: number): void;
						public setBorderColor(param0: number, param1: number, param2: number): void;
						public onTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
						public setBorderStyle(param0: string): void;
						public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point): boolean;
						public onChildViewRemoved(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
						public setOverflow(param0: string): void;
						public getClippingRect(param0: globalAndroid.graphics.Rect): void;
						public onChildViewAdded(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
						public setScrollEnabled(param0: boolean): void;
						public constructor(param0: com.facebook.react.bridge.ReactContext);
						public setSendMomentumEvents(param0: boolean): void;
						public onScrollChanged(param0: number, param1: number, param2: number, param3: number): void;
						public reactSmoothScrollTo(param0: number, param1: number): void;
						public setSnapOffsets(param0: java.util.List<java.lang.Integer>): void;
						public onOverScrolled(param0: number, param1: number, param2: boolean, param3: boolean): void;
						public setBorderRadius(param0: number): void;
						public draw(param0: globalAndroid.graphics.Canvas): void;
						public flashScrollIndicators(): void;
						public setBorderWidth(param0: number, param1: number): void;
						public setScrollPerfTag(param0: string): void;
						public setDecelerationRate(param0: number): void;
						public executeKeyEvent(param0: globalAndroid.view.KeyEvent): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module scroll {
					export class ReactScrollViewCommandHelper {
						public static class: java.lang.Class<com.facebook.react.views.scroll.ReactScrollViewCommandHelper>;
						public static COMMAND_SCROLL_TO: number;
						public static COMMAND_SCROLL_TO_END: number;
						public static COMMAND_FLASH_SCROLL_INDICATORS: number;
						public static receiveCommand(param0: com.facebook.react.views.scroll.ReactScrollViewCommandHelper.ScrollCommandHandler<any>, param1: any, param2: number, param3: com.facebook.react.bridge.ReadableArray): void;
						public static getCommandsMap(): java.util.Map<string,java.lang.Integer>;
						public constructor();
						public static receiveCommand(param0: com.facebook.react.views.scroll.ReactScrollViewCommandHelper.ScrollCommandHandler<any>, param1: any, param2: string, param3: com.facebook.react.bridge.ReadableArray): void;
					}
					export module ReactScrollViewCommandHelper {
						export class ScrollCommandHandler<T>  extends java.lang.Object {
							public static class: java.lang.Class<com.facebook.react.views.scroll.ReactScrollViewCommandHelper.ScrollCommandHandler<any>>;
							/**
							 * Constructs a new instance of the com.facebook.react.views.scroll.ReactScrollViewCommandHelper$ScrollCommandHandler interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								scrollTo(param0: T, param1: com.facebook.react.views.scroll.ReactScrollViewCommandHelper.ScrollToCommandData): void;
								scrollToEnd(param0: T, param1: com.facebook.react.views.scroll.ReactScrollViewCommandHelper.ScrollToEndCommandData): void;
								flashScrollIndicators(param0: T): void;
							});
							public constructor();
							public flashScrollIndicators(param0: T): void;
							public scrollTo(param0: T, param1: com.facebook.react.views.scroll.ReactScrollViewCommandHelper.ScrollToCommandData): void;
							public scrollToEnd(param0: T, param1: com.facebook.react.views.scroll.ReactScrollViewCommandHelper.ScrollToEndCommandData): void;
						}
						export class ScrollToCommandData {
							public static class: java.lang.Class<com.facebook.react.views.scroll.ReactScrollViewCommandHelper.ScrollToCommandData>;
							public mDestX: number;
							public mDestY: number;
							public mAnimated: boolean;
						}
						export class ScrollToEndCommandData {
							public static class: java.lang.Class<com.facebook.react.views.scroll.ReactScrollViewCommandHelper.ScrollToEndCommandData>;
							public mAnimated: boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module scroll {
					export class ReactScrollViewHelper {
						public static class: java.lang.Class<com.facebook.react.views.scroll.ReactScrollViewHelper>;
						public static MOMENTUM_DELAY: number;
						public static OVER_SCROLL_ALWAYS: string;
						public static AUTO: string;
						public static OVER_SCROLL_NEVER: string;
						public constructor();
						public static emitScrollEndDragEvent(param0: globalAndroid.view.ViewGroup, param1: number, param2: number): void;
						public static parseOverScrollMode(param0: string): number;
						public static emitScrollBeginDragEvent(param0: globalAndroid.view.ViewGroup): void;
						public static emitScrollMomentumBeginEvent(param0: globalAndroid.view.ViewGroup, param1: number, param2: number): void;
						public static emitScrollMomentumEndEvent(param0: globalAndroid.view.ViewGroup): void;
						public static emitScrollEvent(param0: globalAndroid.view.ViewGroup, param1: number, param2: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module scroll {
					export class ReactScrollViewManager extends com.facebook.react.uimanager.ViewGroupManager<com.facebook.react.views.scroll.ReactScrollView> implements com.facebook.react.views.scroll.ReactScrollViewCommandHelper.ScrollCommandHandler<com.facebook.react.views.scroll.ReactScrollView>  {
						public static class: java.lang.Class<com.facebook.react.views.scroll.ReactScrollViewManager>;
						public static REACT_CLASS: string;
						public setBorderRadius(param0: any, param1: number): void;
						public createViewInstance(param0: com.facebook.react.uimanager.ThemedReactContext): any;
						public setTranslateX(param0: any, param1: number): void;
						public updateState(param0: com.facebook.react.views.scroll.ReactScrollView, param1: com.facebook.react.uimanager.ReactStylesDiffMap, param2: com.facebook.react.uimanager.StateWrapper): any;
						public setOverScrollMode(param0: com.facebook.react.views.scroll.ReactScrollView, param1: string): void;
						public setOverflow(param0: com.facebook.react.views.scroll.ReactScrollView, param1: string): void;
						public setDecelerationRate(param0: com.facebook.react.views.scroll.ReactScrollView, param1: number): void;
						public setAccessibilityLiveRegion(param0: any, param1: string): void;
						public getExportedCustomDirectEventTypeConstants(): java.util.Map<string,any>;
						public setScaleX(param0: any, param1: number): void;
						/** @deprecated */
						public setTranslateX(param0: any, param1: number): void;
						public flashScrollIndicators(param0: any): void;
						public createViewInstance(param0: com.facebook.react.uimanager.ThemedReactContext): com.facebook.react.views.scroll.ReactScrollView;
						public setTestId(param0: any, param1: string): void;
						public setImportantForAccessibility(param0: any, param1: string): void;
						public setSnapToOffsets(param0: com.facebook.react.views.scroll.ReactScrollView, param1: com.facebook.react.bridge.ReadableArray): void;
						public setAccessibilityRole(param0: any, param1: string): void;
						public setNativeId(param0: any, param1: string): void;
						public setBorderColor(param0: com.facebook.react.views.scroll.ReactScrollView, param1: number, param2: java.lang.Integer): void;
						public setAccessibilityActions(param0: any, param1: com.facebook.react.bridge.ReadableArray): void;
						public constructor();
						/** @deprecated */
						public receiveCommand(param0: any, param1: number, param2: com.facebook.react.bridge.ReadableArray): void;
						public flashScrollIndicators(param0: com.facebook.react.views.scroll.ReactScrollView): void;
						public setTranslateY(param0: any, param1: number): void;
						public setAccessibilityHint(param0: any, param1: string): void;
						public setElevation(param0: any, param1: number): void;
						public setOpacity(param0: any, param1: number): void;
						public canOverrideExistingModule(): boolean;
						/** @deprecated */
						public setScaleY(param0: any, param1: number): void;
						public updateState(param0: any, param1: com.facebook.react.uimanager.ReactStylesDiffMap, param2: com.facebook.react.uimanager.StateWrapper): any;
						public setBorderWidth(param0: com.facebook.react.views.scroll.ReactScrollView, param1: number, param2: number): void;
						public receiveCommand(param0: com.facebook.react.views.scroll.ReactScrollView, param1: number, param2: com.facebook.react.bridge.ReadableArray): void;
						public receiveCommand(param0: com.facebook.react.views.scroll.ReactScrollView, param1: string, param2: com.facebook.react.bridge.ReadableArray): void;
						public scrollToEnd(param0: com.facebook.react.views.scroll.ReactScrollView, param1: com.facebook.react.views.scroll.ReactScrollViewCommandHelper.ScrollToEndCommandData): void;
						public setNestedScrollEnabled(param0: com.facebook.react.views.scroll.ReactScrollView, param1: boolean): void;
						public setFadingEdgeLength(param0: com.facebook.react.views.scroll.ReactScrollView, param1: number): void;
						public static createExportedCustomDirectEventTypeConstants(): java.util.Map<string,any>;
						public setBorderRadius(param0: com.facebook.react.views.scroll.ReactScrollView, param1: number, param2: number): void;
						/** @deprecated */
						public setRotation(param0: any, param1: number): void;
						public setAccessibilityLabel(param0: any, param1: string): void;
						public initialize(): void;
						public scrollTo(param0: any, param1: com.facebook.react.views.scroll.ReactScrollViewCommandHelper.ScrollToCommandData): void;
						public setScaleY(param0: any, param1: number): void;
						public setPagingEnabled(param0: com.facebook.react.views.scroll.ReactScrollView, param1: boolean): void;
						public needsCustomLayoutForChildren(): boolean;
						public setBorderBottomRightRadius(param0: any, param1: number): void;
						public setZIndex(param0: any, param1: number): void;
						public onCatalystInstanceDestroy(): void;
						public getName(): string;
						public getCommandsMap(): java.util.Map<string,java.lang.Integer>;
						public receiveCommand(param0: any, param1: string, param2: com.facebook.react.bridge.ReadableArray): void;
						public setBorderTopLeftRadius(param0: any, param1: number): void;
						/** @deprecated */
						public setScaleX(param0: any, param1: number): void;
						public scrollToEnd(param0: any, param1: com.facebook.react.views.scroll.ReactScrollViewCommandHelper.ScrollToEndCommandData): void;
						public setSnapToEnd(param0: com.facebook.react.views.scroll.ReactScrollView, param1: boolean): void;
						public setContentOffset(param0: com.facebook.react.views.scroll.ReactScrollView, param1: com.facebook.react.bridge.ReadableMap): void;
						public setDisableIntervalMomentum(param0: com.facebook.react.views.scroll.ReactScrollView, param1: boolean): void;
						public setTransform(param0: any, param1: com.facebook.react.bridge.ReadableArray): void;
						public setBorderStyle(param0: com.facebook.react.views.scroll.ReactScrollView, param1: string): void;
						public constructor(param0: com.facebook.react.views.scroll.FpsListener);
						public setScrollEnabled(param0: com.facebook.react.views.scroll.ReactScrollView, param1: boolean): void;
						public createViewInstance(param0: com.facebook.react.uimanager.ThemedReactContext, param1: com.facebook.react.uimanager.ReactStylesDiffMap, param2: com.facebook.react.uimanager.StateWrapper): any;
						public setSendMomentumEvents(param0: com.facebook.react.views.scroll.ReactScrollView, param1: boolean): void;
						public setRenderToHardwareTexture(param0: any, param1: boolean): void;
						public setSnapToStart(param0: com.facebook.react.views.scroll.ReactScrollView, param1: boolean): void;
						public setPersistentScrollbar(param0: com.facebook.react.views.scroll.ReactScrollView, param1: boolean): void;
						public setBackgroundColor(param0: any, param1: number): void;
						public setScrollPerfTag(param0: com.facebook.react.views.scroll.ReactScrollView, param1: string): void;
						public setRotation(param0: any, param1: number): void;
						public setSnapToInterval(param0: com.facebook.react.views.scroll.ReactScrollView, param1: number): void;
						public setRemoveClippedSubviews(param0: com.facebook.react.views.scroll.ReactScrollView, param1: boolean): void;
						public setBottomFillColor(param0: com.facebook.react.views.scroll.ReactScrollView, param1: number): void;
						public setViewState(param0: any, param1: com.facebook.react.bridge.ReadableMap): void;
						public setShowsVerticalScrollIndicator(param0: com.facebook.react.views.scroll.ReactScrollView, param1: boolean): void;
						public setBorderBottomLeftRadius(param0: any, param1: number): void;
						public setBorderTopRightRadius(param0: any, param1: number): void;
						/** @deprecated */
						public setTranslateY(param0: any, param1: number): void;
						public scrollTo(param0: com.facebook.react.views.scroll.ReactScrollView, param1: com.facebook.react.views.scroll.ReactScrollViewCommandHelper.ScrollToCommandData): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module scroll {
					export class ScrollEvent extends com.facebook.react.uimanager.events.Event<com.facebook.react.views.scroll.ScrollEvent> {
						public static class: java.lang.Class<com.facebook.react.views.scroll.ScrollEvent>;
						public canCoalesce(): boolean;
						public static obtain(param0: number, param1: com.facebook.react.views.scroll.ScrollEventType, param2: number, param3: number, param4: number, param5: number, param6: number, param7: number, param8: number, param9: number): com.facebook.react.views.scroll.ScrollEvent;
						public getEventName(): string;
						public getCoalescingKey(): number;
						public onDispose(): void;
						public dispatch(param0: com.facebook.react.uimanager.events.RCTEventEmitter): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module scroll {
					export class ScrollEventType {
						public static class: java.lang.Class<com.facebook.react.views.scroll.ScrollEventType>;
						public static BEGIN_DRAG: com.facebook.react.views.scroll.ScrollEventType;
						public static END_DRAG: com.facebook.react.views.scroll.ScrollEventType;
						public static SCROLL: com.facebook.react.views.scroll.ScrollEventType;
						public static MOMENTUM_BEGIN: com.facebook.react.views.scroll.ScrollEventType;
						public static MOMENTUM_END: com.facebook.react.views.scroll.ScrollEventType;
						public static getJSEventName(param0: com.facebook.react.views.scroll.ScrollEventType): string;
						public static values(): native.Array<com.facebook.react.views.scroll.ScrollEventType>;
						public static valueOf(param0: string): com.facebook.react.views.scroll.ScrollEventType;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module scroll {
					export class VelocityHelper {
						public static class: java.lang.Class<com.facebook.react.views.scroll.VelocityHelper>;
						public constructor();
						public getXVelocity(): number;
						public getYVelocity(): number;
						public calculateVelocity(param0: globalAndroid.view.MotionEvent): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module slider {
					export class ReactSlider {
						public static class: java.lang.Class<com.facebook.react.views.slider.ReactSlider>;
						public toRealProgress(param0: number): number;
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module slider {
					export class ReactSliderEvent extends com.facebook.react.uimanager.events.Event<com.facebook.react.views.slider.ReactSliderEvent> {
						public static class: java.lang.Class<com.facebook.react.views.slider.ReactSliderEvent>;
						public static EVENT_NAME: string;
						public constructor(param0: number, param1: number, param2: boolean);
						public constructor();
						public getEventName(): string;
						public constructor(param0: number);
						public isFromUser(): boolean;
						public getCoalescingKey(): number;
						public dispatch(param0: com.facebook.react.uimanager.events.RCTEventEmitter): void;
						public getValue(): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module slider {
					export class ReactSliderManager extends com.facebook.react.uimanager.SimpleViewManager<com.facebook.react.views.slider.ReactSlider> implements com.facebook.react.viewmanagers.SliderManagerInterface<com.facebook.react.views.slider.ReactSlider>  {
						public static class: java.lang.Class<com.facebook.react.views.slider.ReactSliderManager>;
						public static REACT_CLASS: string;
						public static sAccessibilityDelegate: com.facebook.react.views.slider.ReactSliderManager.ReactSliderAccessibilityDelegate;
						public addEventEmitters(param0: com.facebook.react.uimanager.ThemedReactContext, param1: com.facebook.react.views.slider.ReactSlider): void;
						public setBorderRadius(param0: any, param1: number): void;
						public setMinimumTrackImage(param0: any, param1: com.facebook.react.bridge.ReadableMap): void;
						public createViewInstance(param0: com.facebook.react.uimanager.ThemedReactContext): any;
						public setTranslateX(param0: any, param1: number): void;
						public setAccessibilityLiveRegion(param0: any, param1: string): void;
						public getExportedCustomDirectEventTypeConstants(): java.util.Map<string,any>;
						public createShadowNodeInstance(): any;
						public setScaleX(param0: any, param1: number): void;
						/** @deprecated */
						public setTranslateX(param0: any, param1: number): void;
						public setDisabled(param0: com.facebook.react.views.slider.ReactSlider, param1: boolean): void;
						public getDelegate(): com.facebook.react.uimanager.ViewManagerDelegate<any>;
						public setTestId(param0: any, param1: string): void;
						public setTestID(param0: com.facebook.react.views.slider.ReactSlider, param1: string): void;
						public setImportantForAccessibility(param0: any, param1: string): void;
						public setAccessibilityRole(param0: any, param1: string): void;
						public setNativeId(param0: any, param1: string): void;
						public setEnabled(param0: com.facebook.react.views.slider.ReactSlider, param1: boolean): void;
						public setValue(param0: any, param1: number): void;
						public setAccessibilityActions(param0: any, param1: com.facebook.react.bridge.ReadableArray): void;
						public setStep(param0: any, param1: number): void;
						public constructor();
						public getShadowNodeClass(): java.lang.Class<com.facebook.react.uimanager.LayoutShadowNode>;
						public setTranslateY(param0: any, param1: number): void;
						public setAccessibilityHint(param0: any, param1: string): void;
						public setElevation(param0: any, param1: number): void;
						public setOpacity(param0: any, param1: number): void;
						public canOverrideExistingModule(): boolean;
						public setDisabled(param0: any, param1: boolean): void;
						public setMaximumTrackImage(param0: any, param1: com.facebook.react.bridge.ReadableMap): void;
						public getShadowNodeClass(): java.lang.Class;
						/** @deprecated */
						public setScaleY(param0: any, param1: number): void;
						public setThumbImage(param0: com.facebook.react.views.slider.ReactSlider, param1: com.facebook.react.bridge.ReadableMap): void;
						public setMinimumValue(param0: com.facebook.react.views.slider.ReactSlider, param1: number): void;
						/** @deprecated */
						public setRotation(param0: any, param1: number): void;
						public setMaximumTrackImage(param0: com.facebook.react.views.slider.ReactSlider, param1: com.facebook.react.bridge.ReadableMap): void;
						public setAccessibilityLabel(param0: any, param1: string): void;
						public addEventEmitters(param0: com.facebook.react.uimanager.ThemedReactContext, param1: any): void;
						public initialize(): void;
						public createShadowNodeInstance(param0: com.facebook.react.bridge.ReactApplicationContext): any;
						public setScaleY(param0: any, param1: number): void;
						public setBorderBottomRightRadius(param0: any, param1: number): void;
						public setMinimumTrackTintColor(param0: any, param1: java.lang.Integer): void;
						public setZIndex(param0: any, param1: number): void;
						public onCatalystInstanceDestroy(): void;
						public getName(): string;
						public setMaximumValue(param0: com.facebook.react.views.slider.ReactSlider, param1: number): void;
						public getDelegate(): com.facebook.react.uimanager.ViewManagerDelegate<com.facebook.react.views.slider.ReactSlider>;
						public setMinimumTrackTintColor(param0: com.facebook.react.views.slider.ReactSlider, param1: java.lang.Integer): void;
						public setBorderTopLeftRadius(param0: any, param1: number): void;
						/** @deprecated */
						public setScaleX(param0: any, param1: number): void;
						public setValue(param0: com.facebook.react.views.slider.ReactSlider, param1: number): void;
						public setTrackImage(param0: any, param1: com.facebook.react.bridge.ReadableMap): void;
						public setMinimumTrackImage(param0: com.facebook.react.views.slider.ReactSlider, param1: com.facebook.react.bridge.ReadableMap): void;
						public setThumbImage(param0: any, param1: com.facebook.react.bridge.ReadableMap): void;
						public setTransform(param0: any, param1: com.facebook.react.bridge.ReadableArray): void;
						public setThumbTintColor(param0: any, param1: java.lang.Integer): void;
						public getExportedCustomDirectEventTypeConstants(): java.util.Map;
						public measure(param0: globalAndroid.content.Context, param1: com.facebook.react.bridge.ReadableMap, param2: com.facebook.react.bridge.ReadableMap, param3: com.facebook.react.bridge.ReadableMap, param4: number, param5: com.facebook.yoga.YogaMeasureMode, param6: number, param7: com.facebook.yoga.YogaMeasureMode, param8: native.Array<number>): number;
						public setThumbTintColor(param0: com.facebook.react.views.slider.ReactSlider, param1: java.lang.Integer): void;
						public setMinimumValue(param0: any, param1: number): void;
						public createViewInstance(param0: com.facebook.react.uimanager.ThemedReactContext, param1: com.facebook.react.uimanager.ReactStylesDiffMap, param2: com.facebook.react.uimanager.StateWrapper): any;
						public setTestID(param0: any, param1: string): void;
						public setRenderToHardwareTexture(param0: any, param1: boolean): void;
						public setStep(param0: com.facebook.react.views.slider.ReactSlider, param1: number): void;
						public setMaximumTrackTintColor(param0: any, param1: java.lang.Integer): void;
						public setTrackImage(param0: com.facebook.react.views.slider.ReactSlider, param1: com.facebook.react.bridge.ReadableMap): void;
						public setBackgroundColor(param0: any, param1: number): void;
						public setRotation(param0: any, param1: number): void;
						public setMaximumTrackTintColor(param0: com.facebook.react.views.slider.ReactSlider, param1: java.lang.Integer): void;
						public setViewState(param0: any, param1: com.facebook.react.bridge.ReadableMap): void;
						public setEnabled(param0: any, param1: boolean): void;
						public setBorderBottomLeftRadius(param0: any, param1: number): void;
						public createShadowNodeInstance(): com.facebook.react.uimanager.LayoutShadowNode;
						public setBorderTopRightRadius(param0: any, param1: number): void;
						/** @deprecated */
						public setTranslateY(param0: any, param1: number): void;
						public createViewInstance(param0: com.facebook.react.uimanager.ThemedReactContext): com.facebook.react.views.slider.ReactSlider;
						public setMaximumValue(param0: any, param1: number): void;
					}
					export module ReactSliderManager {
						export class ReactSliderAccessibilityDelegate {
							public static class: java.lang.Class<com.facebook.react.views.slider.ReactSliderManager.ReactSliderAccessibilityDelegate>;
							public constructor();
							public performAccessibilityAction(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.os.Bundle): boolean;
						}
						export class ReactSliderShadowNode extends com.facebook.react.uimanager.LayoutShadowNode implements com.facebook.yoga.YogaMeasureFunction {
							public static class: java.lang.Class<com.facebook.react.views.slider.ReactSliderManager.ReactSliderShadowNode>;
							public isVirtual(): boolean;
							public setStyleMinWidthPercent(param0: number): void;
							public getChildAt(param0: number): com.facebook.react.uimanager.ReactShadowNodeImpl;
							public getNativeParent(): com.facebook.react.uimanager.ReactShadowNodeImpl;
							public getNativeChildCount(): number;
							public setFlexWrap(param0: string): void;
							public isYogaLeafNode(): boolean;
							public setBaselineFunction(param0: com.facebook.yoga.YogaBaselineFunction): void;
							public setMeasureSpecs(param0: number, param1: number): void;
							public setFlexBasisAuto(): void;
							public setRootTag(param0: number): void;
							public setLocalData(param0: any): void;
							public getStyleHeight(): com.facebook.yoga.YogaValue;
							public addChildAt(param0: any, param1: number): void;
							public getScreenHeight(): number;
							public setAlignContent(param0: string): void;
							public setStyleWidthPercent(param0: number): void;
							public setJustifyContent(param0: string): void;
							public calculateLayout(param0: number, param1: number): void;
							public getStylePadding(param0: number): com.facebook.yoga.YogaValue;
							public getParent(): com.facebook.react.uimanager.ReactShadowNodeImpl;
							public getNativeKind(): com.facebook.react.uimanager.NativeKind;
							public setFlexDirection(param0: string): void;
							public setAlignItems(param0: string): void;
							public removeNativeChildAt(param0: number): com.facebook.react.uimanager.ReactShadowNodeImpl;
							public getScreenY(): number;
							public getHeightMeasureSpec(): java.lang.Integer;
							public getHierarchyInfo(): string;
							public getLayoutHeight(): number;
							public getChildAt(param0: number): any;
							public indexOf(param0: any): number;
							public onCollectExtraUpdates(param0: com.facebook.react.uimanager.UIViewOperationQueue): void;
							public getPadding(param0: number): number;
							public setStyleMaxHeight(param0: number): void;
							public setStyleWidth(param0: number): void;
							public indexOfNativeChild(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): number;
							public setAlignSelf(param0: string): void;
							public removeNativeChildAt(param0: number): any;
							public setPadding(param0: number, param1: number): void;
							public setMeasureFunction(param0: com.facebook.yoga.YogaMeasureFunction): void;
							public markLayoutSeen(): void;
							public setPaddingPercent(param0: number, param1: number): void;
							public setFlex(param0: number): void;
							public getLayoutY(): number;
							public getLayoutDirection(): com.facebook.yoga.YogaDirection;
							public setMarginAuto(param0: number): void;
							public getThemedContext(): com.facebook.react.uimanager.ThemedReactContext;
							public getStyleWidth(): com.facebook.yoga.YogaValue;
							public setShouldNotifyOnLayout(param0: boolean): void;
							public setAlignContent(param0: com.facebook.yoga.YogaAlign): void;
							public setStyleMinHeightPercent(param0: number): void;
							public hasUpdates(): boolean;
							public addNativeChildAt(param0: any, param1: number): void;
							public setViewClassName(param0: string): void;
							public setLayoutParent(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): void;
							public shouldNotifyOnLayout(): boolean;
							public getLayoutWidth(): number;
							public setLayoutDirection(param0: com.facebook.yoga.YogaDirection): void;
							public getWidthMeasureSpec(): java.lang.Integer;
							public setFlexBasis(param0: com.facebook.react.bridge.Dynamic): void;
							public setFlexDirection(param0: com.facebook.yoga.YogaFlexDirection): void;
							public hoistNativeChildren(): boolean;
							public isDescendantOf(param0: any): boolean;
							public getLayoutX(): number;
							public setStyleMaxWidth(param0: number): void;
							public setStyleMaxHeightPercent(param0: number): void;
							public getLayoutParent(): com.facebook.react.uimanager.ReactShadowNodeImpl;
							public setPosition(param0: number, param1: number): void;
							public hasUnseenUpdates(): boolean;
							public getScreenWidth(): number;
							public setPosition(param0: string): void;
							public getLayoutParent(): any;
							public getScreenX(): number;
							public setStyleMaxWidthPercent(param0: number): void;
							public getNativeParent(): any;
							public addChildAt(param0: com.facebook.react.uimanager.ReactShadowNodeImpl, param1: number): void;
							public dispatchUpdates(param0: number, param1: number, param2: com.facebook.react.uimanager.UIViewOperationQueue, param3: com.facebook.react.uimanager.NativeViewHierarchyOptimizer): boolean;
							public dirty(): void;
							public isLayoutOnly(): boolean;
							public setStyleHeight(param0: number): void;
							public setBorder(param0: number, param1: number): void;
							public setPositionPercent(param0: number, param1: number): void;
							public onAfterUpdateTransaction(): void;
							public getViewClass(): string;
							public setLayoutParent(param0: any): void;
							public setStyleAspectRatio(param0: number): void;
							public setOverflow(param0: string): void;
							public setStyleHeightAuto(): void;
							public setMargin(param0: number, param1: number): void;
							public setStyleMinWidth(param0: number): void;
							public setFlexWrap(param0: com.facebook.yoga.YogaWrap): void;
							public setStyleWidthAuto(): void;
							public getRootTag(): number;
							public measure(param0: com.facebook.yoga.YogaNode, param1: number, param2: com.facebook.yoga.YogaMeasureMode, param3: number, param4: com.facebook.yoga.YogaMeasureMode): number;
							public addNativeChildAt(param0: com.facebook.react.uimanager.ReactShadowNodeImpl, param1: number): void;
							public getReactTag(): number;
							public removeAndDisposeAllChildren(): void;
							public isDescendantOf(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): boolean;
							public hasNewLayout(): boolean;
							public getTotalNativeChildren(): number;
							public setAlignItems(param0: com.facebook.yoga.YogaAlign): void;
							public calculateLayoutOnChildren(): java.lang.Iterable<any>;
							public markUpdateSeen(): void;
							public setThemedContext(param0: com.facebook.react.uimanager.ThemedReactContext): void;
							public setOverflow(param0: com.facebook.yoga.YogaOverflow): void;
							public getChildCount(): number;
							public setReactTag(param0: number): void;
							public setDisplay(param0: string): void;
							public calculateLayout(): void;
							public setFlexBasisPercent(param0: number): void;
							public isMeasureDefined(): boolean;
							public getParent(): any;
							public setAlignSelf(param0: com.facebook.yoga.YogaAlign): void;
							public removeAllNativeChildren(): void;
							public setFlexBasis(param0: number): void;
							public setPositionType(param0: com.facebook.yoga.YogaPositionType): void;
							public isVirtualAnchor(): boolean;
							public setDisplay(param0: com.facebook.yoga.YogaDisplay): void;
							public setMarginPercent(param0: number, param1: number): void;
							public dispose(): void;
							public removeChildAt(param0: number): com.facebook.react.uimanager.ReactShadowNodeImpl;
							public onBeforeLayout(param0: com.facebook.react.uimanager.NativeViewHierarchyOptimizer): void;
							public setStyleMinHeight(param0: number): void;
							public setIsLayoutOnly(param0: boolean): void;
							public setFlexGrow(param0: number): void;
							public isDirty(): boolean;
							public indexOfNativeChild(param0: any): number;
							public setJustifyContent(param0: com.facebook.yoga.YogaJustify): void;
							public removeChildAt(param0: number): any;
							public markUpdated(): void;
							public setFlexShrink(param0: number): void;
							public setStyleHeightPercent(param0: number): void;
							public getNativeOffsetForChild(param0: any): number;
							public updateProperties(param0: com.facebook.react.uimanager.ReactStylesDiffMap): void;
							public indexOf(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): number;
							public setDefaultPadding(param0: number, param1: number): void;
							public getNativeOffsetForChild(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): number;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module slider {
					export class ReactSlidingCompleteEvent extends com.facebook.react.uimanager.events.Event<com.facebook.react.views.slider.ReactSlidingCompleteEvent> {
						public static class: java.lang.Class<com.facebook.react.views.slider.ReactSlidingCompleteEvent>;
						public static EVENT_NAME: string;
						public constructor();
						public canCoalesce(): boolean;
						public getEventName(): string;
						public constructor(param0: number);
						public getCoalescingKey(): number;
						public constructor(param0: number, param1: number);
						public dispatch(param0: com.facebook.react.uimanager.events.RCTEventEmitter): void;
						public getValue(): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module swiperefresh {
					export class ReactSwipeRefreshLayout {
						public static class: java.lang.Class<com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout>;
						public requestDisallowInterceptTouchEvent(param0: boolean): void;
						public setProgressViewOffset(param0: number): void;
						public constructor(param0: com.facebook.react.bridge.ReactContext);
						public onInterceptTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
						public setRefreshing(param0: boolean): void;
						public onLayout(param0: boolean, param1: number, param2: number, param3: number, param4: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module swiperefresh {
					export class RefreshEvent extends com.facebook.react.uimanager.events.Event<com.facebook.react.views.swiperefresh.RefreshEvent> {
						public static class: java.lang.Class<com.facebook.react.views.swiperefresh.RefreshEvent>;
						public constructor();
						public getEventName(): string;
						public constructor(param0: number);
						public dispatch(param0: com.facebook.react.uimanager.events.RCTEventEmitter): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module swiperefresh {
					export class SwipeRefreshLayoutManager extends com.facebook.react.uimanager.ViewGroupManager<com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout> implements com.facebook.react.viewmanagers.AndroidSwipeRefreshLayoutManagerInterface<com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout>  {
						public static class: java.lang.Class<com.facebook.react.views.swiperefresh.SwipeRefreshLayoutManager>;
						public static REACT_CLASS: string;
						public setBorderRadius(param0: any, param1: number): void;
						public setProgressBackgroundColor(param0: any, param1: java.lang.Integer): void;
						public createViewInstance(param0: com.facebook.react.uimanager.ThemedReactContext): any;
						public setTranslateX(param0: any, param1: number): void;
						public setRefreshing(param0: com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout, param1: boolean): void;
						public addEventEmitters(param0: com.facebook.react.uimanager.ThemedReactContext, param1: com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout): void;
						public setAccessibilityLiveRegion(param0: any, param1: string): void;
						public getExportedCustomDirectEventTypeConstants(): java.util.Map<string,any>;
						public setProgressViewOffset(param0: com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout, param1: number): void;
						public setScaleX(param0: any, param1: number): void;
						/** @deprecated */
						public setTranslateX(param0: any, param1: number): void;
						public setProgressBackgroundColor(param0: com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout, param1: java.lang.Integer): void;
						public setRefreshing(param0: any, param1: boolean): void;
						public getDelegate(): com.facebook.react.uimanager.ViewManagerDelegate<any>;
						public setTestId(param0: any, param1: string): void;
						public setImportantForAccessibility(param0: any, param1: string): void;
						public setAccessibilityRole(param0: any, param1: string): void;
						public setNativeId(param0: any, param1: string): void;
						public createViewInstance(param0: com.facebook.react.uimanager.ThemedReactContext): com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout;
						public setSize(param0: com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout, param1: number): void;
						public setColors(param0: any, param1: com.facebook.react.bridge.ReadableArray): void;
						public setAccessibilityActions(param0: any, param1: com.facebook.react.bridge.ReadableArray): void;
						public constructor();
						/** @deprecated */
						public receiveCommand(param0: any, param1: number, param2: com.facebook.react.bridge.ReadableArray): void;
						public setTranslateY(param0: any, param1: number): void;
						public setAccessibilityHint(param0: any, param1: string): void;
						public setElevation(param0: any, param1: number): void;
						public setOpacity(param0: any, param1: number): void;
						public canOverrideExistingModule(): boolean;
						public setNativeRefreshing(param0: com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout, param1: boolean): void;
						/** @deprecated */
						public setScaleY(param0: any, param1: number): void;
						/** @deprecated */
						public setRotation(param0: any, param1: number): void;
						public setAccessibilityLabel(param0: any, param1: string): void;
						public addEventEmitters(param0: com.facebook.react.uimanager.ThemedReactContext, param1: any): void;
						public initialize(): void;
						public setScaleY(param0: any, param1: number): void;
						public needsCustomLayoutForChildren(): boolean;
						public setBorderBottomRightRadius(param0: any, param1: number): void;
						public setZIndex(param0: any, param1: number): void;
						public receiveCommand(param0: com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout, param1: string, param2: com.facebook.react.bridge.ReadableArray): void;
						public onCatalystInstanceDestroy(): void;
						public getName(): string;
						public receiveCommand(param0: any, param1: string, param2: com.facebook.react.bridge.ReadableArray): void;
						public setBorderTopLeftRadius(param0: any, param1: number): void;
						/** @deprecated */
						public setScaleX(param0: any, param1: number): void;
						public setProgressViewOffset(param0: any, param1: number): void;
						public getDelegate(): com.facebook.react.uimanager.ViewManagerDelegate<com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout>;
						public setNativeRefreshing(param0: any, param1: boolean): void;
						public setTransform(param0: any, param1: com.facebook.react.bridge.ReadableArray): void;
						public setEnabled(param0: com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout, param1: boolean): void;
						public getExportedViewConstants(): java.util.Map<string,any>;
						public createViewInstance(param0: com.facebook.react.uimanager.ThemedReactContext, param1: com.facebook.react.uimanager.ReactStylesDiffMap, param2: com.facebook.react.uimanager.StateWrapper): any;
						public setRenderToHardwareTexture(param0: any, param1: boolean): void;
						public setBackgroundColor(param0: any, param1: number): void;
						public setSize(param0: any, param1: number): void;
						public setRotation(param0: any, param1: number): void;
						public setSize(param0: com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout, param1: com.facebook.react.bridge.Dynamic): void;
						public setViewState(param0: any, param1: com.facebook.react.bridge.ReadableMap): void;
						public setEnabled(param0: any, param1: boolean): void;
						public setBorderBottomLeftRadius(param0: any, param1: number): void;
						public setColors(param0: com.facebook.react.views.swiperefresh.ReactSwipeRefreshLayout, param1: com.facebook.react.bridge.ReadableArray): void;
						public setBorderTopRightRadius(param0: any, param1: number): void;
						/** @deprecated */
						public setTranslateY(param0: any, param1: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module switchview {
					export class ReactSwitch {
						public static class: java.lang.Class<com.facebook.react.views.switchview.ReactSwitch>;
						public setChecked(param0: boolean): void;
						public constructor(param0: globalAndroid.content.Context);
						public setThumbColor(param0: java.lang.Integer): void;
						public setTrackColorForFalse(param0: java.lang.Integer): void;
						public setTrackColorForTrue(param0: java.lang.Integer): void;
						public setTrackColor(param0: java.lang.Integer): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module switchview {
					export class ReactSwitchEvent extends com.facebook.react.uimanager.events.Event<com.facebook.react.views.switchview.ReactSwitchEvent> {
						public static class: java.lang.Class<com.facebook.react.views.switchview.ReactSwitchEvent>;
						public static EVENT_NAME: string;
						public constructor();
						public constructor(param0: number, param1: boolean);
						public getEventName(): string;
						public constructor(param0: number);
						public getIsChecked(): boolean;
						public getCoalescingKey(): number;
						public dispatch(param0: com.facebook.react.uimanager.events.RCTEventEmitter): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module switchview {
					export class ReactSwitchManager extends com.facebook.react.uimanager.SimpleViewManager<com.facebook.react.views.switchview.ReactSwitch> implements com.facebook.react.viewmanagers.AndroidSwitchManagerInterface<com.facebook.react.views.switchview.ReactSwitch>  {
						public static class: java.lang.Class<com.facebook.react.views.switchview.ReactSwitchManager>;
						public static REACT_CLASS: string;
						public setBorderRadius(param0: any, param1: number): void;
						public createViewInstance(param0: com.facebook.react.uimanager.ThemedReactContext): any;
						public setTranslateX(param0: any, param1: number): void;
						public setAccessibilityLiveRegion(param0: any, param1: string): void;
						public setTrackColorForFalse(param0: any, param1: java.lang.Integer): void;
						public setTrackTintColor(param0: any, param1: java.lang.Integer): void;
						public setValue(param0: com.facebook.react.views.switchview.ReactSwitch, param1: boolean): void;
						public createShadowNodeInstance(): any;
						public createViewInstance(param0: com.facebook.react.uimanager.ThemedReactContext): com.facebook.react.views.switchview.ReactSwitch;
						public setScaleX(param0: any, param1: number): void;
						/** @deprecated */
						public setTranslateX(param0: any, param1: number): void;
						public getDelegate(): com.facebook.react.uimanager.ViewManagerDelegate<any>;
						public setTestId(param0: any, param1: string): void;
						public setImportantForAccessibility(param0: any, param1: string): void;
						public getDelegate(): com.facebook.react.uimanager.ViewManagerDelegate<com.facebook.react.views.switchview.ReactSwitch>;
						public setAccessibilityRole(param0: any, param1: string): void;
						public setNativeId(param0: any, param1: string): void;
						public setTrackColorForFalse(param0: com.facebook.react.views.switchview.ReactSwitch, param1: java.lang.Integer): void;
						public setAccessibilityActions(param0: any, param1: com.facebook.react.bridge.ReadableArray): void;
						public constructor();
						public setThumbColor(param0: any, param1: java.lang.Integer): void;
						/** @deprecated */
						public receiveCommand(param0: any, param1: number, param2: com.facebook.react.bridge.ReadableArray): void;
						public getShadowNodeClass(): java.lang.Class<com.facebook.react.uimanager.LayoutShadowNode>;
						public setTranslateY(param0: any, param1: number): void;
						public setAccessibilityHint(param0: any, param1: string): void;
						public setElevation(param0: any, param1: number): void;
						public setOpacity(param0: any, param1: number): void;
						public canOverrideExistingModule(): boolean;
						public setDisabled(param0: any, param1: boolean): void;
						public getShadowNodeClass(): java.lang.Class;
						/** @deprecated */
						public setScaleY(param0: any, param1: number): void;
						public setThumbTintColor(param0: com.facebook.react.views.switchview.ReactSwitch, param1: java.lang.Integer): void;
						/** @deprecated */
						public setRotation(param0: any, param1: number): void;
						public setAccessibilityLabel(param0: any, param1: string): void;
						public addEventEmitters(param0: com.facebook.react.uimanager.ThemedReactContext, param1: any): void;
						public initialize(): void;
						public createShadowNodeInstance(param0: com.facebook.react.bridge.ReactApplicationContext): any;
						public setNativeValue(param0: any, param1: boolean): void;
						public setScaleY(param0: any, param1: number): void;
						public setEnabled(param0: com.facebook.react.views.switchview.ReactSwitch, param1: boolean): void;
						public setOn(param0: any, param1: boolean): void;
						public setBorderBottomRightRadius(param0: any, param1: number): void;
						public setZIndex(param0: any, param1: number): void;
						public setTrackColorForTrue(param0: any, param1: java.lang.Integer): void;
						public onCatalystInstanceDestroy(): void;
						public getName(): string;
						public receiveCommand(param0: any, param1: string, param2: com.facebook.react.bridge.ReadableArray): void;
						public setBorderTopLeftRadius(param0: any, param1: number): void;
						/** @deprecated */
						public setScaleX(param0: any, param1: number): void;
						public setNativeValue(param0: com.facebook.react.views.switchview.ReactSwitch, param1: boolean): void;
						public setDisabled(param0: com.facebook.react.views.switchview.ReactSwitch, param1: boolean): void;
						public setTransform(param0: any, param1: com.facebook.react.bridge.ReadableArray): void;
						public setThumbTintColor(param0: any, param1: java.lang.Integer): void;
						public addEventEmitters(param0: com.facebook.react.uimanager.ThemedReactContext, param1: com.facebook.react.views.switchview.ReactSwitch): void;
						public measure(param0: globalAndroid.content.Context, param1: com.facebook.react.bridge.ReadableMap, param2: com.facebook.react.bridge.ReadableMap, param3: com.facebook.react.bridge.ReadableMap, param4: number, param5: com.facebook.yoga.YogaMeasureMode, param6: number, param7: com.facebook.yoga.YogaMeasureMode, param8: native.Array<number>): number;
						public createViewInstance(param0: com.facebook.react.uimanager.ThemedReactContext, param1: com.facebook.react.uimanager.ReactStylesDiffMap, param2: com.facebook.react.uimanager.StateWrapper): any;
						public setOn(param0: com.facebook.react.views.switchview.ReactSwitch, param1: boolean): void;
						public setValue(param0: any, param1: boolean): void;
						public setRenderToHardwareTexture(param0: any, param1: boolean): void;
						public setBackgroundColor(param0: any, param1: number): void;
						public setRotation(param0: any, param1: number): void;
						public setThumbColor(param0: com.facebook.react.views.switchview.ReactSwitch, param1: java.lang.Integer): void;
						public setTrackColorForTrue(param0: com.facebook.react.views.switchview.ReactSwitch, param1: java.lang.Integer): void;
						public setViewState(param0: any, param1: com.facebook.react.bridge.ReadableMap): void;
						public setTrackTintColor(param0: com.facebook.react.views.switchview.ReactSwitch, param1: java.lang.Integer): void;
						public receiveCommand(param0: com.facebook.react.views.switchview.ReactSwitch, param1: string, param2: com.facebook.react.bridge.ReadableArray): void;
						public setEnabled(param0: any, param1: boolean): void;
						public setBorderBottomLeftRadius(param0: any, param1: number): void;
						public createShadowNodeInstance(): com.facebook.react.uimanager.LayoutShadowNode;
						public setBorderTopRightRadius(param0: any, param1: number): void;
						/** @deprecated */
						public setTranslateY(param0: any, param1: number): void;
					}
					export module ReactSwitchManager {
						export class ReactSwitchShadowNode extends com.facebook.react.uimanager.LayoutShadowNode implements com.facebook.yoga.YogaMeasureFunction {
							public static class: java.lang.Class<com.facebook.react.views.switchview.ReactSwitchManager.ReactSwitchShadowNode>;
							public isVirtual(): boolean;
							public setStyleMinWidthPercent(param0: number): void;
							public getChildAt(param0: number): com.facebook.react.uimanager.ReactShadowNodeImpl;
							public getNativeParent(): com.facebook.react.uimanager.ReactShadowNodeImpl;
							public getNativeChildCount(): number;
							public setFlexWrap(param0: string): void;
							public isYogaLeafNode(): boolean;
							public setBaselineFunction(param0: com.facebook.yoga.YogaBaselineFunction): void;
							public setMeasureSpecs(param0: number, param1: number): void;
							public setFlexBasisAuto(): void;
							public setRootTag(param0: number): void;
							public setLocalData(param0: any): void;
							public getStyleHeight(): com.facebook.yoga.YogaValue;
							public addChildAt(param0: any, param1: number): void;
							public getScreenHeight(): number;
							public setAlignContent(param0: string): void;
							public setStyleWidthPercent(param0: number): void;
							public setJustifyContent(param0: string): void;
							public calculateLayout(param0: number, param1: number): void;
							public getStylePadding(param0: number): com.facebook.yoga.YogaValue;
							public getParent(): com.facebook.react.uimanager.ReactShadowNodeImpl;
							public getNativeKind(): com.facebook.react.uimanager.NativeKind;
							public setFlexDirection(param0: string): void;
							public setAlignItems(param0: string): void;
							public removeNativeChildAt(param0: number): com.facebook.react.uimanager.ReactShadowNodeImpl;
							public getScreenY(): number;
							public getHeightMeasureSpec(): java.lang.Integer;
							public getHierarchyInfo(): string;
							public getLayoutHeight(): number;
							public getChildAt(param0: number): any;
							public indexOf(param0: any): number;
							public onCollectExtraUpdates(param0: com.facebook.react.uimanager.UIViewOperationQueue): void;
							public getPadding(param0: number): number;
							public setStyleMaxHeight(param0: number): void;
							public setStyleWidth(param0: number): void;
							public indexOfNativeChild(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): number;
							public setAlignSelf(param0: string): void;
							public removeNativeChildAt(param0: number): any;
							public setPadding(param0: number, param1: number): void;
							public setMeasureFunction(param0: com.facebook.yoga.YogaMeasureFunction): void;
							public markLayoutSeen(): void;
							public setPaddingPercent(param0: number, param1: number): void;
							public setFlex(param0: number): void;
							public getLayoutY(): number;
							public getLayoutDirection(): com.facebook.yoga.YogaDirection;
							public setMarginAuto(param0: number): void;
							public getThemedContext(): com.facebook.react.uimanager.ThemedReactContext;
							public getStyleWidth(): com.facebook.yoga.YogaValue;
							public setShouldNotifyOnLayout(param0: boolean): void;
							public setAlignContent(param0: com.facebook.yoga.YogaAlign): void;
							public setStyleMinHeightPercent(param0: number): void;
							public hasUpdates(): boolean;
							public addNativeChildAt(param0: any, param1: number): void;
							public setViewClassName(param0: string): void;
							public setLayoutParent(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): void;
							public shouldNotifyOnLayout(): boolean;
							public getLayoutWidth(): number;
							public setLayoutDirection(param0: com.facebook.yoga.YogaDirection): void;
							public getWidthMeasureSpec(): java.lang.Integer;
							public setFlexBasis(param0: com.facebook.react.bridge.Dynamic): void;
							public setFlexDirection(param0: com.facebook.yoga.YogaFlexDirection): void;
							public hoistNativeChildren(): boolean;
							public isDescendantOf(param0: any): boolean;
							public getLayoutX(): number;
							public setStyleMaxWidth(param0: number): void;
							public setStyleMaxHeightPercent(param0: number): void;
							public getLayoutParent(): com.facebook.react.uimanager.ReactShadowNodeImpl;
							public setPosition(param0: number, param1: number): void;
							public hasUnseenUpdates(): boolean;
							public getScreenWidth(): number;
							public setPosition(param0: string): void;
							public getLayoutParent(): any;
							public getScreenX(): number;
							public setStyleMaxWidthPercent(param0: number): void;
							public getNativeParent(): any;
							public addChildAt(param0: com.facebook.react.uimanager.ReactShadowNodeImpl, param1: number): void;
							public dispatchUpdates(param0: number, param1: number, param2: com.facebook.react.uimanager.UIViewOperationQueue, param3: com.facebook.react.uimanager.NativeViewHierarchyOptimizer): boolean;
							public dirty(): void;
							public isLayoutOnly(): boolean;
							public setStyleHeight(param0: number): void;
							public setBorder(param0: number, param1: number): void;
							public setPositionPercent(param0: number, param1: number): void;
							public onAfterUpdateTransaction(): void;
							public getViewClass(): string;
							public setLayoutParent(param0: any): void;
							public setStyleAspectRatio(param0: number): void;
							public setOverflow(param0: string): void;
							public setStyleHeightAuto(): void;
							public setMargin(param0: number, param1: number): void;
							public setStyleMinWidth(param0: number): void;
							public setFlexWrap(param0: com.facebook.yoga.YogaWrap): void;
							public setStyleWidthAuto(): void;
							public getRootTag(): number;
							public measure(param0: com.facebook.yoga.YogaNode, param1: number, param2: com.facebook.yoga.YogaMeasureMode, param3: number, param4: com.facebook.yoga.YogaMeasureMode): number;
							public addNativeChildAt(param0: com.facebook.react.uimanager.ReactShadowNodeImpl, param1: number): void;
							public getReactTag(): number;
							public removeAndDisposeAllChildren(): void;
							public isDescendantOf(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): boolean;
							public hasNewLayout(): boolean;
							public getTotalNativeChildren(): number;
							public setAlignItems(param0: com.facebook.yoga.YogaAlign): void;
							public calculateLayoutOnChildren(): java.lang.Iterable<any>;
							public markUpdateSeen(): void;
							public setThemedContext(param0: com.facebook.react.uimanager.ThemedReactContext): void;
							public setOverflow(param0: com.facebook.yoga.YogaOverflow): void;
							public getChildCount(): number;
							public setReactTag(param0: number): void;
							public setDisplay(param0: string): void;
							public calculateLayout(): void;
							public setFlexBasisPercent(param0: number): void;
							public isMeasureDefined(): boolean;
							public getParent(): any;
							public setAlignSelf(param0: com.facebook.yoga.YogaAlign): void;
							public removeAllNativeChildren(): void;
							public setFlexBasis(param0: number): void;
							public setPositionType(param0: com.facebook.yoga.YogaPositionType): void;
							public isVirtualAnchor(): boolean;
							public setDisplay(param0: com.facebook.yoga.YogaDisplay): void;
							public setMarginPercent(param0: number, param1: number): void;
							public dispose(): void;
							public removeChildAt(param0: number): com.facebook.react.uimanager.ReactShadowNodeImpl;
							public onBeforeLayout(param0: com.facebook.react.uimanager.NativeViewHierarchyOptimizer): void;
							public setStyleMinHeight(param0: number): void;
							public setIsLayoutOnly(param0: boolean): void;
							public setFlexGrow(param0: number): void;
							public isDirty(): boolean;
							public indexOfNativeChild(param0: any): number;
							public setJustifyContent(param0: com.facebook.yoga.YogaJustify): void;
							public removeChildAt(param0: number): any;
							public markUpdated(): void;
							public setFlexShrink(param0: number): void;
							public setStyleHeightPercent(param0: number): void;
							public getNativeOffsetForChild(param0: any): number;
							public updateProperties(param0: com.facebook.react.uimanager.ReactStylesDiffMap): void;
							public indexOf(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): number;
							public setDefaultPadding(param0: number, param1: number): void;
							public getNativeOffsetForChild(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): number;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module text {
					export class CustomLetterSpacingSpan implements com.facebook.react.views.text.ReactSpan {
						public static class: java.lang.Class<com.facebook.react.views.text.CustomLetterSpacingSpan>;
						public constructor(param0: number);
						public updateMeasureState(param0: globalAndroid.text.TextPaint): void;
						public updateDrawState(param0: globalAndroid.text.TextPaint): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module text {
					export class CustomLineHeightSpan extends com.facebook.react.views.text.ReactSpan {
						public static class: java.lang.Class<com.facebook.react.views.text.CustomLineHeightSpan>;
						public chooseHeight(param0: string, param1: number, param2: number, param3: number, param4: number, param5: globalAndroid.graphics.Paint.FontMetricsInt): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module text {
					export class CustomStyleSpan implements com.facebook.react.views.text.ReactSpan {
						public static class: java.lang.Class<com.facebook.react.views.text.CustomStyleSpan>;
						public getWeight(): number;
						public updateMeasureState(param0: globalAndroid.text.TextPaint): void;
						public updateDrawState(param0: globalAndroid.text.TextPaint): void;
						public getStyle(): number;
						public constructor(param0: number, param1: number, param2: string, param3: string, param4: globalAndroid.content.res.AssetManager);
						public getFontFamily(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module text {
					export class DefaultStyleValuesUtil {
						public static class: java.lang.Class<com.facebook.react.views.text.DefaultStyleValuesUtil>;
						public static getDefaultTextColor(param0: globalAndroid.content.Context): globalAndroid.content.res.ColorStateList;
						public static getDefaultTextColorHighlight(param0: globalAndroid.content.Context): number;
						public static getDefaultTextColorHint(param0: globalAndroid.content.Context): globalAndroid.content.res.ColorStateList;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module text {
					export class FontMetricsUtil {
						public static class: java.lang.Class<com.facebook.react.views.text.FontMetricsUtil>;
						public constructor();
						public static getFontMetrics(param0: string, param1: globalAndroid.text.Layout, param2: globalAndroid.text.TextPaint, param3: globalAndroid.content.Context): com.facebook.react.bridge.WritableArray;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module text {
					export class ReactAbsoluteSizeSpan implements com.facebook.react.views.text.ReactSpan {
						public static class: java.lang.Class<com.facebook.react.views.text.ReactAbsoluteSizeSpan>;
						public constructor(param0: number);
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module text {
					export class ReactBackgroundColorSpan implements com.facebook.react.views.text.ReactSpan {
						public static class: java.lang.Class<com.facebook.react.views.text.ReactBackgroundColorSpan>;
						public constructor(param0: number);
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module text {
					export abstract class ReactBaseTextShadowNode extends com.facebook.react.uimanager.LayoutShadowNode {
						public static class: java.lang.Class<com.facebook.react.views.text.ReactBaseTextShadowNode>;
						public static UNSET: number;
						public static PROP_SHADOW_OFFSET: string;
						public static PROP_SHADOW_OFFSET_WIDTH: string;
						public static PROP_SHADOW_OFFSET_HEIGHT: string;
						public static PROP_SHADOW_RADIUS: string;
						public static PROP_SHADOW_COLOR: string;
						public static PROP_TEXT_TRANSFORM: string;
						public static DEFAULT_TEXT_SHADOW_COLOR: number;
						public mReactTextViewManagerCallback: com.facebook.react.views.text.ReactTextViewManagerCallback;
						public mTextAttributes: com.facebook.react.views.text.TextAttributes;
						public mIsColorSet: boolean;
						public mColor: number;
						public mIsBackgroundColorSet: boolean;
						public mBackgroundColor: number;
						public mNumberOfLines: number;
						public mTextAlign: number;
						public mTextBreakStrategy: number;
						public mHyphenationFrequency: number;
						public mJustificationMode: number;
						public mTextShadowOffsetDx: number;
						public mTextShadowOffsetDy: number;
						public mTextShadowRadius: number;
						public mTextShadowColor: number;
						public mIsUnderlineTextDecorationSet: boolean;
						public mIsLineThroughTextDecorationSet: boolean;
						public mIncludeFontPadding: boolean;
						public mAdjustsFontSizeToFit: boolean;
						public mMinimumFontScale: number;
						public mFontStyle: number;
						public mFontWeight: number;
						public mFontFamily: string;
						public mFontFeatureSettings: string;
						public mContainsImages: boolean;
						public mInlineViews: java.util.Map<java.lang.Integer,com.facebook.react.uimanager.ReactShadowNode<any>>;
						public getNativeChildCount(): number;
						public getViewClass(): string;
						public getPadding(param0: number): number;
						public hasUpdates(): boolean;
						public isDescendantOf(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): boolean;
						public setAlignContent(param0: com.facebook.yoga.YogaAlign): void;
						public spannedFromShadowNode(param0: com.facebook.react.views.text.ReactBaseTextShadowNode, param1: string, param2: boolean, param3: com.facebook.react.uimanager.NativeViewHierarchyOptimizer): globalAndroid.text.Spannable;
						public setNumberOfLines(param0: number): void;
						public hasUnseenUpdates(): boolean;
						public updateProperties(param0: com.facebook.react.uimanager.ReactStylesDiffMap): void;
						public setAlignSelf(param0: com.facebook.yoga.YogaAlign): void;
						public getLayoutParent(): any;
						public setRootTag(param0: number): void;
						public markLayoutSeen(): void;
						public shouldNotifyOnLayout(): boolean;
						public getParent(): any;
						public getLayoutHeight(): number;
						public markUpdateSeen(): void;
						public setPadding(param0: number, param1: number): void;
						public addChildAt(param0: any, param1: number): void;
						public constructor();
						public getStyleHeight(): com.facebook.yoga.YogaValue;
						public addNativeChildAt(param0: com.facebook.react.uimanager.ReactShadowNodeImpl, param1: number): void;
						public setIsLayoutOnly(param0: boolean): void;
						public setTextShadowRadius(param0: number): void;
						public setOverflow(param0: string): void;
						public calculateLayout(): void;
						public setFlexBasisPercent(param0: number): void;
						public hasNewLayout(): boolean;
						public isDescendantOf(param0: any): boolean;
						public getNativeOffsetForChild(param0: any): number;
						public onCollectExtraUpdates(param0: com.facebook.react.uimanager.UIViewOperationQueue): void;
						public setPosition(param0: string): void;
						public setPosition(param0: number, param1: number): void;
						public setStyleWidth(param0: number): void;
						public setTextBreakStrategy(param0: string): void;
						public getScreenY(): number;
						public isVirtualAnchor(): boolean;
						public isMeasureDefined(): boolean;
						public setStyleMaxWidthPercent(param0: number): void;
						public setFontStyle(param0: string): void;
						public getStyleWidth(): com.facebook.yoga.YogaValue;
						public setAlignItems(param0: string): void;
						public setFlexWrap(param0: string): void;
						public setFontWeight(param0: string): void;
						public setDisplay(param0: string): void;
						public setDisplay(param0: com.facebook.yoga.YogaDisplay): void;
						public getLayoutDirection(): com.facebook.yoga.YogaDirection;
						public setFlex(param0: number): void;
						public getHeightMeasureSpec(): java.lang.Integer;
						public calculateLayoutOnChildren(): java.lang.Iterable<any>;
						public setTextTransform(param0: string): void;
						public getRootTag(): number;
						public setAlignContent(param0: string): void;
						public getTotalNativeChildren(): number;
						public indexOfNativeChild(param0: any): number;
						public setFlexBasis(param0: com.facebook.react.bridge.Dynamic): void;
						public getReactTag(): number;
						public getChildCount(): number;
						public getNativeParent(): com.facebook.react.uimanager.ReactShadowNodeImpl;
						public getNativeKind(): com.facebook.react.uimanager.NativeKind;
						public setFlexWrap(param0: com.facebook.yoga.YogaWrap): void;
						public setFlexDirection(param0: string): void;
						public isDirty(): boolean;
						public calculateLayout(param0: number, param1: number): void;
						public setPositionType(param0: com.facebook.yoga.YogaPositionType): void;
						public removeChildAt(param0: number): com.facebook.react.uimanager.ReactShadowNodeImpl;
						public setTextShadowColor(param0: number): void;
						public setTextShadowOffset(param0: com.facebook.react.bridge.ReadableMap): void;
						public getNativeOffsetForChild(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): number;
						public setMargin(param0: number, param1: number): void;
						public getStylePadding(param0: number): com.facebook.yoga.YogaValue;
						public dispatchUpdates(param0: number, param1: number, param2: com.facebook.react.uimanager.UIViewOperationQueue, param3: com.facebook.react.uimanager.NativeViewHierarchyOptimizer): boolean;
						public setStyleHeightPercent(param0: number): void;
						public setStyleMinHeight(param0: number): void;
						public setDefaultPadding(param0: number, param1: number): void;
						public setPositionPercent(param0: number, param1: number): void;
						public setStyleMinWidthPercent(param0: number): void;
						public setStyleHeight(param0: number): void;
						public setPaddingPercent(param0: number, param1: number): void;
						public setStyleWidthAuto(): void;
						public setLetterSpacing(param0: number): void;
						public setAdjustFontSizeToFit(param0: boolean): void;
						public setAlignItems(param0: com.facebook.yoga.YogaAlign): void;
						public removeAllNativeChildren(): void;
						public setStyleMinHeightPercent(param0: number): void;
						public setFlexDirection(param0: com.facebook.yoga.YogaFlexDirection): void;
						public setOverflow(param0: com.facebook.yoga.YogaOverflow): void;
						public getLayoutY(): number;
						public removeNativeChildAt(param0: number): com.facebook.react.uimanager.ReactShadowNodeImpl;
						public setJustifyContent(param0: string): void;
						public setStyleMaxHeightPercent(param0: number): void;
						public setJustifyContent(param0: com.facebook.yoga.YogaJustify): void;
						public setStyleMaxHeight(param0: number): void;
						public setAlignSelf(param0: string): void;
						public removeNativeChildAt(param0: number): any;
						public setMarginPercent(param0: number, param1: number): void;
						public getChildAt(param0: number): any;
						public setReactTag(param0: number): void;
						public setLineHeight(param0: number): void;
						public setMeasureSpecs(param0: number, param1: number): void;
						public dirty(): void;
						public setThemedContext(param0: com.facebook.react.uimanager.ThemedReactContext): void;
						public onBeforeLayout(param0: com.facebook.react.uimanager.NativeViewHierarchyOptimizer): void;
						public getWidthMeasureSpec(): java.lang.Integer;
						public removeAndDisposeAllChildren(): void;
						public hoistNativeChildren(): boolean;
						public setTextDecorationLine(param0: string): void;
						public dispose(): void;
						public setFlexBasisAuto(): void;
						public indexOf(param0: any): number;
						public setAllowFontScaling(param0: boolean): void;
						public setColor(param0: java.lang.Integer): void;
						public isLayoutOnly(): boolean;
						public onAfterUpdateTransaction(): void;
						public setMarginAuto(param0: number): void;
						public setShouldNotifyOnLayout(param0: boolean): void;
						public markUpdated(): void;
						public setFontVariant(param0: com.facebook.react.bridge.ReadableArray): void;
						public setLayoutParent(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): void;
						public getScreenHeight(): number;
						public setStyleAspectRatio(param0: number): void;
						public addChildAt(param0: com.facebook.react.uimanager.ReactShadowNodeImpl, param1: number): void;
						public addNativeChildAt(param0: any, param1: number): void;
						public getChildAt(param0: number): com.facebook.react.uimanager.ReactShadowNodeImpl;
						public getThemedContext(): com.facebook.react.uimanager.ThemedReactContext;
						public getScreenX(): number;
						public getLayoutWidth(): number;
						public isYogaLeafNode(): boolean;
						public setStyleMaxWidth(param0: number): void;
						public setMaxFontSizeMultiplier(param0: number): void;
						public setStyleWidthPercent(param0: number): void;
						public setStyleHeightAuto(): void;
						public getScreenWidth(): number;
						public setTextAlign(param0: string): void;
						public getLayoutX(): number;
						public setStyleMinWidth(param0: number): void;
						public setBaselineFunction(param0: com.facebook.yoga.YogaBaselineFunction): void;
						public setMinimumFontScale(param0: number): void;
						public setFlexGrow(param0: number): void;
						public removeChildAt(param0: number): any;
						public setLayoutDirection(param0: com.facebook.yoga.YogaDirection): void;
						public getParent(): com.facebook.react.uimanager.ReactShadowNodeImpl;
						public getLayoutParent(): com.facebook.react.uimanager.ReactShadowNodeImpl;
						public indexOfNativeChild(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): number;
						public isVirtual(): boolean;
						public setMeasureFunction(param0: com.facebook.yoga.YogaMeasureFunction): void;
						public setViewClassName(param0: string): void;
						public setBackgroundColor(param0: java.lang.Integer): void;
						public setLocalData(param0: any): void;
						public constructor(param0: com.facebook.react.views.text.ReactTextViewManagerCallback);
						public setFontFamily(param0: string): void;
						public setLayoutParent(param0: any): void;
						public setFlexShrink(param0: number): void;
						public getHierarchyInfo(): string;
						public setFlexBasis(param0: number): void;
						public getNativeParent(): any;
						public indexOf(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): number;
						public setIncludeFontPadding(param0: boolean): void;
						public setBorder(param0: number, param1: number): void;
						public setFontSize(param0: number): void;
					}
					export module ReactBaseTextShadowNode {
						export class SetSpanOperation {
							public static class: java.lang.Class<com.facebook.react.views.text.ReactBaseTextShadowNode.SetSpanOperation>;
							public start: number;
							public end: number;
							public what: com.facebook.react.views.text.ReactSpan;
							public execute(param0: globalAndroid.text.SpannableStringBuilder, param1: number): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module text {
					export class ReactFontManager {
						public static class: java.lang.Class<com.facebook.react.views.text.ReactFontManager>;
						public getTypeface(param0: string, param1: number, param2: number, param3: globalAndroid.content.res.AssetManager): globalAndroid.graphics.Typeface;
						public static getInstance(): com.facebook.react.views.text.ReactFontManager;
						public setTypeface(param0: string, param1: number, param2: globalAndroid.graphics.Typeface): void;
						public addCustomFont(param0: globalAndroid.content.Context, param1: string, param2: number): void;
						public getTypeface(param0: string, param1: number, param2: globalAndroid.content.res.AssetManager): globalAndroid.graphics.Typeface;
					}
					export module ReactFontManager {
						export class FontFamily {
							public static class: java.lang.Class<com.facebook.react.views.text.ReactFontManager.FontFamily>;
							public setTypeface(param0: number, param1: globalAndroid.graphics.Typeface): void;
							public getTypeface(param0: number): globalAndroid.graphics.Typeface;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module text {
					export class ReactForegroundColorSpan implements com.facebook.react.views.text.ReactSpan {
						public static class: java.lang.Class<com.facebook.react.views.text.ReactForegroundColorSpan>;
						public constructor(param0: number);
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module text {
					export class ReactRawTextManager extends com.facebook.react.uimanager.ViewManager<globalAndroid.view.View,com.facebook.react.views.text.ReactRawTextShadowNode> {
						public static class: java.lang.Class<com.facebook.react.views.text.ReactRawTextManager>;
						public static REACT_CLASS: string;
						public getShadowNodeClass(): java.lang.Class<com.facebook.react.views.text.ReactRawTextShadowNode>;
						public constructor();
						public createViewInstance(param0: com.facebook.react.uimanager.ThemedReactContext): any;
						public updateExtraData(param0: any, param1: any): void;
						public canOverrideExistingModule(): boolean;
						public createViewInstance(param0: com.facebook.react.uimanager.ThemedReactContext, param1: com.facebook.react.uimanager.ReactStylesDiffMap, param2: com.facebook.react.uimanager.StateWrapper): any;
						public onCatalystInstanceDestroy(): void;
						public getName(): string;
						public createViewInstance(param0: com.facebook.react.uimanager.ThemedReactContext): com.facebook.react.views.text.ReactTextView;
						public getShadowNodeClass(): java.lang.Class<any>;
						public createShadowNodeInstance(): any;
						public initialize(): void;
						public createShadowNodeInstance(): com.facebook.react.views.text.ReactRawTextShadowNode;
						public updateExtraData(param0: globalAndroid.view.View, param1: any): void;
						public createShadowNodeInstance(param0: com.facebook.react.bridge.ReactApplicationContext): any;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module text {
					export class ReactRawTextShadowNode extends com.facebook.react.uimanager.ReactShadowNodeImpl {
						public static class: java.lang.Class<com.facebook.react.views.text.ReactRawTextShadowNode>;
						public static PROP_TEXT: string;
						public getNativeChildCount(): number;
						public getViewClass(): string;
						public getPadding(param0: number): number;
						public hasUpdates(): boolean;
						public isDescendantOf(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): boolean;
						public setAlignContent(param0: com.facebook.yoga.YogaAlign): void;
						public hasUnseenUpdates(): boolean;
						public updateProperties(param0: com.facebook.react.uimanager.ReactStylesDiffMap): void;
						public setAlignSelf(param0: com.facebook.yoga.YogaAlign): void;
						public getLayoutParent(): any;
						public setRootTag(param0: number): void;
						public markLayoutSeen(): void;
						public shouldNotifyOnLayout(): boolean;
						public getParent(): any;
						public getLayoutHeight(): number;
						public markUpdateSeen(): void;
						public setPadding(param0: number, param1: number): void;
						public addChildAt(param0: any, param1: number): void;
						public constructor();
						public getStyleHeight(): com.facebook.yoga.YogaValue;
						public addNativeChildAt(param0: com.facebook.react.uimanager.ReactShadowNodeImpl, param1: number): void;
						public setIsLayoutOnly(param0: boolean): void;
						public calculateLayout(): void;
						public setFlexBasisPercent(param0: number): void;
						public hasNewLayout(): boolean;
						public isDescendantOf(param0: any): boolean;
						public getNativeOffsetForChild(param0: any): number;
						public toString(): string;
						public onCollectExtraUpdates(param0: com.facebook.react.uimanager.UIViewOperationQueue): void;
						public setPosition(param0: number, param1: number): void;
						public setStyleWidth(param0: number): void;
						public getScreenY(): number;
						public isVirtualAnchor(): boolean;
						public isMeasureDefined(): boolean;
						public setStyleMaxWidthPercent(param0: number): void;
						public getStyleWidth(): com.facebook.yoga.YogaValue;
						public getText(): string;
						public setDisplay(param0: com.facebook.yoga.YogaDisplay): void;
						public getLayoutDirection(): com.facebook.yoga.YogaDirection;
						public setFlex(param0: number): void;
						public getHeightMeasureSpec(): java.lang.Integer;
						public calculateLayoutOnChildren(): java.lang.Iterable<any>;
						public getRootTag(): number;
						public getTotalNativeChildren(): number;
						public indexOfNativeChild(param0: any): number;
						public getReactTag(): number;
						public getChildCount(): number;
						public getNativeParent(): com.facebook.react.uimanager.ReactShadowNodeImpl;
						public getNativeKind(): com.facebook.react.uimanager.NativeKind;
						public setFlexWrap(param0: com.facebook.yoga.YogaWrap): void;
						public isDirty(): boolean;
						public calculateLayout(param0: number, param1: number): void;
						public setPositionType(param0: com.facebook.yoga.YogaPositionType): void;
						public removeChildAt(param0: number): com.facebook.react.uimanager.ReactShadowNodeImpl;
						public getNativeOffsetForChild(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): number;
						public setMargin(param0: number, param1: number): void;
						public getStylePadding(param0: number): com.facebook.yoga.YogaValue;
						public dispatchUpdates(param0: number, param1: number, param2: com.facebook.react.uimanager.UIViewOperationQueue, param3: com.facebook.react.uimanager.NativeViewHierarchyOptimizer): boolean;
						public setStyleHeightPercent(param0: number): void;
						public setStyleMinHeight(param0: number): void;
						public setDefaultPadding(param0: number, param1: number): void;
						public setPositionPercent(param0: number, param1: number): void;
						public setStyleMinWidthPercent(param0: number): void;
						public setStyleHeight(param0: number): void;
						public setPaddingPercent(param0: number, param1: number): void;
						public setStyleWidthAuto(): void;
						public setAlignItems(param0: com.facebook.yoga.YogaAlign): void;
						public removeAllNativeChildren(): void;
						public setStyleMinHeightPercent(param0: number): void;
						public setFlexDirection(param0: com.facebook.yoga.YogaFlexDirection): void;
						public setOverflow(param0: com.facebook.yoga.YogaOverflow): void;
						public getLayoutY(): number;
						public removeNativeChildAt(param0: number): com.facebook.react.uimanager.ReactShadowNodeImpl;
						public setStyleMaxHeightPercent(param0: number): void;
						public setJustifyContent(param0: com.facebook.yoga.YogaJustify): void;
						public setStyleMaxHeight(param0: number): void;
						public removeNativeChildAt(param0: number): any;
						public setMarginPercent(param0: number, param1: number): void;
						public getChildAt(param0: number): any;
						public setReactTag(param0: number): void;
						public setMeasureSpecs(param0: number, param1: number): void;
						public dirty(): void;
						public setThemedContext(param0: com.facebook.react.uimanager.ThemedReactContext): void;
						public onBeforeLayout(param0: com.facebook.react.uimanager.NativeViewHierarchyOptimizer): void;
						public getWidthMeasureSpec(): java.lang.Integer;
						public removeAndDisposeAllChildren(): void;
						public hoistNativeChildren(): boolean;
						public dispose(): void;
						public setFlexBasisAuto(): void;
						public indexOf(param0: any): number;
						public isLayoutOnly(): boolean;
						public onAfterUpdateTransaction(): void;
						public setMarginAuto(param0: number): void;
						public setShouldNotifyOnLayout(param0: boolean): void;
						public markUpdated(): void;
						public setLayoutParent(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): void;
						public getScreenHeight(): number;
						public setStyleAspectRatio(param0: number): void;
						public addChildAt(param0: com.facebook.react.uimanager.ReactShadowNodeImpl, param1: number): void;
						public addNativeChildAt(param0: any, param1: number): void;
						public getChildAt(param0: number): com.facebook.react.uimanager.ReactShadowNodeImpl;
						public getThemedContext(): com.facebook.react.uimanager.ThemedReactContext;
						public getScreenX(): number;
						public getLayoutWidth(): number;
						public isYogaLeafNode(): boolean;
						public setStyleMaxWidth(param0: number): void;
						public setStyleWidthPercent(param0: number): void;
						public setStyleHeightAuto(): void;
						public getScreenWidth(): number;
						public getLayoutX(): number;
						public setStyleMinWidth(param0: number): void;
						public setBaselineFunction(param0: com.facebook.yoga.YogaBaselineFunction): void;
						public setFlexGrow(param0: number): void;
						public removeChildAt(param0: number): any;
						public setLayoutDirection(param0: com.facebook.yoga.YogaDirection): void;
						public getParent(): com.facebook.react.uimanager.ReactShadowNodeImpl;
						public getLayoutParent(): com.facebook.react.uimanager.ReactShadowNodeImpl;
						public indexOfNativeChild(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): number;
						public isVirtual(): boolean;
						public setMeasureFunction(param0: com.facebook.yoga.YogaMeasureFunction): void;
						public setViewClassName(param0: string): void;
						public setLocalData(param0: any): void;
						public setLayoutParent(param0: any): void;
						public setFlexShrink(param0: number): void;
						public getHierarchyInfo(): string;
						public setFlexBasis(param0: number): void;
						public getNativeParent(): any;
						public setText(param0: string): void;
						public indexOf(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): number;
						public setBorder(param0: number, param1: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module text {
					export class ReactSpan {
						public static class: java.lang.Class<com.facebook.react.views.text.ReactSpan>;
						/**
						 * Constructs a new instance of the com.facebook.react.views.text.ReactSpan interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
						});
						public constructor();
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module text {
					export class ReactStrikethroughSpan implements com.facebook.react.views.text.ReactSpan {
						public static class: java.lang.Class<com.facebook.react.views.text.ReactStrikethroughSpan>;
						public constructor();
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module text {
					export class ReactTagSpan extends com.facebook.react.views.text.ReactSpan {
						public static class: java.lang.Class<com.facebook.react.views.text.ReactTagSpan>;
						public getReactTag(): number;
						public constructor(param0: number);
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module text {
					export abstract class ReactTextAnchorViewManager<T, C>  extends com.facebook.react.uimanager.BaseViewManager<any,any> {
						public static class: java.lang.Class<com.facebook.react.views.text.ReactTextAnchorViewManager<any,any>>;
						public setBorderRadius(param0: any, param1: number): void;
						public setTranslateX(param0: any, param1: number): void;
						public setSelectionColor(param0: com.facebook.react.views.text.ReactTextView, param1: java.lang.Integer): void;
						public setBorderStyle(param0: com.facebook.react.views.text.ReactTextView, param1: string): void;
						public setAccessibilityLiveRegion(param0: any, param1: string): void;
						public setScaleX(param0: any, param1: number): void;
						/** @deprecated */
						public setTranslateX(param0: any, param1: number): void;
						public setTestId(param0: any, param1: string): void;
						public setBorderColor(param0: com.facebook.react.views.text.ReactTextView, param1: number, param2: java.lang.Integer): void;
						public setImportantForAccessibility(param0: any, param1: string): void;
						public setAccessibilityRole(param0: any, param1: string): void;
						public setNativeId(param0: any, param1: string): void;
						public setAccessibilityActions(param0: any, param1: com.facebook.react.bridge.ReadableArray): void;
						public constructor();
						public setTranslateY(param0: any, param1: number): void;
						public setAccessibilityHint(param0: any, param1: string): void;
						public setElevation(param0: any, param1: number): void;
						public setOpacity(param0: any, param1: number): void;
						public canOverrideExistingModule(): boolean;
						/** @deprecated */
						public setScaleY(param0: any, param1: number): void;
						/** @deprecated */
						public setRotation(param0: any, param1: number): void;
						public setAccessibilityLabel(param0: any, param1: string): void;
						public setBorderWidth(param0: com.facebook.react.views.text.ReactTextView, param1: number, param2: number): void;
						public initialize(): void;
						public setSelectable(param0: com.facebook.react.views.text.ReactTextView, param1: boolean): void;
						public setScaleY(param0: any, param1: number): void;
						public setIncludeFontPadding(param0: com.facebook.react.views.text.ReactTextView, param1: boolean): void;
						public setBorderBottomRightRadius(param0: any, param1: number): void;
						public setZIndex(param0: any, param1: number): void;
						public onCatalystInstanceDestroy(): void;
						public getName(): string;
						public setBorderTopLeftRadius(param0: any, param1: number): void;
						/** @deprecated */
						public setScaleX(param0: any, param1: number): void;
						public setTransform(param0: any, param1: com.facebook.react.bridge.ReadableArray): void;
						public setDataDetectorType(param0: com.facebook.react.views.text.ReactTextView, param1: string): void;
						public setDisabled(param0: com.facebook.react.views.text.ReactTextView, param1: boolean): void;
						public setRenderToHardwareTexture(param0: any, param1: boolean): void;
						public setTextAlignVertical(param0: com.facebook.react.views.text.ReactTextView, param1: string): void;
						public setBackgroundColor(param0: any, param1: number): void;
						public setNotifyOnInlineViewLayout(param0: com.facebook.react.views.text.ReactTextView, param1: boolean): void;
						public setRotation(param0: any, param1: number): void;
						public setAdjustFontSizeToFit(param0: com.facebook.react.views.text.ReactTextView, param1: boolean): void;
						public setViewState(param0: any, param1: com.facebook.react.bridge.ReadableMap): void;
						public setNumberOfLines(param0: com.facebook.react.views.text.ReactTextView, param1: number): void;
						public setBorderBottomLeftRadius(param0: any, param1: number): void;
						public setBorderRadius(param0: com.facebook.react.views.text.ReactTextView, param1: number, param2: number): void;
						public setBorderTopRightRadius(param0: any, param1: number): void;
						/** @deprecated */
						public setTranslateY(param0: any, param1: number): void;
						public setEllipsizeMode(param0: com.facebook.react.views.text.ReactTextView, param1: string): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module text {
					export abstract class ReactTextInlineImageShadowNode extends com.facebook.react.uimanager.LayoutShadowNode {
						public static class: java.lang.Class<com.facebook.react.views.text.ReactTextInlineImageShadowNode>;
						public getNativeChildCount(): number;
						public getViewClass(): string;
						public getPadding(param0: number): number;
						public hasUpdates(): boolean;
						public isDescendantOf(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): boolean;
						public setAlignContent(param0: com.facebook.yoga.YogaAlign): void;
						public hasUnseenUpdates(): boolean;
						public updateProperties(param0: com.facebook.react.uimanager.ReactStylesDiffMap): void;
						public setAlignSelf(param0: com.facebook.yoga.YogaAlign): void;
						public getLayoutParent(): any;
						public setRootTag(param0: number): void;
						public markLayoutSeen(): void;
						public shouldNotifyOnLayout(): boolean;
						public getParent(): any;
						public getLayoutHeight(): number;
						public markUpdateSeen(): void;
						public setPadding(param0: number, param1: number): void;
						public addChildAt(param0: any, param1: number): void;
						public constructor();
						public getStyleHeight(): com.facebook.yoga.YogaValue;
						public addNativeChildAt(param0: com.facebook.react.uimanager.ReactShadowNodeImpl, param1: number): void;
						public setIsLayoutOnly(param0: boolean): void;
						public setOverflow(param0: string): void;
						public calculateLayout(): void;
						public setFlexBasisPercent(param0: number): void;
						public hasNewLayout(): boolean;
						public isDescendantOf(param0: any): boolean;
						public getNativeOffsetForChild(param0: any): number;
						public onCollectExtraUpdates(param0: com.facebook.react.uimanager.UIViewOperationQueue): void;
						public setPosition(param0: string): void;
						public setPosition(param0: number, param1: number): void;
						public setStyleWidth(param0: number): void;
						public getScreenY(): number;
						public isVirtualAnchor(): boolean;
						public isMeasureDefined(): boolean;
						public setStyleMaxWidthPercent(param0: number): void;
						public getStyleWidth(): com.facebook.yoga.YogaValue;
						public setAlignItems(param0: string): void;
						public setFlexWrap(param0: string): void;
						public setDisplay(param0: string): void;
						public setDisplay(param0: com.facebook.yoga.YogaDisplay): void;
						public getLayoutDirection(): com.facebook.yoga.YogaDirection;
						public setFlex(param0: number): void;
						public getHeightMeasureSpec(): java.lang.Integer;
						public calculateLayoutOnChildren(): java.lang.Iterable<any>;
						public getRootTag(): number;
						public setAlignContent(param0: string): void;
						public getTotalNativeChildren(): number;
						public indexOfNativeChild(param0: any): number;
						public setFlexBasis(param0: com.facebook.react.bridge.Dynamic): void;
						public getReactTag(): number;
						public getChildCount(): number;
						public getNativeParent(): com.facebook.react.uimanager.ReactShadowNodeImpl;
						public getNativeKind(): com.facebook.react.uimanager.NativeKind;
						public setFlexWrap(param0: com.facebook.yoga.YogaWrap): void;
						public setFlexDirection(param0: string): void;
						public isDirty(): boolean;
						public calculateLayout(param0: number, param1: number): void;
						public setPositionType(param0: com.facebook.yoga.YogaPositionType): void;
						public removeChildAt(param0: number): com.facebook.react.uimanager.ReactShadowNodeImpl;
						public getNativeOffsetForChild(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): number;
						public setMargin(param0: number, param1: number): void;
						public getStylePadding(param0: number): com.facebook.yoga.YogaValue;
						public dispatchUpdates(param0: number, param1: number, param2: com.facebook.react.uimanager.UIViewOperationQueue, param3: com.facebook.react.uimanager.NativeViewHierarchyOptimizer): boolean;
						public setStyleHeightPercent(param0: number): void;
						public setStyleMinHeight(param0: number): void;
						public setDefaultPadding(param0: number, param1: number): void;
						public setPositionPercent(param0: number, param1: number): void;
						public setStyleMinWidthPercent(param0: number): void;
						public setStyleHeight(param0: number): void;
						public setPaddingPercent(param0: number, param1: number): void;
						public setStyleWidthAuto(): void;
						public setAlignItems(param0: com.facebook.yoga.YogaAlign): void;
						public removeAllNativeChildren(): void;
						public setStyleMinHeightPercent(param0: number): void;
						public setFlexDirection(param0: com.facebook.yoga.YogaFlexDirection): void;
						public setOverflow(param0: com.facebook.yoga.YogaOverflow): void;
						public getLayoutY(): number;
						public removeNativeChildAt(param0: number): com.facebook.react.uimanager.ReactShadowNodeImpl;
						public setJustifyContent(param0: string): void;
						public setStyleMaxHeightPercent(param0: number): void;
						public setJustifyContent(param0: com.facebook.yoga.YogaJustify): void;
						public setStyleMaxHeight(param0: number): void;
						public setAlignSelf(param0: string): void;
						public removeNativeChildAt(param0: number): any;
						public setMarginPercent(param0: number, param1: number): void;
						public getChildAt(param0: number): any;
						public setReactTag(param0: number): void;
						public setMeasureSpecs(param0: number, param1: number): void;
						public dirty(): void;
						public setThemedContext(param0: com.facebook.react.uimanager.ThemedReactContext): void;
						public onBeforeLayout(param0: com.facebook.react.uimanager.NativeViewHierarchyOptimizer): void;
						public getWidthMeasureSpec(): java.lang.Integer;
						public removeAndDisposeAllChildren(): void;
						public hoistNativeChildren(): boolean;
						public dispose(): void;
						public setFlexBasisAuto(): void;
						public indexOf(param0: any): number;
						public isLayoutOnly(): boolean;
						public onAfterUpdateTransaction(): void;
						public setMarginAuto(param0: number): void;
						public setShouldNotifyOnLayout(param0: boolean): void;
						public markUpdated(): void;
						public setLayoutParent(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): void;
						public getScreenHeight(): number;
						public setStyleAspectRatio(param0: number): void;
						public addChildAt(param0: com.facebook.react.uimanager.ReactShadowNodeImpl, param1: number): void;
						public addNativeChildAt(param0: any, param1: number): void;
						public getChildAt(param0: number): com.facebook.react.uimanager.ReactShadowNodeImpl;
						public getThemedContext(): com.facebook.react.uimanager.ThemedReactContext;
						public getScreenX(): number;
						public getLayoutWidth(): number;
						public isYogaLeafNode(): boolean;
						public setStyleMaxWidth(param0: number): void;
						public setStyleWidthPercent(param0: number): void;
						public setStyleHeightAuto(): void;
						public getScreenWidth(): number;
						public getLayoutX(): number;
						public setStyleMinWidth(param0: number): void;
						public setBaselineFunction(param0: com.facebook.yoga.YogaBaselineFunction): void;
						public setFlexGrow(param0: number): void;
						public removeChildAt(param0: number): any;
						public setLayoutDirection(param0: com.facebook.yoga.YogaDirection): void;
						public getParent(): com.facebook.react.uimanager.ReactShadowNodeImpl;
						public getLayoutParent(): com.facebook.react.uimanager.ReactShadowNodeImpl;
						public indexOfNativeChild(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): number;
						public isVirtual(): boolean;
						public setMeasureFunction(param0: com.facebook.yoga.YogaMeasureFunction): void;
						public setViewClassName(param0: string): void;
						public setLocalData(param0: any): void;
						public setLayoutParent(param0: any): void;
						public setFlexShrink(param0: number): void;
						public getHierarchyInfo(): string;
						public setFlexBasis(param0: number): void;
						public getNativeParent(): any;
						public indexOf(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): number;
						public buildInlineImageSpan(): com.facebook.react.views.text.TextInlineImageSpan;
						public setBorder(param0: number, param1: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module text {
					export class ReactTextShadowNode extends com.facebook.react.views.text.ReactBaseTextShadowNode {
						public static class: java.lang.Class<com.facebook.react.views.text.ReactTextShadowNode>;
						public getNativeChildCount(): number;
						public getViewClass(): string;
						public getPadding(param0: number): number;
						public hasUpdates(): boolean;
						public isDescendantOf(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): boolean;
						public setAlignContent(param0: com.facebook.yoga.YogaAlign): void;
						public hasUnseenUpdates(): boolean;
						public updateProperties(param0: com.facebook.react.uimanager.ReactStylesDiffMap): void;
						public setAlignSelf(param0: com.facebook.yoga.YogaAlign): void;
						public getLayoutParent(): any;
						public setRootTag(param0: number): void;
						public markLayoutSeen(): void;
						public shouldNotifyOnLayout(): boolean;
						public getParent(): any;
						public getLayoutHeight(): number;
						public markUpdateSeen(): void;
						public setPadding(param0: number, param1: number): void;
						public addChildAt(param0: any, param1: number): void;
						public constructor();
						public getStyleHeight(): com.facebook.yoga.YogaValue;
						public addNativeChildAt(param0: com.facebook.react.uimanager.ReactShadowNodeImpl, param1: number): void;
						public setIsLayoutOnly(param0: boolean): void;
						public setOverflow(param0: string): void;
						public calculateLayout(): void;
						public setFlexBasisPercent(param0: number): void;
						public hasNewLayout(): boolean;
						public isDescendantOf(param0: any): boolean;
						public getNativeOffsetForChild(param0: any): number;
						public onCollectExtraUpdates(param0: com.facebook.react.uimanager.UIViewOperationQueue): void;
						public setPosition(param0: string): void;
						public setPosition(param0: number, param1: number): void;
						public setStyleWidth(param0: number): void;
						public getScreenY(): number;
						public isVirtualAnchor(): boolean;
						public isMeasureDefined(): boolean;
						public setStyleMaxWidthPercent(param0: number): void;
						public getStyleWidth(): com.facebook.yoga.YogaValue;
						public setAlignItems(param0: string): void;
						public setFlexWrap(param0: string): void;
						public setDisplay(param0: string): void;
						public setDisplay(param0: com.facebook.yoga.YogaDisplay): void;
						public calculateLayoutOnChildren(): java.lang.Iterable<any>;
						public getLayoutDirection(): com.facebook.yoga.YogaDirection;
						public setFlex(param0: number): void;
						public getHeightMeasureSpec(): java.lang.Integer;
						public getRootTag(): number;
						public setAlignContent(param0: string): void;
						public getTotalNativeChildren(): number;
						public indexOfNativeChild(param0: any): number;
						public setFlexBasis(param0: com.facebook.react.bridge.Dynamic): void;
						public getReactTag(): number;
						public getChildCount(): number;
						public getNativeParent(): com.facebook.react.uimanager.ReactShadowNodeImpl;
						public getNativeKind(): com.facebook.react.uimanager.NativeKind;
						public setFlexWrap(param0: com.facebook.yoga.YogaWrap): void;
						public setFlexDirection(param0: string): void;
						public isDirty(): boolean;
						public calculateLayout(param0: number, param1: number): void;
						public setPositionType(param0: com.facebook.yoga.YogaPositionType): void;
						public removeChildAt(param0: number): com.facebook.react.uimanager.ReactShadowNodeImpl;
						public getNativeOffsetForChild(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): number;
						public setMargin(param0: number, param1: number): void;
						public getStylePadding(param0: number): com.facebook.yoga.YogaValue;
						public dispatchUpdates(param0: number, param1: number, param2: com.facebook.react.uimanager.UIViewOperationQueue, param3: com.facebook.react.uimanager.NativeViewHierarchyOptimizer): boolean;
						public setStyleHeightPercent(param0: number): void;
						public setStyleMinHeight(param0: number): void;
						public setDefaultPadding(param0: number, param1: number): void;
						public setPositionPercent(param0: number, param1: number): void;
						public setStyleMinWidthPercent(param0: number): void;
						public setStyleHeight(param0: number): void;
						public setPaddingPercent(param0: number, param1: number): void;
						public setStyleWidthAuto(): void;
						public setAlignItems(param0: com.facebook.yoga.YogaAlign): void;
						public removeAllNativeChildren(): void;
						public setStyleMinHeightPercent(param0: number): void;
						public setFlexDirection(param0: com.facebook.yoga.YogaFlexDirection): void;
						public setOverflow(param0: com.facebook.yoga.YogaOverflow): void;
						public getLayoutY(): number;
						public removeNativeChildAt(param0: number): com.facebook.react.uimanager.ReactShadowNodeImpl;
						public setJustifyContent(param0: string): void;
						public setStyleMaxHeightPercent(param0: number): void;
						public setJustifyContent(param0: com.facebook.yoga.YogaJustify): void;
						public setStyleMaxHeight(param0: number): void;
						public setAlignSelf(param0: string): void;
						public setShouldNotifyOnTextLayout(param0: boolean): void;
						public removeNativeChildAt(param0: number): any;
						public setMarginPercent(param0: number, param1: number): void;
						public getChildAt(param0: number): any;
						public setReactTag(param0: number): void;
						public setMeasureSpecs(param0: number, param1: number): void;
						public dirty(): void;
						public setThemedContext(param0: com.facebook.react.uimanager.ThemedReactContext): void;
						public onBeforeLayout(param0: com.facebook.react.uimanager.NativeViewHierarchyOptimizer): void;
						public getWidthMeasureSpec(): java.lang.Integer;
						public removeAndDisposeAllChildren(): void;
						public hoistNativeChildren(): boolean;
						public dispose(): void;
						public setFlexBasisAuto(): void;
						public indexOf(param0: any): number;
						public isLayoutOnly(): boolean;
						public onAfterUpdateTransaction(): void;
						public setMarginAuto(param0: number): void;
						public setShouldNotifyOnLayout(param0: boolean): void;
						public markUpdated(): void;
						public setLayoutParent(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): void;
						public getScreenHeight(): number;
						public setStyleAspectRatio(param0: number): void;
						public addChildAt(param0: com.facebook.react.uimanager.ReactShadowNodeImpl, param1: number): void;
						public addNativeChildAt(param0: any, param1: number): void;
						public getChildAt(param0: number): com.facebook.react.uimanager.ReactShadowNodeImpl;
						public getThemedContext(): com.facebook.react.uimanager.ThemedReactContext;
						public getScreenX(): number;
						public getLayoutWidth(): number;
						public isYogaLeafNode(): boolean;
						public setStyleMaxWidth(param0: number): void;
						public setStyleWidthPercent(param0: number): void;
						public setStyleHeightAuto(): void;
						public getScreenWidth(): number;
						public getLayoutX(): number;
						public setStyleMinWidth(param0: number): void;
						public setBaselineFunction(param0: com.facebook.yoga.YogaBaselineFunction): void;
						public setFlexGrow(param0: number): void;
						public removeChildAt(param0: number): any;
						public setLayoutDirection(param0: com.facebook.yoga.YogaDirection): void;
						public getParent(): com.facebook.react.uimanager.ReactShadowNodeImpl;
						public getLayoutParent(): com.facebook.react.uimanager.ReactShadowNodeImpl;
						public indexOfNativeChild(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): number;
						public isVirtual(): boolean;
						public setMeasureFunction(param0: com.facebook.yoga.YogaMeasureFunction): void;
						public setViewClassName(param0: string): void;
						public setLocalData(param0: any): void;
						public constructor(param0: com.facebook.react.views.text.ReactTextViewManagerCallback);
						public setLayoutParent(param0: any): void;
						public setFlexShrink(param0: number): void;
						public getHierarchyInfo(): string;
						public setFlexBasis(param0: number): void;
						public getNativeParent(): any;
						public indexOf(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): number;
						public setBorder(param0: number, param1: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module text {
					export class ReactTextUpdate {
						public static class: java.lang.Class<com.facebook.react.views.text.ReactTextUpdate>;
						public mAttributedString: com.facebook.react.bridge.ReadableMap;
						public static buildReactTextUpdateFromState(param0: globalAndroid.text.Spannable, param1: number, param2: boolean, param3: number, param4: number, param5: number, param6: com.facebook.react.bridge.ReadableMap): com.facebook.react.views.text.ReactTextUpdate;
						public getPaddingTop(): number;
						public getPaddingRight(): number;
						public getTextAlign(): number;
						public getText(): globalAndroid.text.Spannable;
						public getPaddingLeft(): number;
						public getTextBreakStrategy(): number;
						public containsImages(): boolean;
						/** @deprecated */
						public constructor(param0: globalAndroid.text.Spannable, param1: number, param2: boolean, param3: number, param4: number, param5: number, param6: number, param7: number);
						public getSelectionStart(): number;
						public getJsEventCounter(): number;
						public constructor(param0: globalAndroid.text.Spannable, param1: number, param2: boolean, param3: number, param4: number, param5: number, param6: number, param7: number, param8: number, param9: number);
						public getPaddingBottom(): number;
						public getJustificationMode(): number;
						public getSelectionEnd(): number;
						public constructor(param0: globalAndroid.text.Spannable, param1: number, param2: boolean, param3: number, param4: number, param5: number, param6: number, param7: number, param8: number, param9: number, param10: number, param11: number);
						public constructor(param0: globalAndroid.text.Spannable, param1: number, param2: boolean, param3: number, param4: number, param5: number);
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module text {
					export class ReactTextView implements com.facebook.react.uimanager.ReactCompoundView {
						public static class: java.lang.Class<com.facebook.react.views.text.ReactTextView>;
						public setAdjustFontSizeToFit(param0: boolean): void;
						public constructor(param0: globalAndroid.content.Context);
						public setText(param0: com.facebook.react.views.text.ReactTextUpdate): void;
						public setBorderRadius(param0: number, param1: number): void;
						public onAttachedToWindow(): void;
						public reactTagForTouch(param0: number, param1: number): number;
						public onFinishTemporaryDetach(): void;
						public onLayout(param0: boolean, param1: number, param2: number, param3: number, param4: number): void;
						public invalidateDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
						public setNumberOfLines(param0: number): void;
						public setBackgroundColor(param0: number): void;
						public getSpanned(): globalAndroid.text.Spannable;
						public setBorderColor(param0: number, param1: number, param2: number): void;
						public setBorderStyle(param0: string): void;
						public onStartTemporaryDetach(): void;
						public onDetachedFromWindow(): void;
						public updateView(): void;
						public setSpanned(param0: globalAndroid.text.Spannable): void;
						public hasOverlappingRendering(): boolean;
						public setEllipsizeLocation(param0: globalAndroid.text.TextUtils.TruncateAt): void;
						public verifyDrawable(param0: globalAndroid.graphics.drawable.Drawable): boolean;
						public setBorderRadius(param0: number): void;
						public setNotifyOnInlineViewLayout(param0: boolean): void;
						public setLinkifyMask(param0: number): void;
						public setBorderWidth(param0: number, param1: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module text {
					export class ReactTextViewManager extends com.facebook.react.views.text.ReactTextAnchorViewManager<com.facebook.react.views.text.ReactTextView,com.facebook.react.views.text.ReactTextShadowNode> implements com.facebook.react.uimanager.IViewManagerWithChildren  {
						public static class: java.lang.Class<com.facebook.react.views.text.ReactTextViewManager>;
						public static REACT_CLASS: string;
						public mReactTextViewManagerCallback: com.facebook.react.views.text.ReactTextViewManagerCallback;
						public setBorderRadius(param0: any, param1: number): void;
						public createViewInstance(param0: com.facebook.react.uimanager.ThemedReactContext): any;
						public updateExtraData(param0: any, param1: any): void;
						public setTranslateX(param0: any, param1: number): void;
						public onAfterUpdateTransaction(param0: com.facebook.react.views.text.ReactTextView): void;
						public onAfterUpdateTransaction(param0: any): void;
						public setAccessibilityLiveRegion(param0: any, param1: string): void;
						public getExportedCustomDirectEventTypeConstants(): java.util.Map<string,any>;
						public createShadowNodeInstance(): any;
						public getShadowNodeClass(): java.lang.Class<any>;
						public setScaleX(param0: any, param1: number): void;
						/** @deprecated */
						public setTranslateX(param0: any, param1: number): void;
						public setTestId(param0: any, param1: string): void;
						public setImportantForAccessibility(param0: any, param1: string): void;
						public createShadowNodeInstance(): com.facebook.react.views.text.ReactTextShadowNode;
						public setAccessibilityRole(param0: any, param1: string): void;
						public setNativeId(param0: any, param1: string): void;
						public setAccessibilityActions(param0: any, param1: com.facebook.react.bridge.ReadableArray): void;
						public constructor();
						public setTranslateY(param0: any, param1: number): void;
						public setAccessibilityHint(param0: any, param1: string): void;
						public setElevation(param0: any, param1: number): void;
						public setOpacity(param0: any, param1: number): void;
						public canOverrideExistingModule(): boolean;
						public updateState(param0: com.facebook.react.views.text.ReactTextView, param1: com.facebook.react.uimanager.ReactStylesDiffMap, param2: com.facebook.react.uimanager.StateWrapper): any;
						/** @deprecated */
						public setScaleY(param0: any, param1: number): void;
						public updateState(param0: any, param1: com.facebook.react.uimanager.ReactStylesDiffMap, param2: com.facebook.react.uimanager.StateWrapper): any;
						/** @deprecated */
						public setRotation(param0: any, param1: number): void;
						public setAccessibilityLabel(param0: any, param1: string): void;
						public createShadowNodeInstance(param0: com.facebook.react.views.text.ReactTextViewManagerCallback): com.facebook.react.views.text.ReactTextShadowNode;
						public setPadding(param0: any, param1: number, param2: number, param3: number, param4: number): void;
						public setPadding(param0: com.facebook.react.views.text.ReactTextView, param1: number, param2: number, param3: number, param4: number): void;
						public initialize(): void;
						public createShadowNodeInstance(param0: com.facebook.react.bridge.ReactApplicationContext): any;
						public setScaleY(param0: any, param1: number): void;
						public needsCustomLayoutForChildren(): boolean;
						public setBorderBottomRightRadius(param0: any, param1: number): void;
						public setZIndex(param0: any, param1: number): void;
						public onCatalystInstanceDestroy(): void;
						public getName(): string;
						public createViewInstance(param0: com.facebook.react.uimanager.ThemedReactContext): com.facebook.react.views.text.ReactTextView;
						public setBorderTopLeftRadius(param0: any, param1: number): void;
						/** @deprecated */
						public setScaleX(param0: any, param1: number): void;
						public setTransform(param0: any, param1: com.facebook.react.bridge.ReadableArray): void;
						public getExportedCustomDirectEventTypeConstants(): java.util.Map;
						public measure(param0: globalAndroid.content.Context, param1: com.facebook.react.bridge.ReadableMap, param2: com.facebook.react.bridge.ReadableMap, param3: com.facebook.react.bridge.ReadableMap, param4: number, param5: com.facebook.yoga.YogaMeasureMode, param6: number, param7: com.facebook.yoga.YogaMeasureMode, param8: native.Array<number>): number;
						public createViewInstance(param0: com.facebook.react.uimanager.ThemedReactContext, param1: com.facebook.react.uimanager.ReactStylesDiffMap, param2: com.facebook.react.uimanager.StateWrapper): any;
						public setRenderToHardwareTexture(param0: any, param1: boolean): void;
						public getShadowNodeClass(): java.lang.Class<com.facebook.react.views.text.ReactTextShadowNode>;
						public setBackgroundColor(param0: any, param1: number): void;
						public setRotation(param0: any, param1: number): void;
						public setViewState(param0: any, param1: com.facebook.react.bridge.ReadableMap): void;
						public setBorderBottomLeftRadius(param0: any, param1: number): void;
						public setBorderRadius(param0: com.facebook.react.views.text.ReactTextView, param1: number, param2: number): void;
						public setBorderTopRightRadius(param0: any, param1: number): void;
						/** @deprecated */
						public setTranslateY(param0: any, param1: number): void;
						public updateExtraData(param0: com.facebook.react.views.text.ReactTextView, param1: any): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module text {
					export class ReactTextViewManagerCallback {
						public static class: java.lang.Class<com.facebook.react.views.text.ReactTextViewManagerCallback>;
						/**
						 * Constructs a new instance of the com.facebook.react.views.text.ReactTextViewManagerCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onPostProcessSpannable(param0: globalAndroid.text.Spannable): void;
						});
						public constructor();
						public onPostProcessSpannable(param0: globalAndroid.text.Spannable): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module text {
					export class ReactTypefaceUtils {
						public static class: java.lang.Class<com.facebook.react.views.text.ReactTypefaceUtils>;
						public static UNSET: number;
						public constructor();
						public static parseFontWeight(param0: string): number;
						public static parseFontVariant(param0: com.facebook.react.bridge.ReadableArray): string;
						public static applyStyles(param0: globalAndroid.graphics.Typeface, param1: number, param2: number, param3: string, param4: globalAndroid.content.res.AssetManager): globalAndroid.graphics.Typeface;
						public static parseFontStyle(param0: string): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module text {
					export class ReactUnderlineSpan implements com.facebook.react.views.text.ReactSpan {
						public static class: java.lang.Class<com.facebook.react.views.text.ReactUnderlineSpan>;
						public constructor();
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module text {
					export class ReactVirtualTextShadowNode extends com.facebook.react.views.text.ReactBaseTextShadowNode {
						public static class: java.lang.Class<com.facebook.react.views.text.ReactVirtualTextShadowNode>;
						public getNativeChildCount(): number;
						public getViewClass(): string;
						public getPadding(param0: number): number;
						public hasUpdates(): boolean;
						public isDescendantOf(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): boolean;
						public setAlignContent(param0: com.facebook.yoga.YogaAlign): void;
						public hasUnseenUpdates(): boolean;
						public updateProperties(param0: com.facebook.react.uimanager.ReactStylesDiffMap): void;
						public setAlignSelf(param0: com.facebook.yoga.YogaAlign): void;
						public getLayoutParent(): any;
						public setRootTag(param0: number): void;
						public markLayoutSeen(): void;
						public shouldNotifyOnLayout(): boolean;
						public getParent(): any;
						public getLayoutHeight(): number;
						public markUpdateSeen(): void;
						public setPadding(param0: number, param1: number): void;
						public addChildAt(param0: any, param1: number): void;
						public constructor();
						public getStyleHeight(): com.facebook.yoga.YogaValue;
						public addNativeChildAt(param0: com.facebook.react.uimanager.ReactShadowNodeImpl, param1: number): void;
						public setIsLayoutOnly(param0: boolean): void;
						public setOverflow(param0: string): void;
						public calculateLayout(): void;
						public setFlexBasisPercent(param0: number): void;
						public hasNewLayout(): boolean;
						public isDescendantOf(param0: any): boolean;
						public getNativeOffsetForChild(param0: any): number;
						public onCollectExtraUpdates(param0: com.facebook.react.uimanager.UIViewOperationQueue): void;
						public setPosition(param0: string): void;
						public setPosition(param0: number, param1: number): void;
						public setStyleWidth(param0: number): void;
						public getScreenY(): number;
						public isVirtualAnchor(): boolean;
						public isMeasureDefined(): boolean;
						public setStyleMaxWidthPercent(param0: number): void;
						public getStyleWidth(): com.facebook.yoga.YogaValue;
						public setAlignItems(param0: string): void;
						public setFlexWrap(param0: string): void;
						public setDisplay(param0: string): void;
						public setDisplay(param0: com.facebook.yoga.YogaDisplay): void;
						public getLayoutDirection(): com.facebook.yoga.YogaDirection;
						public setFlex(param0: number): void;
						public getHeightMeasureSpec(): java.lang.Integer;
						public calculateLayoutOnChildren(): java.lang.Iterable<any>;
						public getRootTag(): number;
						public setAlignContent(param0: string): void;
						public getTotalNativeChildren(): number;
						public indexOfNativeChild(param0: any): number;
						public setFlexBasis(param0: com.facebook.react.bridge.Dynamic): void;
						public getReactTag(): number;
						public getChildCount(): number;
						public getNativeParent(): com.facebook.react.uimanager.ReactShadowNodeImpl;
						public getNativeKind(): com.facebook.react.uimanager.NativeKind;
						public setFlexWrap(param0: com.facebook.yoga.YogaWrap): void;
						public setFlexDirection(param0: string): void;
						public isDirty(): boolean;
						public calculateLayout(param0: number, param1: number): void;
						public setPositionType(param0: com.facebook.yoga.YogaPositionType): void;
						public removeChildAt(param0: number): com.facebook.react.uimanager.ReactShadowNodeImpl;
						public getNativeOffsetForChild(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): number;
						public setMargin(param0: number, param1: number): void;
						public getStylePadding(param0: number): com.facebook.yoga.YogaValue;
						public dispatchUpdates(param0: number, param1: number, param2: com.facebook.react.uimanager.UIViewOperationQueue, param3: com.facebook.react.uimanager.NativeViewHierarchyOptimizer): boolean;
						public setStyleHeightPercent(param0: number): void;
						public setStyleMinHeight(param0: number): void;
						public setDefaultPadding(param0: number, param1: number): void;
						public setPositionPercent(param0: number, param1: number): void;
						public setStyleMinWidthPercent(param0: number): void;
						public setStyleHeight(param0: number): void;
						public setPaddingPercent(param0: number, param1: number): void;
						public setStyleWidthAuto(): void;
						public setAlignItems(param0: com.facebook.yoga.YogaAlign): void;
						public removeAllNativeChildren(): void;
						public setStyleMinHeightPercent(param0: number): void;
						public setFlexDirection(param0: com.facebook.yoga.YogaFlexDirection): void;
						public setOverflow(param0: com.facebook.yoga.YogaOverflow): void;
						public getLayoutY(): number;
						public removeNativeChildAt(param0: number): com.facebook.react.uimanager.ReactShadowNodeImpl;
						public setJustifyContent(param0: string): void;
						public setStyleMaxHeightPercent(param0: number): void;
						public setJustifyContent(param0: com.facebook.yoga.YogaJustify): void;
						public setStyleMaxHeight(param0: number): void;
						public setAlignSelf(param0: string): void;
						public removeNativeChildAt(param0: number): any;
						public setMarginPercent(param0: number, param1: number): void;
						public getChildAt(param0: number): any;
						public setReactTag(param0: number): void;
						public setMeasureSpecs(param0: number, param1: number): void;
						public dirty(): void;
						public setThemedContext(param0: com.facebook.react.uimanager.ThemedReactContext): void;
						public onBeforeLayout(param0: com.facebook.react.uimanager.NativeViewHierarchyOptimizer): void;
						public getWidthMeasureSpec(): java.lang.Integer;
						public removeAndDisposeAllChildren(): void;
						public hoistNativeChildren(): boolean;
						public dispose(): void;
						public setFlexBasisAuto(): void;
						public indexOf(param0: any): number;
						public isLayoutOnly(): boolean;
						public onAfterUpdateTransaction(): void;
						public setMarginAuto(param0: number): void;
						public setShouldNotifyOnLayout(param0: boolean): void;
						public markUpdated(): void;
						public setLayoutParent(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): void;
						public getScreenHeight(): number;
						public setStyleAspectRatio(param0: number): void;
						public addChildAt(param0: com.facebook.react.uimanager.ReactShadowNodeImpl, param1: number): void;
						public addNativeChildAt(param0: any, param1: number): void;
						public getChildAt(param0: number): com.facebook.react.uimanager.ReactShadowNodeImpl;
						public getThemedContext(): com.facebook.react.uimanager.ThemedReactContext;
						public getScreenX(): number;
						public getLayoutWidth(): number;
						public isYogaLeafNode(): boolean;
						public setStyleMaxWidth(param0: number): void;
						public setStyleWidthPercent(param0: number): void;
						public setStyleHeightAuto(): void;
						public getScreenWidth(): number;
						public getLayoutX(): number;
						public setStyleMinWidth(param0: number): void;
						public setBaselineFunction(param0: com.facebook.yoga.YogaBaselineFunction): void;
						public setFlexGrow(param0: number): void;
						public removeChildAt(param0: number): any;
						public setLayoutDirection(param0: com.facebook.yoga.YogaDirection): void;
						public getParent(): com.facebook.react.uimanager.ReactShadowNodeImpl;
						public getLayoutParent(): com.facebook.react.uimanager.ReactShadowNodeImpl;
						public indexOfNativeChild(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): number;
						public isVirtual(): boolean;
						public setMeasureFunction(param0: com.facebook.yoga.YogaMeasureFunction): void;
						public setViewClassName(param0: string): void;
						public setLocalData(param0: any): void;
						public constructor(param0: com.facebook.react.views.text.ReactTextViewManagerCallback);
						public setLayoutParent(param0: any): void;
						public setFlexShrink(param0: number): void;
						public getHierarchyInfo(): string;
						public setFlexBasis(param0: number): void;
						public getNativeParent(): any;
						public indexOf(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): number;
						public setBorder(param0: number, param1: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module text {
					export class ReactVirtualTextViewManager extends com.facebook.react.uimanager.BaseViewManager<globalAndroid.view.View,com.facebook.react.views.text.ReactVirtualTextShadowNode> {
						public static class: java.lang.Class<com.facebook.react.views.text.ReactVirtualTextViewManager>;
						public static REACT_CLASS: string;
						public createShadowNodeInstance(): com.facebook.react.views.text.ReactVirtualTextShadowNode;
						public setBorderRadius(param0: any, param1: number): void;
						public setBorderBottomRightRadius(param0: any, param1: number): void;
						public createViewInstance(param0: com.facebook.react.uimanager.ThemedReactContext): any;
						public updateExtraData(param0: any, param1: any): void;
						public setTranslateX(param0: any, param1: number): void;
						public setZIndex(param0: any, param1: number): void;
						public onCatalystInstanceDestroy(): void;
						public setAccessibilityLiveRegion(param0: any, param1: string): void;
						public getName(): string;
						public getShadowNodeClass(): java.lang.Class<com.facebook.react.views.text.ReactVirtualTextShadowNode>;
						public setBorderTopLeftRadius(param0: any, param1: number): void;
						/** @deprecated */
						public setScaleX(param0: any, param1: number): void;
						public getShadowNodeClass(): java.lang.Class<any>;
						public createShadowNodeInstance(): any;
						public setScaleX(param0: any, param1: number): void;
						/** @deprecated */
						public setTranslateX(param0: any, param1: number): void;
						public setTestId(param0: any, param1: string): void;
						public setImportantForAccessibility(param0: any, param1: string): void;
						public setAccessibilityRole(param0: any, param1: string): void;
						public setNativeId(param0: any, param1: string): void;
						public setTransform(param0: any, param1: com.facebook.react.bridge.ReadableArray): void;
						public setAccessibilityActions(param0: any, param1: com.facebook.react.bridge.ReadableArray): void;
						public constructor();
						public createViewInstance(param0: com.facebook.react.uimanager.ThemedReactContext): globalAndroid.view.View;
						public setTranslateY(param0: any, param1: number): void;
						public setAccessibilityHint(param0: any, param1: string): void;
						public setElevation(param0: any, param1: number): void;
						public setOpacity(param0: any, param1: number): void;
						public canOverrideExistingModule(): boolean;
						public createViewInstance(param0: com.facebook.react.uimanager.ThemedReactContext, param1: com.facebook.react.uimanager.ReactStylesDiffMap, param2: com.facebook.react.uimanager.StateWrapper): any;
						/** @deprecated */
						public setScaleY(param0: any, param1: number): void;
						public setRenderToHardwareTexture(param0: any, param1: boolean): void;
						public setBackgroundColor(param0: any, param1: number): void;
						public setRotation(param0: any, param1: number): void;
						/** @deprecated */
						public setRotation(param0: any, param1: number): void;
						public setAccessibilityLabel(param0: any, param1: string): void;
						public setViewState(param0: any, param1: com.facebook.react.bridge.ReadableMap): void;
						public initialize(): void;
						public setBorderBottomLeftRadius(param0: any, param1: number): void;
						public updateExtraData(param0: globalAndroid.view.View, param1: any): void;
						public setBorderTopRightRadius(param0: any, param1: number): void;
						public createShadowNodeInstance(param0: com.facebook.react.bridge.ReactApplicationContext): any;
						/** @deprecated */
						public setTranslateY(param0: any, param1: number): void;
						public setScaleY(param0: any, param1: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module text {
					export class ShadowStyleSpan implements com.facebook.react.views.text.ReactSpan {
						public static class: java.lang.Class<com.facebook.react.views.text.ShadowStyleSpan>;
						public updateDrawState(param0: globalAndroid.text.TextPaint): void;
						public constructor(param0: number, param1: number, param2: number, param3: number);
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module text {
					export class TextAttributeProps {
						public static class: java.lang.Class<com.facebook.react.views.text.TextAttributeProps>;
						public static UNSET: number;
						public mLineHeight: number;
						public mIsColorSet: boolean;
						public mAllowFontScaling: boolean;
						public mColor: number;
						public mIsBackgroundColorSet: boolean;
						public mBackgroundColor: number;
						public mNumberOfLines: number;
						public mFontSize: number;
						public mFontSizeInput: number;
						public mLineHeightInput: number;
						public mLetterSpacingInput: number;
						public mTextAlign: number;
						public mTextTransform: com.facebook.react.views.text.TextTransform;
						public mTextShadowOffsetDx: number;
						public mTextShadowOffsetDy: number;
						public mTextShadowRadius: number;
						public mTextShadowColor: number;
						public mIsUnderlineTextDecorationSet: boolean;
						public mIsLineThroughTextDecorationSet: boolean;
						public mIncludeFontPadding: boolean;
						public mFontStyle: number;
						public mFontWeight: number;
						public mFontFamily: string;
						public mFontFeatureSettings: string;
						public mContainsImages: boolean;
						public mHeightOfTallestInlineImage: number;
						public setFontVariant(param0: com.facebook.react.bridge.ReadableArray): void;
						public setLetterSpacing(param0: number): void;
						public setFontStyle(param0: string): void;
						public static getTextAlignment(param0: com.facebook.react.uimanager.ReactStylesDiffMap): number;
						public getLetterSpacing(): number;
						public setFontWeight(param0: string): void;
						public static getJustificationMode(param0: com.facebook.react.uimanager.ReactStylesDiffMap): number;
						public getStartPadding(): number;
						public setNumberOfLines(param0: number): void;
						public getLeftPadding(): number;
						public getEffectiveLineHeight(): number;
						public getBottomPadding(): number;
						public setTextTransform(param0: string): void;
						public setLineHeight(param0: number): void;
						public constructor(param0: com.facebook.react.uimanager.ReactStylesDiffMap);
						public static getTextBreakStrategy(param0: string): number;
						public setTextShadowRadius(param0: number): void;
						public getTopPadding(): number;
						public setTextDecorationLine(param0: string): void;
						public setBackgroundColor(param0: java.lang.Integer): void;
						public setTextShadowColor(param0: number): void;
						public setTextShadowOffset(param0: com.facebook.react.bridge.ReadableMap): void;
						public getEndPadding(): number;
						public getRightPadding(): number;
						public setFontFamily(param0: string): void;
						public setAllowFontScaling(param0: boolean): void;
						public setColor(param0: java.lang.Integer): void;
						public setIncludeFontPadding(param0: boolean): void;
						public setFontSize(param0: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module text {
					export class TextAttributes {
						public static class: java.lang.Class<com.facebook.react.views.text.TextAttributes>;
						public static DEFAULT_MAX_FONT_SIZE_MULTIPLIER: number;
						public getTextTransform(): com.facebook.react.views.text.TextTransform;
						public constructor();
						public getAllowFontScaling(): boolean;
						public setLetterSpacing(param0: number): void;
						public getEffectiveMaxFontSizeMultiplier(): number;
						public getLetterSpacing(): number;
						public getMaxFontSizeMultiplier(): number;
						public toString(): string;
						public applyChild(param0: com.facebook.react.views.text.TextAttributes): com.facebook.react.views.text.TextAttributes;
						public getEffectiveFontSize(): number;
						public getEffectiveLineHeight(): number;
						public setAllowFontScaling(param0: boolean): void;
						public setMaxFontSizeMultiplier(param0: number): void;
						public getLineHeight(): number;
						public getFontSize(): number;
						public setHeightOfTallestInlineViewOrImage(param0: number): void;
						public setTextTransform(param0: com.facebook.react.views.text.TextTransform): void;
						public getEffectiveLetterSpacing(): number;
						public setFontSize(param0: number): void;
						public setLineHeight(param0: number): void;
						public getHeightOfTallestInlineViewOrImage(): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module text {
					export abstract class TextInlineImageSpan implements com.facebook.react.views.text.ReactSpan {
						public static class: java.lang.Class<com.facebook.react.views.text.TextInlineImageSpan>;
						public constructor();
						public getWidth(): number;
						public onStartTemporaryDetach(): void;
						public static possiblyUpdateInlineImageSpans(param0: globalAndroid.text.Spannable, param1: globalAndroid.widget.TextView): void;
						public getDrawable(): globalAndroid.graphics.drawable.Drawable;
						public onAttachedToWindow(): void;
						public onDetachedFromWindow(): void;
						public onFinishTemporaryDetach(): void;
						public getHeight(): number;
						public setTextView(param0: globalAndroid.widget.TextView): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module text {
					export class TextInlineViewPlaceholderSpan implements com.facebook.react.views.text.ReactSpan {
						public static class: java.lang.Class<com.facebook.react.views.text.TextInlineViewPlaceholderSpan>;
						public getReactTag(): number;
						public getWidth(): number;
						public draw(param0: globalAndroid.graphics.Canvas, param1: string, param2: number, param3: number, param4: number, param5: number, param6: number, param7: number, param8: globalAndroid.graphics.Paint): void;
						public getHeight(): number;
						public constructor(param0: number, param1: number, param2: number);
						public getSize(param0: globalAndroid.graphics.Paint, param1: string, param2: number, param3: number, param4: globalAndroid.graphics.Paint.FontMetricsInt): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module text {
					export class TextLayoutManager {
						public static class: java.lang.Class<com.facebook.react.views.text.TextLayoutManager>;
						public constructor();
						public static getOrCreateSpannableForText(param0: globalAndroid.content.Context, param1: com.facebook.react.bridge.ReadableMap, param2: com.facebook.react.views.text.ReactTextViewManagerCallback): globalAndroid.text.Spannable;
						public static measureText(param0: globalAndroid.content.Context, param1: com.facebook.react.bridge.ReadableMap, param2: com.facebook.react.bridge.ReadableMap, param3: number, param4: com.facebook.yoga.YogaMeasureMode, param5: number, param6: com.facebook.yoga.YogaMeasureMode, param7: com.facebook.react.views.text.ReactTextViewManagerCallback, param8: native.Array<number>): number;
					}
					export module TextLayoutManager {
						export class SetSpanOperation {
							public static class: java.lang.Class<com.facebook.react.views.text.TextLayoutManager.SetSpanOperation>;
							public start: number;
							public end: number;
							public what: com.facebook.react.views.text.ReactSpan;
							public execute(param0: globalAndroid.text.SpannableStringBuilder, param1: number): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module text {
					export class TextTransform {
						public static class: java.lang.Class<com.facebook.react.views.text.TextTransform>;
						public static NONE: com.facebook.react.views.text.TextTransform;
						public static UPPERCASE: com.facebook.react.views.text.TextTransform;
						public static LOWERCASE: com.facebook.react.views.text.TextTransform;
						public static CAPITALIZE: com.facebook.react.views.text.TextTransform;
						public static UNSET: com.facebook.react.views.text.TextTransform;
						public static apply(param0: string, param1: com.facebook.react.views.text.TextTransform): string;
						public static valueOf(param0: string): com.facebook.react.views.text.TextTransform;
						public static values(): native.Array<com.facebook.react.views.text.TextTransform>;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module text {
					export module frescosupport {
						export class FrescoBasedReactTextInlineImageShadowNode extends com.facebook.react.views.text.ReactTextInlineImageShadowNode {
							public static class: java.lang.Class<com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode>;
							public isVirtual(): boolean;
							public setStyleMinWidthPercent(param0: number): void;
							public getChildAt(param0: number): com.facebook.react.uimanager.ReactShadowNodeImpl;
							public getNativeParent(): com.facebook.react.uimanager.ReactShadowNodeImpl;
							public getNativeChildCount(): number;
							public setFlexWrap(param0: string): void;
							public setHeaders(param0: com.facebook.react.bridge.ReadableMap): void;
							public isYogaLeafNode(): boolean;
							public setBaselineFunction(param0: com.facebook.yoga.YogaBaselineFunction): void;
							public setMeasureSpecs(param0: number, param1: number): void;
							public setFlexBasisAuto(): void;
							public setRootTag(param0: number): void;
							public setLocalData(param0: any): void;
							public getStyleHeight(): com.facebook.yoga.YogaValue;
							public addChildAt(param0: any, param1: number): void;
							public getScreenHeight(): number;
							public setAlignContent(param0: string): void;
							public setStyleWidthPercent(param0: number): void;
							public setJustifyContent(param0: string): void;
							public calculateLayout(param0: number, param1: number): void;
							public getStylePadding(param0: number): com.facebook.yoga.YogaValue;
							public getParent(): com.facebook.react.uimanager.ReactShadowNodeImpl;
							public getNativeKind(): com.facebook.react.uimanager.NativeKind;
							public setFlexDirection(param0: string): void;
							public setAlignItems(param0: string): void;
							public removeNativeChildAt(param0: number): com.facebook.react.uimanager.ReactShadowNodeImpl;
							public getScreenY(): number;
							public getHeightMeasureSpec(): java.lang.Integer;
							public getHierarchyInfo(): string;
							public getLayoutHeight(): number;
							public getChildAt(param0: number): any;
							public indexOf(param0: any): number;
							public onCollectExtraUpdates(param0: com.facebook.react.uimanager.UIViewOperationQueue): void;
							public getPadding(param0: number): number;
							public setStyleMaxHeight(param0: number): void;
							public constructor(param0: com.facebook.drawee.controller.AbstractDraweeControllerBuilder, param1: any);
							public getHeaders(): com.facebook.react.bridge.ReadableMap;
							public setStyleWidth(param0: number): void;
							public indexOfNativeChild(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): number;
							public setAlignSelf(param0: string): void;
							public setSource(param0: com.facebook.react.bridge.ReadableArray): void;
							public getCallerContext(): any;
							public removeNativeChildAt(param0: number): any;
							public setPadding(param0: number, param1: number): void;
							public setMeasureFunction(param0: com.facebook.yoga.YogaMeasureFunction): void;
							public markLayoutSeen(): void;
							public setHeight(param0: com.facebook.react.bridge.Dynamic): void;
							public setPaddingPercent(param0: number, param1: number): void;
							public setFlex(param0: number): void;
							public getLayoutY(): number;
							public getLayoutDirection(): com.facebook.yoga.YogaDirection;
							public setMarginAuto(param0: number): void;
							public getThemedContext(): com.facebook.react.uimanager.ThemedReactContext;
							public getStyleWidth(): com.facebook.yoga.YogaValue;
							public constructor();
							public setShouldNotifyOnLayout(param0: boolean): void;
							public setAlignContent(param0: com.facebook.yoga.YogaAlign): void;
							public getUri(): globalAndroid.net.Uri;
							public setStyleMinHeightPercent(param0: number): void;
							public hasUpdates(): boolean;
							public addNativeChildAt(param0: any, param1: number): void;
							public setViewClassName(param0: string): void;
							public setLayoutParent(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): void;
							public shouldNotifyOnLayout(): boolean;
							public getLayoutWidth(): number;
							public setLayoutDirection(param0: com.facebook.yoga.YogaDirection): void;
							public getWidthMeasureSpec(): java.lang.Integer;
							public setFlexBasis(param0: com.facebook.react.bridge.Dynamic): void;
							public setFlexDirection(param0: com.facebook.yoga.YogaFlexDirection): void;
							public hoistNativeChildren(): boolean;
							public isDescendantOf(param0: any): boolean;
							public getLayoutX(): number;
							public setStyleMaxWidth(param0: number): void;
							public setStyleMaxHeightPercent(param0: number): void;
							public getLayoutParent(): com.facebook.react.uimanager.ReactShadowNodeImpl;
							public setPosition(param0: number, param1: number): void;
							public hasUnseenUpdates(): boolean;
							public getScreenWidth(): number;
							public setPosition(param0: string): void;
							public getLayoutParent(): any;
							public getScreenX(): number;
							public setStyleMaxWidthPercent(param0: number): void;
							public getNativeParent(): any;
							public addChildAt(param0: com.facebook.react.uimanager.ReactShadowNodeImpl, param1: number): void;
							public dispatchUpdates(param0: number, param1: number, param2: com.facebook.react.uimanager.UIViewOperationQueue, param3: com.facebook.react.uimanager.NativeViewHierarchyOptimizer): boolean;
							public dirty(): void;
							public isLayoutOnly(): boolean;
							public setWidth(param0: com.facebook.react.bridge.Dynamic): void;
							public setStyleHeight(param0: number): void;
							public setBorder(param0: number, param1: number): void;
							public setPositionPercent(param0: number, param1: number): void;
							public onAfterUpdateTransaction(): void;
							public getViewClass(): string;
							public setLayoutParent(param0: any): void;
							public setStyleAspectRatio(param0: number): void;
							public setOverflow(param0: string): void;
							public setStyleHeightAuto(): void;
							public setTintColor(param0: number): void;
							public setMargin(param0: number, param1: number): void;
							public setStyleMinWidth(param0: number): void;
							public setFlexWrap(param0: com.facebook.yoga.YogaWrap): void;
							public setStyleWidthAuto(): void;
							public getRootTag(): number;
							public getDraweeControllerBuilder(): com.facebook.drawee.controller.AbstractDraweeControllerBuilder;
							public buildInlineImageSpan(): com.facebook.react.views.text.TextInlineImageSpan;
							public addNativeChildAt(param0: com.facebook.react.uimanager.ReactShadowNodeImpl, param1: number): void;
							public getReactTag(): number;
							public removeAndDisposeAllChildren(): void;
							public isDescendantOf(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): boolean;
							public hasNewLayout(): boolean;
							public getTotalNativeChildren(): number;
							public setAlignItems(param0: com.facebook.yoga.YogaAlign): void;
							public calculateLayoutOnChildren(): java.lang.Iterable<any>;
							public markUpdateSeen(): void;
							public setThemedContext(param0: com.facebook.react.uimanager.ThemedReactContext): void;
							public setOverflow(param0: com.facebook.yoga.YogaOverflow): void;
							public getChildCount(): number;
							public setReactTag(param0: number): void;
							public setDisplay(param0: string): void;
							public calculateLayout(): void;
							public setFlexBasisPercent(param0: number): void;
							public isMeasureDefined(): boolean;
							public getParent(): any;
							public setAlignSelf(param0: com.facebook.yoga.YogaAlign): void;
							public removeAllNativeChildren(): void;
							public setResizeMode(param0: string): void;
							public setFlexBasis(param0: number): void;
							public setPositionType(param0: com.facebook.yoga.YogaPositionType): void;
							public isVirtualAnchor(): boolean;
							public setDisplay(param0: com.facebook.yoga.YogaDisplay): void;
							public setMarginPercent(param0: number, param1: number): void;
							public dispose(): void;
							public removeChildAt(param0: number): com.facebook.react.uimanager.ReactShadowNodeImpl;
							public onBeforeLayout(param0: com.facebook.react.uimanager.NativeViewHierarchyOptimizer): void;
							public setStyleMinHeight(param0: number): void;
							public setIsLayoutOnly(param0: boolean): void;
							public setFlexGrow(param0: number): void;
							public isDirty(): boolean;
							public indexOfNativeChild(param0: any): number;
							public setJustifyContent(param0: com.facebook.yoga.YogaJustify): void;
							public removeChildAt(param0: number): any;
							public markUpdated(): void;
							public setFlexShrink(param0: number): void;
							public setStyleHeightPercent(param0: number): void;
							public getNativeOffsetForChild(param0: any): number;
							public updateProperties(param0: com.facebook.react.uimanager.ReactStylesDiffMap): void;
							public indexOf(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): number;
							public setDefaultPadding(param0: number, param1: number): void;
							public getNativeOffsetForChild(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): number;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module text {
					export module frescosupport {
						export class FrescoBasedReactTextInlineImageSpan extends com.facebook.react.views.text.TextInlineImageSpan {
							public static class: java.lang.Class<com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageSpan>;
							public constructor();
							public getWidth(): number;
							public getHeight(): number;
							public constructor(param0: globalAndroid.content.res.Resources, param1: number, param2: number, param3: number, param4: globalAndroid.net.Uri, param5: com.facebook.react.bridge.ReadableMap, param6: com.facebook.drawee.controller.AbstractDraweeControllerBuilder, param7: any, param8: string);
							public onDetachedFromWindow(): void;
							public onStartTemporaryDetach(): void;
							public draw(param0: globalAndroid.graphics.Canvas, param1: string, param2: number, param3: number, param4: number, param5: number, param6: number, param7: number, param8: globalAndroid.graphics.Paint): void;
							public onAttachedToWindow(): void;
							public getSize(param0: globalAndroid.graphics.Paint, param1: string, param2: number, param3: number, param4: globalAndroid.graphics.Paint.FontMetricsInt): number;
							public getDrawable(): globalAndroid.graphics.drawable.Drawable;
							public setTextView(param0: globalAndroid.widget.TextView): void;
							public onFinishTemporaryDetach(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module text {
					export module frescosupport {
						export class FrescoBasedReactTextInlineImageViewManager extends com.facebook.react.uimanager.ViewManager<globalAndroid.view.View,com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode> {
							public static class: java.lang.Class<com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageViewManager>;
							public static REACT_CLASS: string;
							public constructor();
							public onCatalystInstanceDestroy(): void;
							public getShadowNodeClass(): java.lang.Class<com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode>;
							public initialize(): void;
							public getShadowNodeClass(): java.lang.Class<any>;
							public canOverrideExistingModule(): boolean;
							public createShadowNodeInstance(): com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode;
							public updateExtraData(param0: any, param1: any): void;
							public updateExtraData(param0: globalAndroid.view.View, param1: any): void;
							public createViewInstance(param0: com.facebook.react.uimanager.ThemedReactContext): any;
							public createShadowNodeInstance(): any;
							public constructor(param0: com.facebook.drawee.controller.AbstractDraweeControllerBuilder, param1: any);
							public getName(): string;
							public createViewInstance(param0: com.facebook.react.uimanager.ThemedReactContext, param1: com.facebook.react.uimanager.ReactStylesDiffMap, param2: com.facebook.react.uimanager.StateWrapper): any;
							public createShadowNodeInstance(param0: com.facebook.react.bridge.ReactApplicationContext): any;
							public createViewInstance(param0: com.facebook.react.uimanager.ThemedReactContext): globalAndroid.view.View;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module textinput {
					export class ContentSizeWatcher {
						public static class: java.lang.Class<com.facebook.react.views.textinput.ContentSizeWatcher>;
						/**
						 * Constructs a new instance of the com.facebook.react.views.textinput.ContentSizeWatcher interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onLayout(): void;
						});
						public constructor();
						public onLayout(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module textinput {
					export class ReactContentSizeChangedEvent extends com.facebook.react.uimanager.events.Event<com.facebook.react.views.textinput.ReactTextChangedEvent> {
						public static class: java.lang.Class<com.facebook.react.views.textinput.ReactContentSizeChangedEvent>;
						public static EVENT_NAME: string;
						public constructor();
						public getEventName(): string;
						public constructor(param0: number);
						public constructor(param0: number, param1: number, param2: number);
						public dispatch(param0: com.facebook.react.uimanager.events.RCTEventEmitter): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module textinput {
					export class ReactEditText {
						public static class: java.lang.Class<com.facebook.react.views.textinput.ReactEditText>;
						public mIsSettingTextFromJS: boolean;
						public mNativeEventCount: number;
						public mContainsImages: boolean;
						public mAttributedString: com.facebook.react.bridge.JavaOnlyMap;
						public mStateWrapper: com.facebook.react.uimanager.StateWrapper;
						public mDisableTextDiffing: boolean;
						public mIsSettingTextFromState: boolean;
						public isLayoutRequested(): boolean;
						public constructor(param0: globalAndroid.content.Context);
						public setBorderRadius(param0: number, param1: number): void;
						public setInputType(param0: number): void;
						public onFinishTemporaryDetach(): void;
						public setLetterSpacingPt(param0: number): void;
						public canUpdateWithEventCount(param0: number): boolean;
						public hideSoftKeyboard(): void;
						public onLayout(param0: boolean, param1: number, param2: number, param3: number, param4: number): void;
						public maybeSetText(param0: com.facebook.react.views.text.ReactTextUpdate): void;
						public getBlurOnSubmit(): boolean;
						public requestFocus(param0: number, param1: globalAndroid.graphics.Rect): boolean;
						public getDisableFullscreenUI(): boolean;
						public setBackgroundColor(param0: number): void;
						public onTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
						public setBorderStyle(param0: string): void;
						public setScrollWatcher(param0: com.facebook.react.views.textinput.ScrollWatcher): void;
						public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
						public onSelectionChanged(param0: number, param1: number): void;
						public maybeSetTextFromState(param0: com.facebook.react.views.text.ReactTextUpdate): void;
						public onStartTemporaryDetach(): void;
						public onScrollChanged(param0: number, param1: number, param2: number, param3: number): void;
						public setContentSizeWatcher(param0: com.facebook.react.views.textinput.ContentSizeWatcher): void;
						public verifyDrawable(param0: globalAndroid.graphics.drawable.Drawable): boolean;
						public setSelection(param0: number, param1: number): void;
						public setSelectionWatcher(param0: com.facebook.react.views.textinput.SelectionWatcher): void;
						public clearFocus(): void;
						public setBorderRadius(param0: number): void;
						public setAllowFontScaling(param0: boolean): void;
						public setBlurOnSubmit(param0: java.lang.Boolean): void;
						public setAutoFocus(param0: boolean): void;
						public setBorderWidth(param0: number, param1: number): void;
						public removeTextChangedListener(param0: globalAndroid.text.TextWatcher): void;
						public maybeSetSelection(param0: number, param1: number, param2: number): void;
						public addTextChangedListener(param0: globalAndroid.text.TextWatcher): void;
						public setFontStyle(param0: string): void;
						public showSoftKeyboard(): boolean;
						public onAttachedToWindow(): void;
						public setFontWeight(param0: string): void;
						public maybeSetTextFromJS(param0: com.facebook.react.views.text.ReactTextUpdate): void;
						public requestFocusFromJS(): void;
						public invalidateDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
						public setReturnKeyType(param0: string): void;
						public applyTextAttributes(): void;
						public setMaxFontSizeMultiplier(param0: number): void;
						public onCreateInputConnection(param0: globalAndroid.view.inputmethod.EditorInfo): globalAndroid.view.inputmethod.InputConnection;
						public getReturnKeyType(): string;
						public setBorderColor(param0: number, param1: number, param2: number): void;
						public setDisableFullscreenUI(param0: boolean): void;
						public onFocusChanged(param0: boolean, param1: number, param2: globalAndroid.graphics.Rect): void;
						public onDetachedFromWindow(): void;
						public setFontFamily(param0: string): void;
						public incrementAndGetEventCounter(): number;
						public setOnKeyPress(param0: boolean): void;
						public maybeUpdateTypeface(): void;
						public setFontSize(param0: number): void;
					}
					export module ReactEditText {
						export class InternalKeyListener {
							public static class: java.lang.Class<com.facebook.react.views.textinput.ReactEditText.InternalKeyListener>;
							public constructor();
							public clearMetaKeyState(param0: globalAndroid.view.View, param1: globalAndroid.text.Editable, param2: number): void;
							public onKeyUp(param0: globalAndroid.view.View, param1: globalAndroid.text.Editable, param2: number, param3: globalAndroid.view.KeyEvent): boolean;
							public onKeyDown(param0: globalAndroid.view.View, param1: globalAndroid.text.Editable, param2: number, param3: globalAndroid.view.KeyEvent): boolean;
							public setInputType(param0: number): void;
							public onKeyOther(param0: globalAndroid.view.View, param1: globalAndroid.text.Editable, param2: globalAndroid.view.KeyEvent): boolean;
							public getInputType(): number;
						}
						export class TextWatcherDelegator {
							public static class: java.lang.Class<com.facebook.react.views.textinput.ReactEditText.TextWatcherDelegator>;
							public afterTextChanged(param0: globalAndroid.text.Editable): void;
							public onTextChanged(param0: string, param1: number, param2: number, param3: number): void;
							public beforeTextChanged(param0: string, param1: number, param2: number, param3: number): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module textinput {
					export class ReactEditTextInputConnectionWrapper {
						public static class: java.lang.Class<com.facebook.react.views.textinput.ReactEditTextInputConnectionWrapper>;
						public static NEWLINE_RAW_VALUE: string;
						public static BACKSPACE_KEY_VALUE: string;
						public static ENTER_KEY_VALUE: string;
						public constructor(param0: globalAndroid.view.inputmethod.InputConnection, param1: com.facebook.react.bridge.ReactContext, param2: com.facebook.react.views.textinput.ReactEditText);
						public sendKeyEvent(param0: globalAndroid.view.KeyEvent): boolean;
						public endBatchEdit(): boolean;
						public beginBatchEdit(): boolean;
						public setComposingText(param0: string, param1: number): boolean;
						public commitText(param0: string, param1: number): boolean;
						public deleteSurroundingText(param0: number, param1: number): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module textinput {
					export class ReactTextChangedEvent extends com.facebook.react.uimanager.events.Event<com.facebook.react.views.textinput.ReactTextChangedEvent> {
						public static class: java.lang.Class<com.facebook.react.views.textinput.ReactTextChangedEvent>;
						public static EVENT_NAME: string;
						public constructor();
						public constructor(param0: number, param1: string, param2: number);
						public getEventName(): string;
						public constructor(param0: number);
						public dispatch(param0: com.facebook.react.uimanager.events.RCTEventEmitter): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module textinput {
					export class ReactTextInputBlurEvent extends com.facebook.react.uimanager.events.Event<com.facebook.react.views.textinput.ReactTextInputBlurEvent> {
						public static class: java.lang.Class<com.facebook.react.views.textinput.ReactTextInputBlurEvent>;
						public constructor();
						public canCoalesce(): boolean;
						public getEventName(): string;
						public constructor(param0: number);
						public dispatch(param0: com.facebook.react.uimanager.events.RCTEventEmitter): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module textinput {
					export class ReactTextInputEndEditingEvent extends com.facebook.react.uimanager.events.Event<com.facebook.react.views.textinput.ReactTextInputEndEditingEvent> {
						public static class: java.lang.Class<com.facebook.react.views.textinput.ReactTextInputEndEditingEvent>;
						public constructor();
						public constructor(param0: number, param1: string);
						public canCoalesce(): boolean;
						public getEventName(): string;
						public constructor(param0: number);
						public dispatch(param0: com.facebook.react.uimanager.events.RCTEventEmitter): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module textinput {
					export class ReactTextInputEvent extends com.facebook.react.uimanager.events.Event<com.facebook.react.views.textinput.ReactTextInputEvent> {
						public static class: java.lang.Class<com.facebook.react.views.textinput.ReactTextInputEvent>;
						public static EVENT_NAME: string;
						public constructor(param0: number, param1: string, param2: string, param3: number, param4: number);
						public constructor();
						public canCoalesce(): boolean;
						public getEventName(): string;
						public constructor(param0: number);
						public dispatch(param0: com.facebook.react.uimanager.events.RCTEventEmitter): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module textinput {
					export class ReactTextInputFocusEvent extends com.facebook.react.uimanager.events.Event<com.facebook.react.views.textinput.ReactTextInputFocusEvent> {
						public static class: java.lang.Class<com.facebook.react.views.textinput.ReactTextInputFocusEvent>;
						public constructor();
						public canCoalesce(): boolean;
						public getEventName(): string;
						public constructor(param0: number);
						public dispatch(param0: com.facebook.react.uimanager.events.RCTEventEmitter): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module textinput {
					export class ReactTextInputKeyPressEvent extends com.facebook.react.uimanager.events.Event<com.facebook.react.views.textinput.ReactTextInputEvent> {
						public static class: java.lang.Class<com.facebook.react.views.textinput.ReactTextInputKeyPressEvent>;
						public static EVENT_NAME: string;
						public canCoalesce(): boolean;
						public getEventName(): string;
						public dispatch(param0: com.facebook.react.uimanager.events.RCTEventEmitter): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module textinput {
					export class ReactTextInputLocalData {
						public static class: java.lang.Class<com.facebook.react.views.textinput.ReactTextInputLocalData>;
						public constructor(param0: globalAndroid.widget.EditText);
						public apply(param0: globalAndroid.widget.EditText): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module textinput {
					export class ReactTextInputManager extends com.facebook.react.uimanager.BaseViewManager<com.facebook.react.views.textinput.ReactEditText,com.facebook.react.uimanager.LayoutShadowNode> {
						public static class: java.lang.Class<com.facebook.react.views.textinput.ReactTextInputManager>;
						public static TAG: string;
						public static REACT_CLASS: string;
						public mReactTextViewManagerCallback: com.facebook.react.views.text.ReactTextViewManagerCallback;
						public createViewInstance(param0: com.facebook.react.uimanager.ThemedReactContext): any;
						public receiveCommand(param0: com.facebook.react.views.textinput.ReactEditText, param1: string, param2: com.facebook.react.bridge.ReadableArray): void;
						public setSelectionColor(param0: com.facebook.react.views.textinput.ReactEditText, param1: java.lang.Integer): void;
						public getExportedCustomBubblingEventTypeConstants(): java.util.Map<string,any>;
						public getExportedCustomDirectEventTypeConstants(): java.util.Map<string,any>;
						public receiveCommand(param0: com.facebook.react.views.textinput.ReactEditText, param1: number, param2: com.facebook.react.bridge.ReadableArray): void;
						public getShadowNodeClass(): java.lang.Class<any>;
						public setTextContentType(param0: com.facebook.react.views.textinput.ReactEditText, param1: string): void;
						public setScaleX(param0: any, param1: number): void;
						public setImportantForAutofill(param0: com.facebook.react.views.textinput.ReactEditText, param1: string): void;
						public setImportantForAccessibility(param0: any, param1: string): void;
						public setAccessibilityRole(param0: any, param1: string): void;
						public setNativeId(param0: any, param1: string): void;
						public setContextMenuHidden(param0: com.facebook.react.views.textinput.ReactEditText, param1: boolean): void;
						public setFontWeight(param0: com.facebook.react.views.textinput.ReactEditText, param1: string): void;
						public setSelectTextOnFocus(param0: com.facebook.react.views.textinput.ReactEditText, param1: boolean): void;
						public setAccessibilityActions(param0: any, param1: com.facebook.react.bridge.ReadableArray): void;
						public constructor();
						public setTextAlignVertical(param0: com.facebook.react.views.textinput.ReactEditText, param1: string): void;
						public setElevation(param0: any, param1: number): void;
						public setMaxLength(param0: com.facebook.react.views.textinput.ReactEditText, param1: java.lang.Integer): void;
						public setMultiline(param0: com.facebook.react.views.textinput.ReactEditText, param1: boolean): void;
						public setFontFamily(param0: com.facebook.react.views.textinput.ReactEditText, param1: string): void;
						public setAccessibilityLabel(param0: any, param1: string): void;
						public addEventEmitters(param0: com.facebook.react.uimanager.ThemedReactContext, param1: any): void;
						public setPadding(param0: any, param1: number, param2: number, param3: number, param4: number): void;
						public setCaretHidden(param0: com.facebook.react.views.textinput.ReactEditText, param1: boolean): void;
						public setScaleY(param0: any, param1: number): void;
						public setOnKeyPress(param0: com.facebook.react.views.textinput.ReactEditText, param1: boolean): void;
						public setZIndex(param0: any, param1: number): void;
						public setColor(param0: com.facebook.react.views.textinput.ReactEditText, param1: java.lang.Integer): void;
						public getCommandsMap(): java.util.Map<string,java.lang.Integer>;
						public receiveCommand(param0: any, param1: string, param2: com.facebook.react.bridge.ReadableArray): void;
						public setKeyboardType(param0: com.facebook.react.views.textinput.ReactEditText, param1: string): void;
						public setReturnKeyLabel(param0: com.facebook.react.views.textinput.ReactEditText, param1: string): void;
						public updateState(param0: com.facebook.react.views.textinput.ReactEditText, param1: com.facebook.react.uimanager.ReactStylesDiffMap, param2: com.facebook.react.uimanager.StateWrapper): any;
						public createShadowNodeInstance(param0: com.facebook.react.views.text.ReactTextViewManagerCallback): com.facebook.react.views.text.ReactBaseTextShadowNode;
						public setBorderTopLeftRadius(param0: any, param1: number): void;
						public setLetterSpacing(param0: com.facebook.react.views.textinput.ReactEditText, param1: number): void;
						public setAllowFontScaling(param0: com.facebook.react.views.textinput.ReactEditText, param1: boolean): void;
						public setTransform(param0: any, param1: com.facebook.react.bridge.ReadableArray): void;
						public createShadowNodeInstance(): com.facebook.react.views.text.ReactBaseTextShadowNode;
						public setPadding(param0: com.facebook.react.views.textinput.ReactEditText, param1: number, param2: number, param3: number, param4: number): void;
						public getExportedViewConstants(): java.util.Map<string,any>;
						public createViewInstance(param0: com.facebook.react.uimanager.ThemedReactContext, param1: com.facebook.react.uimanager.ReactStylesDiffMap, param2: com.facebook.react.uimanager.StateWrapper): any;
						public setRenderToHardwareTexture(param0: any, param1: boolean): void;
						public setBackgroundColor(param0: any, param1: number): void;
						public setNumLines(param0: com.facebook.react.views.textinput.ReactEditText, param1: number): void;
						public setSecureTextEntry(param0: com.facebook.react.views.textinput.ReactEditText, param1: boolean): void;
						public setViewState(param0: any, param1: com.facebook.react.bridge.ReadableMap): void;
						public setBorderTopRightRadius(param0: any, param1: number): void;
						public setPlaceholder(param0: com.facebook.react.views.textinput.ReactEditText, param1: string): void;
						/** @deprecated */
						public setTranslateY(param0: any, param1: number): void;
						public setBorderRadius(param0: any, param1: number): void;
						public setCursorColor(param0: com.facebook.react.views.textinput.ReactEditText, param1: java.lang.Integer): void;
						public updateExtraData(param0: any, param1: any): void;
						public setTranslateX(param0: any, param1: number): void;
						public onAfterUpdateTransaction(param0: any): void;
						public setEditable(param0: com.facebook.react.views.textinput.ReactEditText, param1: boolean): void;
						public setAccessibilityLiveRegion(param0: any, param1: string): void;
						public onAfterUpdateTransaction(param0: com.facebook.react.views.textinput.ReactEditText): void;
						public createShadowNodeInstance(): any;
						/** @deprecated */
						public setTranslateX(param0: any, param1: number): void;
						public setTestId(param0: any, param1: string): void;
						public setFontStyle(param0: com.facebook.react.views.textinput.ReactEditText, param1: string): void;
						public setUnderlineColor(param0: com.facebook.react.views.textinput.ReactEditText, param1: java.lang.Integer): void;
						/** @deprecated */
						public receiveCommand(param0: any, param1: number, param2: com.facebook.react.bridge.ReadableArray): void;
						public setTranslateY(param0: any, param1: number): void;
						public setAccessibilityHint(param0: any, param1: string): void;
						public setOpacity(param0: any, param1: number): void;
						public canOverrideExistingModule(): boolean;
						public setTextAlign(param0: com.facebook.react.views.textinput.ReactEditText, param1: string): void;
						/** @deprecated */
						public setScaleY(param0: any, param1: number): void;
						public setIncludeFontPadding(param0: com.facebook.react.views.textinput.ReactEditText, param1: boolean): void;
						public updateState(param0: any, param1: com.facebook.react.uimanager.ReactStylesDiffMap, param2: com.facebook.react.uimanager.StateWrapper): any;
						public updateExtraData(param0: com.facebook.react.views.textinput.ReactEditText, param1: any): void;
						/** @deprecated */
						public setRotation(param0: any, param1: number): void;
						public setMaxFontSizeMultiplier(param0: com.facebook.react.views.textinput.ReactEditText, param1: number): void;
						public initialize(): void;
						public createShadowNodeInstance(param0: com.facebook.react.bridge.ReactApplicationContext): any;
						public setOnSelectionChange(param0: com.facebook.react.views.textinput.ReactEditText, param1: boolean): void;
						public setBorderBottomRightRadius(param0: any, param1: number): void;
						public setBlurOnSubmit(param0: com.facebook.react.views.textinput.ReactEditText, param1: java.lang.Boolean): void;
						public setInlineImagePadding(param0: com.facebook.react.views.textinput.ReactEditText, param1: number): void;
						public showKeyboardOnFocus(param0: com.facebook.react.views.textinput.ReactEditText, param1: boolean): void;
						public setAutoCapitalize(param0: com.facebook.react.views.textinput.ReactEditText, param1: com.facebook.react.bridge.Dynamic): void;
						public onCatalystInstanceDestroy(): void;
						public getName(): string;
						public setOnContentSizeChange(param0: com.facebook.react.views.textinput.ReactEditText, param1: boolean): void;
						public addEventEmitters(param0: com.facebook.react.uimanager.ThemedReactContext, param1: com.facebook.react.views.textinput.ReactEditText): void;
						public setAutoCorrect(param0: com.facebook.react.views.textinput.ReactEditText, param1: java.lang.Boolean): void;
						/** @deprecated */
						public setScaleX(param0: any, param1: number): void;
						public setReturnKeyType(param0: com.facebook.react.views.textinput.ReactEditText, param1: string): void;
						public setBorderRadius(param0: com.facebook.react.views.textinput.ReactEditText, param1: number, param2: number): void;
						public setAutoFocus(param0: com.facebook.react.views.textinput.ReactEditText, param1: boolean): void;
						public setDisableFullscreenUI(param0: com.facebook.react.views.textinput.ReactEditText, param1: boolean): void;
						public setBorderColor(param0: com.facebook.react.views.textinput.ReactEditText, param1: number, param2: java.lang.Integer): void;
						public setFontSize(param0: com.facebook.react.views.textinput.ReactEditText, param1: number): void;
						public setPlaceholderTextColor(param0: com.facebook.react.views.textinput.ReactEditText, param1: java.lang.Integer): void;
						public setBorderStyle(param0: com.facebook.react.views.textinput.ReactEditText, param1: string): void;
						public setBorderWidth(param0: com.facebook.react.views.textinput.ReactEditText, param1: number, param2: number): void;
						public createViewInstance(param0: com.facebook.react.uimanager.ThemedReactContext): com.facebook.react.views.textinput.ReactEditText;
						public getExportedViewConstants(): java.util.Map;
						public setRotation(param0: any, param1: number): void;
						public setInlineImageLeft(param0: com.facebook.react.views.textinput.ReactEditText, param1: string): void;
						public setBorderBottomLeftRadius(param0: any, param1: number): void;
						public createInternalEditText(param0: com.facebook.react.uimanager.ThemedReactContext): globalAndroid.widget.EditText;
						public setOnScroll(param0: com.facebook.react.views.textinput.ReactEditText, param1: boolean): void;
					}
					export module ReactTextInputManager {
						export class ReactContentSizeWatcher extends com.facebook.react.views.textinput.ContentSizeWatcher {
							public static class: java.lang.Class<com.facebook.react.views.textinput.ReactTextInputManager.ReactContentSizeWatcher>;
							public onLayout(): void;
							public constructor(param0: com.facebook.react.views.textinput.ReactTextInputManager, param1: com.facebook.react.views.textinput.ReactEditText);
						}
						export class ReactScrollWatcher extends com.facebook.react.views.textinput.ScrollWatcher {
							public static class: java.lang.Class<com.facebook.react.views.textinput.ReactTextInputManager.ReactScrollWatcher>;
							public onScrollChanged(param0: number, param1: number, param2: number, param3: number): void;
							public constructor(param0: com.facebook.react.views.textinput.ReactTextInputManager, param1: com.facebook.react.views.textinput.ReactEditText);
						}
						export class ReactSelectionWatcher extends com.facebook.react.views.textinput.SelectionWatcher {
							public static class: java.lang.Class<com.facebook.react.views.textinput.ReactTextInputManager.ReactSelectionWatcher>;
							public onSelectionChanged(param0: number, param1: number): void;
							public constructor(param0: com.facebook.react.views.textinput.ReactTextInputManager, param1: com.facebook.react.views.textinput.ReactEditText);
						}
						export class ReactTextInputTextWatcher {
							public static class: java.lang.Class<com.facebook.react.views.textinput.ReactTextInputManager.ReactTextInputTextWatcher>;
							public afterTextChanged(param0: globalAndroid.text.Editable): void;
							public onTextChanged(param0: string, param1: number, param2: number, param3: number): void;
							public constructor(param0: com.facebook.react.views.textinput.ReactTextInputManager, param1: com.facebook.react.bridge.ReactContext, param2: com.facebook.react.views.textinput.ReactEditText);
							public beforeTextChanged(param0: string, param1: number, param2: number, param3: number): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module textinput {
					export class ReactTextInputSelectionEvent extends com.facebook.react.uimanager.events.Event<com.facebook.react.views.textinput.ReactTextInputSelectionEvent> {
						public static class: java.lang.Class<com.facebook.react.views.textinput.ReactTextInputSelectionEvent>;
						public constructor();
						public getEventName(): string;
						public constructor(param0: number);
						public constructor(param0: number, param1: number, param2: number);
						public dispatch(param0: com.facebook.react.uimanager.events.RCTEventEmitter): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module textinput {
					export class ReactTextInputShadowNode extends com.facebook.react.views.text.ReactBaseTextShadowNode implements com.facebook.yoga.YogaMeasureFunction {
						public static class: java.lang.Class<com.facebook.react.views.textinput.ReactTextInputShadowNode>;
						public static PROP_TEXT: string;
						public static PROP_PLACEHOLDER: string;
						public static PROP_SELECTION: string;
						public getNativeChildCount(): number;
						public getViewClass(): string;
						public getPadding(param0: number): number;
						public hasUpdates(): boolean;
						public isDescendantOf(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): boolean;
						public setAlignContent(param0: com.facebook.yoga.YogaAlign): void;
						public hasUnseenUpdates(): boolean;
						public updateProperties(param0: com.facebook.react.uimanager.ReactStylesDiffMap): void;
						public setAlignSelf(param0: com.facebook.yoga.YogaAlign): void;
						public setSelection(param0: com.facebook.react.bridge.ReadableMap): void;
						public getLayoutParent(): any;
						public setRootTag(param0: number): void;
						public markLayoutSeen(): void;
						public shouldNotifyOnLayout(): boolean;
						public getParent(): any;
						public getLayoutHeight(): number;
						public markUpdateSeen(): void;
						public setPadding(param0: number, param1: number): void;
						public addChildAt(param0: any, param1: number): void;
						public constructor();
						public getStyleHeight(): com.facebook.yoga.YogaValue;
						public setMostRecentEventCount(param0: number): void;
						public addNativeChildAt(param0: com.facebook.react.uimanager.ReactShadowNodeImpl, param1: number): void;
						public setIsLayoutOnly(param0: boolean): void;
						public setOverflow(param0: string): void;
						public calculateLayout(): void;
						public setFlexBasisPercent(param0: number): void;
						public hasNewLayout(): boolean;
						public isDescendantOf(param0: any): boolean;
						public getNativeOffsetForChild(param0: any): number;
						public onCollectExtraUpdates(param0: com.facebook.react.uimanager.UIViewOperationQueue): void;
						public setPosition(param0: string): void;
						public setPosition(param0: number, param1: number): void;
						public setStyleWidth(param0: number): void;
						public setTextBreakStrategy(param0: string): void;
						public getScreenY(): number;
						public isVirtualAnchor(): boolean;
						public isMeasureDefined(): boolean;
						public setStyleMaxWidthPercent(param0: number): void;
						public getStyleWidth(): com.facebook.yoga.YogaValue;
						public setAlignItems(param0: string): void;
						public setFlexWrap(param0: string): void;
						public getText(): string;
						public setDisplay(param0: string): void;
						public getPlaceholder(): string;
						public setDisplay(param0: com.facebook.yoga.YogaDisplay): void;
						public getLayoutDirection(): com.facebook.yoga.YogaDirection;
						public setFlex(param0: number): void;
						public getHeightMeasureSpec(): java.lang.Integer;
						public calculateLayoutOnChildren(): java.lang.Iterable<any>;
						public getRootTag(): number;
						public setAlignContent(param0: string): void;
						public getTotalNativeChildren(): number;
						public indexOfNativeChild(param0: any): number;
						public setFlexBasis(param0: com.facebook.react.bridge.Dynamic): void;
						public getReactTag(): number;
						public getChildCount(): number;
						public getNativeParent(): com.facebook.react.uimanager.ReactShadowNodeImpl;
						public getNativeKind(): com.facebook.react.uimanager.NativeKind;
						public setFlexWrap(param0: com.facebook.yoga.YogaWrap): void;
						public setFlexDirection(param0: string): void;
						public isDirty(): boolean;
						public calculateLayout(param0: number, param1: number): void;
						public setPositionType(param0: com.facebook.yoga.YogaPositionType): void;
						public removeChildAt(param0: number): com.facebook.react.uimanager.ReactShadowNodeImpl;
						public getNativeOffsetForChild(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): number;
						public setMargin(param0: number, param1: number): void;
						public getStylePadding(param0: number): com.facebook.yoga.YogaValue;
						public dispatchUpdates(param0: number, param1: number, param2: com.facebook.react.uimanager.UIViewOperationQueue, param3: com.facebook.react.uimanager.NativeViewHierarchyOptimizer): boolean;
						public setStyleHeightPercent(param0: number): void;
						public setStyleMinHeight(param0: number): void;
						public setDefaultPadding(param0: number, param1: number): void;
						public setPositionPercent(param0: number, param1: number): void;
						public setStyleMinWidthPercent(param0: number): void;
						public setStyleHeight(param0: number): void;
						public setPaddingPercent(param0: number, param1: number): void;
						public setStyleWidthAuto(): void;
						public setAlignItems(param0: com.facebook.yoga.YogaAlign): void;
						public removeAllNativeChildren(): void;
						public setStyleMinHeightPercent(param0: number): void;
						public setFlexDirection(param0: com.facebook.yoga.YogaFlexDirection): void;
						public setOverflow(param0: com.facebook.yoga.YogaOverflow): void;
						public getLayoutY(): number;
						public removeNativeChildAt(param0: number): com.facebook.react.uimanager.ReactShadowNodeImpl;
						public setJustifyContent(param0: string): void;
						public setStyleMaxHeightPercent(param0: number): void;
						public setJustifyContent(param0: com.facebook.yoga.YogaJustify): void;
						public setStyleMaxHeight(param0: number): void;
						public setAlignSelf(param0: string): void;
						public createInternalEditText(): globalAndroid.widget.EditText;
						public removeNativeChildAt(param0: number): any;
						public setMarginPercent(param0: number, param1: number): void;
						public getChildAt(param0: number): any;
						public setReactTag(param0: number): void;
						public setMeasureSpecs(param0: number, param1: number): void;
						public measure(param0: com.facebook.yoga.YogaNode, param1: number, param2: com.facebook.yoga.YogaMeasureMode, param3: number, param4: com.facebook.yoga.YogaMeasureMode): number;
						public setThemedContext(param0: com.facebook.react.uimanager.ThemedReactContext): void;
						public dirty(): void;
						public onBeforeLayout(param0: com.facebook.react.uimanager.NativeViewHierarchyOptimizer): void;
						public getWidthMeasureSpec(): java.lang.Integer;
						public removeAndDisposeAllChildren(): void;
						public hoistNativeChildren(): boolean;
						public dispose(): void;
						public setFlexBasisAuto(): void;
						public indexOf(param0: any): number;
						public isLayoutOnly(): boolean;
						public onAfterUpdateTransaction(): void;
						public setMarginAuto(param0: number): void;
						public setShouldNotifyOnLayout(param0: boolean): void;
						public markUpdated(): void;
						public setLayoutParent(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): void;
						public getScreenHeight(): number;
						public setStyleAspectRatio(param0: number): void;
						public addChildAt(param0: com.facebook.react.uimanager.ReactShadowNodeImpl, param1: number): void;
						public addNativeChildAt(param0: any, param1: number): void;
						public getChildAt(param0: number): com.facebook.react.uimanager.ReactShadowNodeImpl;
						public getThemedContext(): com.facebook.react.uimanager.ThemedReactContext;
						public getScreenX(): number;
						public getLayoutWidth(): number;
						public isYogaLeafNode(): boolean;
						public setStyleMaxWidth(param0: number): void;
						public setStyleWidthPercent(param0: number): void;
						public setStyleHeightAuto(): void;
						public getScreenWidth(): number;
						public getLayoutX(): number;
						public setStyleMinWidth(param0: number): void;
						public setBaselineFunction(param0: com.facebook.yoga.YogaBaselineFunction): void;
						public setFlexGrow(param0: number): void;
						public removeChildAt(param0: number): any;
						public setLayoutDirection(param0: com.facebook.yoga.YogaDirection): void;
						public getParent(): com.facebook.react.uimanager.ReactShadowNodeImpl;
						public getLayoutParent(): com.facebook.react.uimanager.ReactShadowNodeImpl;
						public indexOfNativeChild(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): number;
						public isVirtual(): boolean;
						public setMeasureFunction(param0: com.facebook.yoga.YogaMeasureFunction): void;
						public setViewClassName(param0: string): void;
						public setPlaceholder(param0: string): void;
						public setLocalData(param0: any): void;
						public constructor(param0: com.facebook.react.views.text.ReactTextViewManagerCallback);
						public setLayoutParent(param0: any): void;
						public setFlexShrink(param0: number): void;
						public getHierarchyInfo(): string;
						public setFlexBasis(param0: number): void;
						public getNativeParent(): any;
						public setText(param0: string): void;
						public indexOf(param0: com.facebook.react.uimanager.ReactShadowNodeImpl): number;
						public setBorder(param0: number, param1: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module textinput {
					export class ReactTextInputSubmitEditingEvent extends com.facebook.react.uimanager.events.Event<com.facebook.react.views.textinput.ReactTextInputSubmitEditingEvent> {
						public static class: java.lang.Class<com.facebook.react.views.textinput.ReactTextInputSubmitEditingEvent>;
						public constructor();
						public constructor(param0: number, param1: string);
						public canCoalesce(): boolean;
						public getEventName(): string;
						public constructor(param0: number);
						public dispatch(param0: com.facebook.react.uimanager.events.RCTEventEmitter): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module textinput {
					export class ScrollWatcher {
						public static class: java.lang.Class<com.facebook.react.views.textinput.ScrollWatcher>;
						/**
						 * Constructs a new instance of the com.facebook.react.views.textinput.ScrollWatcher interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onScrollChanged(param0: number, param1: number, param2: number, param3: number): void;
						});
						public constructor();
						public onScrollChanged(param0: number, param1: number, param2: number, param3: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module textinput {
					export class SelectionWatcher {
						public static class: java.lang.Class<com.facebook.react.views.textinput.SelectionWatcher>;
						/**
						 * Constructs a new instance of the com.facebook.react.views.textinput.SelectionWatcher interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onSelectionChanged(param0: number, param1: number): void;
						});
						public constructor();
						public onSelectionChanged(param0: number, param1: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module unimplementedview {
					export class ReactUnimplementedView {
						public static class: java.lang.Class<com.facebook.react.views.unimplementedview.ReactUnimplementedView>;
						public constructor(param0: globalAndroid.content.Context);
						public setName(param0: string): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module unimplementedview {
					export class ReactUnimplementedViewManager extends com.facebook.react.uimanager.ViewGroupManager<com.facebook.react.views.unimplementedview.ReactUnimplementedView> {
						public static class: java.lang.Class<com.facebook.react.views.unimplementedview.ReactUnimplementedViewManager>;
						public static REACT_CLASS: string;
						public setBorderRadius(param0: any, param1: number): void;
						public setBorderBottomRightRadius(param0: any, param1: number): void;
						public createViewInstance(param0: com.facebook.react.uimanager.ThemedReactContext): any;
						public setTranslateX(param0: any, param1: number): void;
						public setZIndex(param0: any, param1: number): void;
						public onCatalystInstanceDestroy(): void;
						public setAccessibilityLiveRegion(param0: any, param1: string): void;
						public getName(): string;
						public setName(param0: com.facebook.react.views.unimplementedview.ReactUnimplementedView, param1: string): void;
						public setBorderTopLeftRadius(param0: any, param1: number): void;
						/** @deprecated */
						public setScaleX(param0: any, param1: number): void;
						public setScaleX(param0: any, param1: number): void;
						/** @deprecated */
						public setTranslateX(param0: any, param1: number): void;
						public setTestId(param0: any, param1: string): void;
						public setImportantForAccessibility(param0: any, param1: string): void;
						public setAccessibilityRole(param0: any, param1: string): void;
						public setNativeId(param0: any, param1: string): void;
						public setTransform(param0: any, param1: com.facebook.react.bridge.ReadableArray): void;
						public setAccessibilityActions(param0: any, param1: com.facebook.react.bridge.ReadableArray): void;
						public createViewInstance(param0: com.facebook.react.uimanager.ThemedReactContext): com.facebook.react.views.unimplementedview.ReactUnimplementedView;
						public constructor();
						public setTranslateY(param0: any, param1: number): void;
						public setAccessibilityHint(param0: any, param1: string): void;
						public setElevation(param0: any, param1: number): void;
						public setOpacity(param0: any, param1: number): void;
						public canOverrideExistingModule(): boolean;
						public createViewInstance(param0: com.facebook.react.uimanager.ThemedReactContext, param1: com.facebook.react.uimanager.ReactStylesDiffMap, param2: com.facebook.react.uimanager.StateWrapper): any;
						/** @deprecated */
						public setScaleY(param0: any, param1: number): void;
						public setRenderToHardwareTexture(param0: any, param1: boolean): void;
						public setBackgroundColor(param0: any, param1: number): void;
						public setRotation(param0: any, param1: number): void;
						/** @deprecated */
						public setRotation(param0: any, param1: number): void;
						public setAccessibilityLabel(param0: any, param1: string): void;
						public setViewState(param0: any, param1: com.facebook.react.bridge.ReadableMap): void;
						public initialize(): void;
						public setBorderBottomLeftRadius(param0: any, param1: number): void;
						public setBorderTopRightRadius(param0: any, param1: number): void;
						/** @deprecated */
						public setTranslateY(param0: any, param1: number): void;
						public setScaleY(param0: any, param1: number): void;
						public needsCustomLayoutForChildren(): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module view {
					export class ColorUtil {
						public static class: java.lang.Class<com.facebook.react.views.view.ColorUtil>;
						public constructor();
						public static getOpacityFromColor(param0: number): number;
						public static multiplyColorAlpha(param0: number, param1: number): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module view {
					export class MeasureUtil {
						public static class: java.lang.Class<com.facebook.react.views.view.MeasureUtil>;
						public constructor();
						public static getMeasureSpec(param0: number, param1: com.facebook.yoga.YogaMeasureMode): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module view {
					export abstract class ReactClippingViewManager<T>  extends com.facebook.react.uimanager.ViewGroupManager<any> {
						public static class: java.lang.Class<com.facebook.react.views.view.ReactClippingViewManager<any>>;
						public setBorderRadius(param0: any, param1: number): void;
						public setBorderBottomRightRadius(param0: any, param1: number): void;
						public setTranslateX(param0: any, param1: number): void;
						public setZIndex(param0: any, param1: number): void;
						public getChildCount(param0: any): number;
						public onCatalystInstanceDestroy(): void;
						public setAccessibilityLiveRegion(param0: any, param1: string): void;
						public getName(): string;
						public setBorderTopLeftRadius(param0: any, param1: number): void;
						/** @deprecated */
						public setScaleX(param0: any, param1: number): void;
						public removeAllViews(param0: any): void;
						public setScaleX(param0: any, param1: number): void;
						/** @deprecated */
						public setTranslateX(param0: any, param1: number): void;
						public setTestId(param0: any, param1: string): void;
						public setImportantForAccessibility(param0: any, param1: string): void;
						public setAccessibilityRole(param0: any, param1: string): void;
						public setNativeId(param0: any, param1: string): void;
						public setTransform(param0: any, param1: com.facebook.react.bridge.ReadableArray): void;
						public setAccessibilityActions(param0: any, param1: com.facebook.react.bridge.ReadableArray): void;
						public constructor();
						public setTranslateY(param0: any, param1: number): void;
						public setAccessibilityHint(param0: any, param1: string): void;
						public setElevation(param0: any, param1: number): void;
						public setOpacity(param0: any, param1: number): void;
						public canOverrideExistingModule(): boolean;
						/** @deprecated */
						public setScaleY(param0: any, param1: number): void;
						public setRenderToHardwareTexture(param0: any, param1: boolean): void;
						public addView(param0: any, param1: globalAndroid.view.View, param2: number): void;
						public setBackgroundColor(param0: any, param1: number): void;
						public setRotation(param0: any, param1: number): void;
						/** @deprecated */
						public setRotation(param0: any, param1: number): void;
						public setAccessibilityLabel(param0: any, param1: string): void;
						public setRemoveClippedSubviews(param0: any, param1: boolean): void;
						public setViewState(param0: any, param1: com.facebook.react.bridge.ReadableMap): void;
						public initialize(): void;
						public setBorderBottomLeftRadius(param0: any, param1: number): void;
						public removeViewAt(param0: any, param1: number): void;
						public setBorderTopRightRadius(param0: any, param1: number): void;
						/** @deprecated */
						public setTranslateY(param0: any, param1: number): void;
						public getChildAt(param0: any, param1: number): globalAndroid.view.View;
						public setScaleY(param0: any, param1: number): void;
						public needsCustomLayoutForChildren(): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module view {
					export class ReactDrawableHelper {
						public static class: java.lang.Class<com.facebook.react.views.view.ReactDrawableHelper>;
						public constructor();
						public static createDrawableFromJSDescription(param0: globalAndroid.content.Context, param1: com.facebook.react.bridge.ReadableMap): globalAndroid.graphics.drawable.Drawable;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module view {
					export class ReactViewBackgroundDrawable {
						public static class: java.lang.Class<com.facebook.react.views.view.ReactViewBackgroundDrawable>;
						public hasRoundedBorders(): boolean;
						public getBorderRadiusOrDefaultTo(param0: number, param1: com.facebook.react.views.view.ReactViewBackgroundDrawable.BorderRadiusLocation): number;
						public getColor(): number;
						public constructor(param0: globalAndroid.content.Context);
						public getBorderRadius(param0: com.facebook.react.views.view.ReactViewBackgroundDrawable.BorderRadiusLocation): number;
						public getAlpha(): number;
						public getFullBorderWidth(): number;
						public onBoundsChange(param0: globalAndroid.graphics.Rect): void;
						public setColorFilter(param0: globalAndroid.graphics.ColorFilter): void;
						public setBorderColor(param0: number, param1: number, param2: number): void;
						public setResolvedLayoutDirection(param0: number): boolean;
						public setBorderStyle(param0: string): void;
						public getDirectionAwareBorderInsets(): globalAndroid.graphics.RectF;
						public getOpacity(): number;
						public setColor(param0: number): void;
						public getResolvedLayoutDirection(): number;
						public setAlpha(param0: number): void;
						public getOutline(param0: any): void;
						public draw(param0: globalAndroid.graphics.Canvas): void;
						public setRadius(param0: number): void;
						public onResolvedLayoutDirectionChanged(param0: number): boolean;
						public getBorderWidthOrDefaultTo(param0: number, param1: number): number;
						public setBorderWidth(param0: number, param1: number): void;
						public getFullBorderRadius(): number;
						public setRadius(param0: number, param1: number): void;
					}
					export module ReactViewBackgroundDrawable {
						export class BorderRadiusLocation {
							public static class: java.lang.Class<com.facebook.react.views.view.ReactViewBackgroundDrawable.BorderRadiusLocation>;
							public static TOP_LEFT: com.facebook.react.views.view.ReactViewBackgroundDrawable.BorderRadiusLocation;
							public static TOP_RIGHT: com.facebook.react.views.view.ReactViewBackgroundDrawable.BorderRadiusLocation;
							public static BOTTOM_RIGHT: com.facebook.react.views.view.ReactViewBackgroundDrawable.BorderRadiusLocation;
							public static BOTTOM_LEFT: com.facebook.react.views.view.ReactViewBackgroundDrawable.BorderRadiusLocation;
							public static TOP_START: com.facebook.react.views.view.ReactViewBackgroundDrawable.BorderRadiusLocation;
							public static TOP_END: com.facebook.react.views.view.ReactViewBackgroundDrawable.BorderRadiusLocation;
							public static BOTTOM_START: com.facebook.react.views.view.ReactViewBackgroundDrawable.BorderRadiusLocation;
							public static BOTTOM_END: com.facebook.react.views.view.ReactViewBackgroundDrawable.BorderRadiusLocation;
							public static values(): native.Array<com.facebook.react.views.view.ReactViewBackgroundDrawable.BorderRadiusLocation>;
							public static valueOf(param0: string): com.facebook.react.views.view.ReactViewBackgroundDrawable.BorderRadiusLocation;
						}
						export class BorderStyle {
							public static class: java.lang.Class<com.facebook.react.views.view.ReactViewBackgroundDrawable.BorderStyle>;
							public static SOLID: com.facebook.react.views.view.ReactViewBackgroundDrawable.BorderStyle;
							public static DASHED: com.facebook.react.views.view.ReactViewBackgroundDrawable.BorderStyle;
							public static DOTTED: com.facebook.react.views.view.ReactViewBackgroundDrawable.BorderStyle;
							public static getPathEffect(param0: com.facebook.react.views.view.ReactViewBackgroundDrawable.BorderStyle, param1: number): globalAndroid.graphics.PathEffect;
							public static values(): native.Array<com.facebook.react.views.view.ReactViewBackgroundDrawable.BorderStyle>;
							public static valueOf(param0: string): com.facebook.react.views.view.ReactViewBackgroundDrawable.BorderStyle;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module view {
					export class ReactViewBackgroundManager {
						public static class: java.lang.Class<com.facebook.react.views.view.ReactViewBackgroundManager>;
						public setBorderStyle(param0: string): void;
						public setBorderRadius(param0: number): void;
						public setBorderRadius(param0: number, param1: number): void;
						public setBorderWidth(param0: number, param1: number): void;
						public constructor(param0: globalAndroid.view.View);
						public setBackgroundColor(param0: number): void;
						public setBorderColor(param0: number, param1: number, param2: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module view {
					export class ReactViewGroup implements com.facebook.react.touch.ReactInterceptingViewGroup, com.facebook.react.uimanager.ReactClippingViewGroup, com.facebook.react.uimanager.ReactPointerEventsView, com.facebook.react.touch.ReactHitSlopView, com.facebook.react.uimanager.ReactZIndexedViewGroup {
						public static class: java.lang.Class<com.facebook.react.views.view.ReactViewGroup>;
						public constructor(param0: globalAndroid.content.Context);
						public updateClippingRect(): void;
						public dispatchSetPressed(param0: boolean): void;
						public setBorderRadius(param0: number, param1: number): void;
						public removeViewAt(param0: number): void;
						public setOpacityIfPossible(param0: number): void;
						public onAttachedToWindow(): void;
						public setRemoveClippedSubviews(param0: boolean): void;
						public setTranslucentBackgroundDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
						public getHitSlopRect(): globalAndroid.graphics.Rect;
						public setOnInterceptTouchEventListener(param0: com.facebook.react.touch.OnInterceptTouchEventListener): void;
						public getRemoveClippedSubviews(): boolean;
						public onLayout(param0: boolean, param1: number, param2: number, param3: number, param4: number): void;
						public getZIndexMappedChildIndex(param0: number): number;
						public onSizeChanged(param0: number, param1: number, param2: number, param3: number): void;
						public setBackfaceVisibility(param0: string): void;
						public addView(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.view.ViewGroup.LayoutParams): void;
						public onInterceptTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
						public setBackgroundColor(param0: number): void;
						public onMeasure(param0: number, param1: number): void;
						public setBorderColor(param0: number, param1: number, param2: number): void;
						public getPointerEvents(): com.facebook.react.uimanager.PointerEvents;
						public dispatchDraw(param0: globalAndroid.graphics.Canvas): void;
						public onRtlPropertiesChanged(param0: number): void;
						public onTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
						public setBorderStyle(param0: string): void;
						public removeView(param0: globalAndroid.view.View): void;
						public getBackgroundColor(): number;
						public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point): boolean;
						public setHitSlopRect(param0: globalAndroid.graphics.Rect): void;
						public setOverflow(param0: string): void;
						public getClippingRect(param0: globalAndroid.graphics.Rect): void;
						public hasOverlappingRendering(): boolean;
						public getChildDrawingOrder(param0: number, param1: number): number;
						public updateDrawingOrder(): void;
						public dispatchProvideStructure(param0: any): void;
						public setBackfaceVisibilityDependantOpacity(): void;
						public setBorderRadius(param0: number): void;
						public setNeedsOffscreenAlphaCompositing(param0: boolean): void;
						public setBorderWidth(param0: number, param1: number): void;
						public requestLayout(): void;
						public getOverflow(): string;
						public setBackground(param0: globalAndroid.graphics.drawable.Drawable): void;
					}
					export module ReactViewGroup {
						export class ChildrenLayoutChangeListener {
							public static class: java.lang.Class<com.facebook.react.views.view.ReactViewGroup.ChildrenLayoutChangeListener>;
							public onLayoutChange(param0: globalAndroid.view.View, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: number, param8: number): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module view {
					export class ReactViewManager extends com.facebook.react.views.view.ReactClippingViewManager<com.facebook.react.views.view.ReactViewGroup> {
						public static class: java.lang.Class<com.facebook.react.views.view.ReactViewManager>;
						public static REACT_CLASS: string;
						public setBorderRadius(param0: any, param1: number): void;
						public setOpacity(param0: com.facebook.react.views.view.ReactViewGroup, param1: number): void;
						public createViewInstance(param0: com.facebook.react.uimanager.ThemedReactContext): any;
						public setTranslateX(param0: any, param1: number): void;
						public setNativeForeground(param0: com.facebook.react.views.view.ReactViewGroup, param1: com.facebook.react.bridge.ReadableMap): void;
						public setAccessible(param0: com.facebook.react.views.view.ReactViewGroup, param1: boolean): void;
						public setAccessibilityLiveRegion(param0: any, param1: string): void;
						public setBorderWidth(param0: com.facebook.react.views.view.ReactViewGroup, param1: number, param2: number): void;
						public setScaleX(param0: any, param1: number): void;
						/** @deprecated */
						public setTranslateX(param0: any, param1: number): void;
						public setTestId(param0: any, param1: string): void;
						public setImportantForAccessibility(param0: any, param1: string): void;
						public setAccessibilityRole(param0: any, param1: string): void;
						public setNativeId(param0: any, param1: string): void;
						public setAccessibilityActions(param0: any, param1: com.facebook.react.bridge.ReadableArray): void;
						public constructor();
						public setBorderRadius(param0: com.facebook.react.views.view.ReactViewGroup, param1: number, param2: number): void;
						public setTransform(param0: com.facebook.react.views.view.ReactViewGroup, param1: com.facebook.react.bridge.ReadableArray): void;
						/** @deprecated */
						public receiveCommand(param0: any, param1: number, param2: com.facebook.react.bridge.ReadableArray): void;
						public setTranslateY(param0: any, param1: number): void;
						public setOpacity(param0: any, param1: number): void;
						public setAccessibilityHint(param0: any, param1: string): void;
						public setElevation(param0: any, param1: number): void;
						public canOverrideExistingModule(): boolean;
						public setCollapsable(param0: com.facebook.react.views.view.ReactViewGroup, param1: boolean): void;
						public receiveCommand(param0: com.facebook.react.views.view.ReactViewGroup, param1: string, param2: com.facebook.react.bridge.ReadableArray): void;
						/** @deprecated */
						public setScaleY(param0: any, param1: number): void;
						public receiveCommand(param0: com.facebook.react.views.view.ReactViewGroup, param1: number, param2: com.facebook.react.bridge.ReadableArray): void;
						public setBorderColor(param0: com.facebook.react.views.view.ReactViewGroup, param1: number, param2: java.lang.Integer): void;
						/** @deprecated */
						public setRotation(param0: any, param1: number): void;
						public setAccessibilityLabel(param0: any, param1: string): void;
						public initialize(): void;
						public nextFocusForward(param0: com.facebook.react.views.view.ReactViewGroup, param1: number): void;
						public setOverflow(param0: com.facebook.react.views.view.ReactViewGroup, param1: string): void;
						public setScaleY(param0: any, param1: number): void;
						public nextFocusUp(param0: com.facebook.react.views.view.ReactViewGroup, param1: number): void;
						public setHitSlop(param0: com.facebook.react.views.view.ReactViewGroup, param1: com.facebook.react.bridge.ReadableMap): void;
						public needsCustomLayoutForChildren(): boolean;
						public setBorderBottomRightRadius(param0: any, param1: number): void;
						public setZIndex(param0: any, param1: number): void;
						public nextFocusDown(param0: com.facebook.react.views.view.ReactViewGroup, param1: number): void;
						public onCatalystInstanceDestroy(): void;
						public setNativeBackground(param0: com.facebook.react.views.view.ReactViewGroup, param1: com.facebook.react.bridge.ReadableMap): void;
						public getName(): string;
						public getCommandsMap(): java.util.Map<string,java.lang.Integer>;
						public receiveCommand(param0: any, param1: string, param2: com.facebook.react.bridge.ReadableArray): void;
						public setPointerEvents(param0: com.facebook.react.views.view.ReactViewGroup, param1: string): void;
						public setBorderTopLeftRadius(param0: any, param1: number): void;
						/** @deprecated */
						public setScaleX(param0: any, param1: number): void;
						public setTVPreferredFocus(param0: com.facebook.react.views.view.ReactViewGroup, param1: boolean): void;
						public setBackfaceVisibility(param0: com.facebook.react.views.view.ReactViewGroup, param1: string): void;
						public setNeedsOffscreenAlphaCompositing(param0: com.facebook.react.views.view.ReactViewGroup, param1: boolean): void;
						public setBorderStyle(param0: com.facebook.react.views.view.ReactViewGroup, param1: string): void;
						public nextFocusRight(param0: com.facebook.react.views.view.ReactViewGroup, param1: number): void;
						public setTransform(param0: any, param1: com.facebook.react.bridge.ReadableArray): void;
						public setFocusable(param0: com.facebook.react.views.view.ReactViewGroup, param1: boolean): void;
						public createViewInstance(param0: com.facebook.react.uimanager.ThemedReactContext, param1: com.facebook.react.uimanager.ReactStylesDiffMap, param2: com.facebook.react.uimanager.StateWrapper): any;
						public setRenderToHardwareTexture(param0: any, param1: boolean): void;
						public setBackgroundColor(param0: any, param1: number): void;
						public setRotation(param0: any, param1: number): void;
						public setViewState(param0: any, param1: com.facebook.react.bridge.ReadableMap): void;
						public setBorderBottomLeftRadius(param0: any, param1: number): void;
						public nextFocusLeft(param0: com.facebook.react.views.view.ReactViewGroup, param1: number): void;
						public setBorderTopRightRadius(param0: any, param1: number): void;
						/** @deprecated */
						public setTranslateY(param0: any, param1: number): void;
						public createViewInstance(param0: com.facebook.react.uimanager.ThemedReactContext): com.facebook.react.views.view.ReactViewGroup;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module view {
					export class ViewGroupClickEvent extends com.facebook.react.uimanager.events.Event<com.facebook.react.views.view.ViewGroupClickEvent> {
						public static class: java.lang.Class<com.facebook.react.views.view.ViewGroupClickEvent>;
						public constructor();
						public canCoalesce(): boolean;
						public getEventName(): string;
						public constructor(param0: number);
						public dispatch(param0: com.facebook.react.uimanager.events.RCTEventEmitter): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module viewpager {
					export class PageScrollEvent extends com.facebook.react.uimanager.events.Event<com.facebook.react.views.viewpager.PageScrollEvent> {
						public static class: java.lang.Class<com.facebook.react.views.viewpager.PageScrollEvent>;
						public static EVENT_NAME: string;
						public constructor();
						public getEventName(): string;
						public constructor(param0: number);
						public constructor(param0: number, param1: number, param2: number);
						public dispatch(param0: com.facebook.react.uimanager.events.RCTEventEmitter): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module viewpager {
					export class PageScrollStateChangedEvent extends com.facebook.react.uimanager.events.Event<com.facebook.react.views.viewpager.PageScrollStateChangedEvent> {
						public static class: java.lang.Class<com.facebook.react.views.viewpager.PageScrollStateChangedEvent>;
						public static EVENT_NAME: string;
						public constructor();
						public constructor(param0: number, param1: string);
						public getEventName(): string;
						public constructor(param0: number);
						public dispatch(param0: com.facebook.react.uimanager.events.RCTEventEmitter): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module viewpager {
					export class PageSelectedEvent extends com.facebook.react.uimanager.events.Event<com.facebook.react.views.viewpager.PageSelectedEvent> {
						public static class: java.lang.Class<com.facebook.react.views.viewpager.PageSelectedEvent>;
						public static EVENT_NAME: string;
						public constructor();
						public getEventName(): string;
						public constructor(param0: number);
						public constructor(param0: number, param1: number);
						public dispatch(param0: com.facebook.react.uimanager.events.RCTEventEmitter): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module viewpager {
					export class ReactViewPager {
						public static class: java.lang.Class<com.facebook.react.views.viewpager.ReactViewPager>;
						public onTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
						public removeAllViewsFromAdapter(): void;
						public setViews(param0: java.util.List<globalAndroid.view.View>): void;
						public getAdapter(): com.facebook.react.views.viewpager.ReactViewPager.Adapter;
						public setCurrentItemFromJs(param0: number, param1: boolean): void;
						public setScrollEnabled(param0: boolean): void;
						public onAttachedToWindow(): void;
						public constructor(param0: com.facebook.react.bridge.ReactContext);
						public onInterceptTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
					}
					export module ReactViewPager {
						export class Adapter {
							public static class: java.lang.Class<com.facebook.react.views.viewpager.ReactViewPager.Adapter>;
							public isViewFromObject(param0: globalAndroid.view.View, param1: any): boolean;
							public getItemPosition(param0: any): number;
							public instantiateItem(param0: globalAndroid.view.ViewGroup, param1: number): any;
							public destroyItem(param0: globalAndroid.view.ViewGroup, param1: number, param2: any): void;
							public getCount(): number;
						}
						export class PageChangeListener {
							public static class: java.lang.Class<com.facebook.react.views.viewpager.ReactViewPager.PageChangeListener>;
							public onPageScrollStateChanged(param0: number): void;
							public onPageScrolled(param0: number, param1: number, param2: number): void;
							public onPageSelected(param0: number): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module react {
			export module views {
				export module viewpager {
					export class ReactViewPagerManager extends com.facebook.react.uimanager.ViewGroupManager<com.facebook.react.views.viewpager.ReactViewPager> implements com.facebook.react.viewmanagers.AndroidViewPagerManagerInterface<com.facebook.react.views.viewpager.ReactViewPager>  {
						public static class: java.lang.Class<com.facebook.react.views.viewpager.ReactViewPagerManager>;
						public static REACT_CLASS: string;
						public static COMMAND_SET_PAGE: number;
						public static COMMAND_SET_PAGE_WITHOUT_ANIMATION: number;
						public setBorderRadius(param0: any, param1: number): void;
						public createViewInstance(param0: com.facebook.react.uimanager.ThemedReactContext): any;
						public setTranslateX(param0: any, param1: number): void;
						public getChildCount(param0: any): number;
						public setPeekEnabled(param0: com.facebook.react.views.viewpager.ReactViewPager, param1: boolean): void;
						public setPeekEnabled(param0: any, param1: boolean): void;
						public setAccessibilityLiveRegion(param0: any, param1: string): void;
						public getExportedCustomDirectEventTypeConstants(): java.util.Map<string,any>;
						public getDelegate(): com.facebook.react.uimanager.ViewManagerDelegate<com.facebook.react.views.viewpager.ReactViewPager>;
						public setInitialPage(param0: com.facebook.react.views.viewpager.ReactViewPager, param1: number): void;
						public setKeyboardDismissMode(param0: any, param1: string): void;
						public setScaleX(param0: any, param1: number): void;
						/** @deprecated */
						public setTranslateX(param0: any, param1: number): void;
						public setKeyboardDismissMode(param0: com.facebook.react.views.viewpager.ReactViewPager, param1: string): void;
						public getDelegate(): com.facebook.react.uimanager.ViewManagerDelegate<any>;
						public setTestId(param0: any, param1: string): void;
						public setImportantForAccessibility(param0: any, param1: string): void;
						public setAccessibilityRole(param0: any, param1: string): void;
						public setNativeId(param0: any, param1: string): void;
						public setPageWithoutAnimation(param0: any, param1: number): void;
						public setPageMargin(param0: any, param1: number): void;
						public setPageMargin(param0: com.facebook.react.views.viewpager.ReactViewPager, param1: number): void;
						public setAccessibilityActions(param0: any, param1: com.facebook.react.bridge.ReadableArray): void;
						public constructor();
						/** @deprecated */
						public receiveCommand(param0: any, param1: number, param2: com.facebook.react.bridge.ReadableArray): void;
						public setTranslateY(param0: any, param1: number): void;
						public setAccessibilityHint(param0: any, param1: string): void;
						public setElevation(param0: any, param1: number): void;
						public setOpacity(param0: any, param1: number): void;
						public canOverrideExistingModule(): boolean;
						/** @deprecated */
						public setScaleY(param0: any, param1: number): void;
						public setPageWithoutAnimation(param0: com.facebook.react.views.viewpager.ReactViewPager, param1: number): void;
						public removeViewAt(param0: com.facebook.react.views.viewpager.ReactViewPager, param1: number): void;
						public setInitialPage(param0: any, param1: number): void;
						/** @deprecated */
						public setRotation(param0: any, param1: number): void;
						public setAccessibilityLabel(param0: any, param1: string): void;
						public setPage(param0: com.facebook.react.views.viewpager.ReactViewPager, param1: number): void;
						public initialize(): void;
						public removeViewAt(param0: any, param1: number): void;
						public setScrollEnabled(param0: any, param1: boolean): void;
						public setScrollEnabled(param0: com.facebook.react.views.viewpager.ReactViewPager, param1: boolean): void;
						public getChildAt(param0: any, param1: number): globalAndroid.view.View;
						public setScaleY(param0: any, param1: number): void;
						public needsCustomLayoutForChildren(): boolean;
						public addView(param0: com.facebook.react.views.viewpager.ReactViewPager, param1: globalAndroid.view.View, param2: number): void;
						public setBorderBottomRightRadius(param0: any, param1: number): void;
						public setZIndex(param0: any, param1: number): void;
						public onCatalystInstanceDestroy(): void;
						public getChildAt(param0: com.facebook.react.views.viewpager.ReactViewPager, param1: number): globalAndroid.view.View;
						public getName(): string;
						public getCommandsMap(): java.util.Map<string,java.lang.Integer>;
						public receiveCommand(param0: any, param1: string, param2: com.facebook.react.bridge.ReadableArray): void;
						public setBorderTopLeftRadius(param0: any, param1: number): void;
						/** @deprecated */
						public setScaleX(param0: any, param1: number): void;
						public setTransform(param0: any, param1: com.facebook.react.bridge.ReadableArray): void;
						public receiveCommand(param0: com.facebook.react.views.viewpager.ReactViewPager, param1: number, param2: com.facebook.react.bridge.ReadableArray): void;
						public createViewInstance(param0: com.facebook.react.uimanager.ThemedReactContext): com.facebook.react.views.viewpager.ReactViewPager;
						public getExportedCustomDirectEventTypeConstants(): java.util.Map;
						public setPage(param0: any, param1: number): void;
						public createViewInstance(param0: com.facebook.react.uimanager.ThemedReactContext, param1: com.facebook.react.uimanager.ReactStylesDiffMap, param2: com.facebook.react.uimanager.StateWrapper): any;
						public setRenderToHardwareTexture(param0: any, param1: boolean): void;
						public addView(param0: any, param1: globalAndroid.view.View, param2: number): void;
						public setBackgroundColor(param0: any, param1: number): void;
						public setRotation(param0: any, param1: number): void;
						public receiveCommand(param0: com.facebook.react.views.viewpager.ReactViewPager, param1: string, param2: com.facebook.react.bridge.ReadableArray): void;
						public getChildCount(param0: com.facebook.react.views.viewpager.ReactViewPager): number;
						public setViewState(param0: any, param1: com.facebook.react.bridge.ReadableMap): void;
						public setBorderBottomLeftRadius(param0: any, param1: number): void;
						public setBorderTopRightRadius(param0: any, param1: number): void;
						/** @deprecated */
						public setTranslateY(param0: any, param1: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module systrace {
			export class Systrace {
				public static class: java.lang.Class<com.facebook.systrace.Systrace>;
				public static TRACE_TAG_REACT_JAVA_BRIDGE: number;
				public static TRACE_TAG_REACT_APPS: number;
				public static TRACE_TAG_REACT_FRESCO: number;
				public static TRACE_TAG_REACT_VIEW: number;
				public static TRACE_TAG_REACT_JS_VM_CALLS: number;
				public static stepAsyncFlow(param0: number, param1: string, param2: number): void;
				public static traceInstant(param0: number, param1: string, param2: com.facebook.systrace.Systrace.EventScope): void;
				public static registerListener(param0: com.facebook.systrace.TraceListener): void;
				public static endAsyncFlow(param0: number, param1: string, param2: number): void;
				public static beginSection(param0: number, param1: string): void;
				public static isTracing(param0: number): boolean;
				public static endAsyncSection(param0: number, param1: string, param2: number): void;
				public static startAsyncFlow(param0: number, param1: string, param2: number): void;
				public static beginAsyncSection(param0: number, param1: string, param2: number): void;
				public static unregisterListener(param0: com.facebook.systrace.TraceListener): void;
				public static endAsyncSection(param0: number, param1: string, param2: number, param3: number): void;
				public constructor();
				public static traceCounter(param0: number, param1: string, param2: number): void;
				public static endSection(param0: number): void;
				public static beginAsyncSection(param0: number, param1: string, param2: number, param3: number): void;
			}
			export module Systrace {
				export class EventScope {
					public static class: java.lang.Class<com.facebook.systrace.Systrace.EventScope>;
					public static THREAD: com.facebook.systrace.Systrace.EventScope;
					public static PROCESS: com.facebook.systrace.Systrace.EventScope;
					public static GLOBAL: com.facebook.systrace.Systrace.EventScope;
					public getCode(): string;
					public static valueOf(param0: string): com.facebook.systrace.Systrace.EventScope;
					public static values(): native.Array<com.facebook.systrace.Systrace.EventScope>;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module systrace {
			export class SystraceMessage {
				public static class: java.lang.Class<com.facebook.systrace.SystraceMessage>;
				public static endSection(param0: number): com.facebook.systrace.SystraceMessage.Builder;
				public static beginSection(param0: number, param1: string): com.facebook.systrace.SystraceMessage.Builder;
				public constructor();
			}
			export module SystraceMessage {
				export abstract class Builder {
					public static class: java.lang.Class<com.facebook.systrace.SystraceMessage.Builder>;
					public constructor();
					public arg(param0: string, param1: any): com.facebook.systrace.SystraceMessage.Builder;
					public arg(param0: string, param1: number): com.facebook.systrace.SystraceMessage.Builder;
					public flush(): void;
				}
				export class Flusher {
					public static class: java.lang.Class<com.facebook.systrace.SystraceMessage.Flusher>;
					/**
					 * Constructs a new instance of the com.facebook.systrace.SystraceMessage$Flusher interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						flush(param0: java.lang.StringBuilder): void;
					});
					public constructor();
					public flush(param0: java.lang.StringBuilder): void;
				}
				export class NoopBuilder extends com.facebook.systrace.SystraceMessage.Builder {
					public static class: java.lang.Class<com.facebook.systrace.SystraceMessage.NoopBuilder>;
					public arg(param0: string, param1: any): com.facebook.systrace.SystraceMessage.Builder;
					public arg(param0: string, param1: number): com.facebook.systrace.SystraceMessage.Builder;
					public flush(): void;
				}
			}
		}
	}
}

declare module com {
	export module facebook {
		export module systrace {
			export class TraceListener {
				public static class: java.lang.Class<com.facebook.systrace.TraceListener>;
				/**
				 * Constructs a new instance of the com.facebook.systrace.TraceListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					onTraceStarted(): void;
					onTraceStopped(): void;
				});
				public constructor();
				public onTraceStopped(): void;
				public onTraceStarted(): void;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module yoga {
			export class LayoutPassReason {
				public static class: java.lang.Class<com.facebook.yoga.LayoutPassReason>;
				public static INITIAL: com.facebook.yoga.LayoutPassReason;
				public static ABS_LAYOUT: com.facebook.yoga.LayoutPassReason;
				public static STRETCH: com.facebook.yoga.LayoutPassReason;
				public static MULTILINE_STRETCH: com.facebook.yoga.LayoutPassReason;
				public static FLEX_LAYOUT: com.facebook.yoga.LayoutPassReason;
				public static MEASURE: com.facebook.yoga.LayoutPassReason;
				public static ABS_MEASURE: com.facebook.yoga.LayoutPassReason;
				public static FLEX_MEASURE: com.facebook.yoga.LayoutPassReason;
				public static values(): native.Array<com.facebook.yoga.LayoutPassReason>;
				public static fromInt(param0: number): com.facebook.yoga.LayoutPassReason;
				public static valueOf(param0: string): com.facebook.yoga.LayoutPassReason;
				public intValue(): number;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module yoga {
			export class YogaAlign {
				public static class: java.lang.Class<com.facebook.yoga.YogaAlign>;
				public static AUTO: com.facebook.yoga.YogaAlign;
				public static FLEX_START: com.facebook.yoga.YogaAlign;
				public static CENTER: com.facebook.yoga.YogaAlign;
				public static FLEX_END: com.facebook.yoga.YogaAlign;
				public static STRETCH: com.facebook.yoga.YogaAlign;
				public static BASELINE: com.facebook.yoga.YogaAlign;
				public static SPACE_BETWEEN: com.facebook.yoga.YogaAlign;
				public static SPACE_AROUND: com.facebook.yoga.YogaAlign;
				public static valueOf(param0: string): com.facebook.yoga.YogaAlign;
				public intValue(): number;
				public static values(): native.Array<com.facebook.yoga.YogaAlign>;
				public static fromInt(param0: number): com.facebook.yoga.YogaAlign;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module yoga {
			export class YogaBaselineFunction {
				public static class: java.lang.Class<com.facebook.yoga.YogaBaselineFunction>;
				/**
				 * Constructs a new instance of the com.facebook.yoga.YogaBaselineFunction interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					baseline(param0: com.facebook.yoga.YogaNode, param1: number, param2: number): number;
				});
				public constructor();
				public baseline(param0: com.facebook.yoga.YogaNode, param1: number, param2: number): number;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module yoga {
			export abstract class YogaConfig {
				public static class: java.lang.Class<com.facebook.yoga.YogaConfig>;
				public static SPACING_TYPE: number;
				public setExperimentalFeatureEnabled(param0: com.facebook.yoga.YogaExperimentalFeature, param1: boolean): void;
				public setPointScaleFactor(param0: number): void;
				public setUseWebDefaults(param0: boolean): void;
				public setPrintTreeFlag(param0: boolean): void;
				public setUseLegacyStretchBehaviour(param0: boolean): void;
				public setShouldDiffLayoutWithoutLegacyStretchBehaviour(param0: boolean): void;
				public getLogger(): com.facebook.yoga.YogaLogger;
				public constructor();
				public setLogger(param0: com.facebook.yoga.YogaLogger): void;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module yoga {
			export abstract class YogaConfigFactory {
				public static class: java.lang.Class<com.facebook.yoga.YogaConfigFactory>;
				public static create(): com.facebook.yoga.YogaConfig;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module yoga {
			export abstract class YogaConfigJNIBase extends com.facebook.yoga.YogaConfig {
				public static class: java.lang.Class<com.facebook.yoga.YogaConfigJNIBase>;
				public setExperimentalFeatureEnabled(param0: com.facebook.yoga.YogaExperimentalFeature, param1: boolean): void;
				public setPointScaleFactor(param0: number): void;
				public setUseWebDefaults(param0: boolean): void;
				public setPrintTreeFlag(param0: boolean): void;
				public setUseLegacyStretchBehaviour(param0: boolean): void;
				public setShouldDiffLayoutWithoutLegacyStretchBehaviour(param0: boolean): void;
				public getLogger(): com.facebook.yoga.YogaLogger;
				public setLogger(param0: com.facebook.yoga.YogaLogger): void;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module yoga {
			export class YogaConfigJNIFinalizer extends com.facebook.yoga.YogaConfigJNIBase {
				public static class: java.lang.Class<com.facebook.yoga.YogaConfigJNIFinalizer>;
				public finalize(): void;
				public freeNatives(): void;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module yoga {
			export class YogaConstants {
				public static class: java.lang.Class<com.facebook.yoga.YogaConstants>;
				public static UNDEFINED: number;
				public static getUndefined(): number;
				public static isUndefined(param0: number): boolean;
				public static isUndefined(param0: com.facebook.yoga.YogaValue): boolean;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module yoga {
			export class YogaDimension {
				public static class: java.lang.Class<com.facebook.yoga.YogaDimension>;
				public static WIDTH: com.facebook.yoga.YogaDimension;
				public static HEIGHT: com.facebook.yoga.YogaDimension;
				public intValue(): number;
				public static fromInt(param0: number): com.facebook.yoga.YogaDimension;
				public static values(): native.Array<com.facebook.yoga.YogaDimension>;
				public static valueOf(param0: string): com.facebook.yoga.YogaDimension;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module yoga {
			export class YogaDirection {
				public static class: java.lang.Class<com.facebook.yoga.YogaDirection>;
				public static INHERIT: com.facebook.yoga.YogaDirection;
				public static LTR: com.facebook.yoga.YogaDirection;
				public static RTL: com.facebook.yoga.YogaDirection;
				public static valueOf(param0: string): com.facebook.yoga.YogaDirection;
				public static fromInt(param0: number): com.facebook.yoga.YogaDirection;
				public intValue(): number;
				public static values(): native.Array<com.facebook.yoga.YogaDirection>;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module yoga {
			export class YogaDisplay {
				public static class: java.lang.Class<com.facebook.yoga.YogaDisplay>;
				public static FLEX: com.facebook.yoga.YogaDisplay;
				public static NONE: com.facebook.yoga.YogaDisplay;
				public static values(): native.Array<com.facebook.yoga.YogaDisplay>;
				public intValue(): number;
				public static fromInt(param0: number): com.facebook.yoga.YogaDisplay;
				public static valueOf(param0: string): com.facebook.yoga.YogaDisplay;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module yoga {
			export class YogaEdge {
				public static class: java.lang.Class<com.facebook.yoga.YogaEdge>;
				public static LEFT: com.facebook.yoga.YogaEdge;
				public static TOP: com.facebook.yoga.YogaEdge;
				public static RIGHT: com.facebook.yoga.YogaEdge;
				public static BOTTOM: com.facebook.yoga.YogaEdge;
				public static START: com.facebook.yoga.YogaEdge;
				public static END: com.facebook.yoga.YogaEdge;
				public static HORIZONTAL: com.facebook.yoga.YogaEdge;
				public static VERTICAL: com.facebook.yoga.YogaEdge;
				public static ALL: com.facebook.yoga.YogaEdge;
				public static fromInt(param0: number): com.facebook.yoga.YogaEdge;
				public static values(): native.Array<com.facebook.yoga.YogaEdge>;
				public intValue(): number;
				public static valueOf(param0: string): com.facebook.yoga.YogaEdge;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module yoga {
			export class YogaExperimentalFeature {
				public static class: java.lang.Class<com.facebook.yoga.YogaExperimentalFeature>;
				public static WEB_FLEX_BASIS: com.facebook.yoga.YogaExperimentalFeature;
				public static values(): native.Array<com.facebook.yoga.YogaExperimentalFeature>;
				public static valueOf(param0: string): com.facebook.yoga.YogaExperimentalFeature;
				public intValue(): number;
				public static fromInt(param0: number): com.facebook.yoga.YogaExperimentalFeature;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module yoga {
			export class YogaFlexDirection {
				public static class: java.lang.Class<com.facebook.yoga.YogaFlexDirection>;
				public static COLUMN: com.facebook.yoga.YogaFlexDirection;
				public static COLUMN_REVERSE: com.facebook.yoga.YogaFlexDirection;
				public static ROW: com.facebook.yoga.YogaFlexDirection;
				public static ROW_REVERSE: com.facebook.yoga.YogaFlexDirection;
				public intValue(): number;
				public static values(): native.Array<com.facebook.yoga.YogaFlexDirection>;
				public static valueOf(param0: string): com.facebook.yoga.YogaFlexDirection;
				public static fromInt(param0: number): com.facebook.yoga.YogaFlexDirection;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module yoga {
			export class YogaJustify {
				public static class: java.lang.Class<com.facebook.yoga.YogaJustify>;
				public static FLEX_START: com.facebook.yoga.YogaJustify;
				public static CENTER: com.facebook.yoga.YogaJustify;
				public static FLEX_END: com.facebook.yoga.YogaJustify;
				public static SPACE_BETWEEN: com.facebook.yoga.YogaJustify;
				public static SPACE_AROUND: com.facebook.yoga.YogaJustify;
				public static SPACE_EVENLY: com.facebook.yoga.YogaJustify;
				public static values(): native.Array<com.facebook.yoga.YogaJustify>;
				public intValue(): number;
				public static valueOf(param0: string): com.facebook.yoga.YogaJustify;
				public static fromInt(param0: number): com.facebook.yoga.YogaJustify;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module yoga {
			export class YogaLayoutType {
				public static class: java.lang.Class<com.facebook.yoga.YogaLayoutType>;
				public static LAYOUT: com.facebook.yoga.YogaLayoutType;
				public static MEASURE: com.facebook.yoga.YogaLayoutType;
				public static CACHED_LAYOUT: com.facebook.yoga.YogaLayoutType;
				public static CACHED_MEASURE: com.facebook.yoga.YogaLayoutType;
				public static valueOf(param0: string): com.facebook.yoga.YogaLayoutType;
				public static values(): native.Array<com.facebook.yoga.YogaLayoutType>;
				public intValue(): number;
				public static fromInt(param0: number): com.facebook.yoga.YogaLayoutType;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module yoga {
			export class YogaLogLevel {
				public static class: java.lang.Class<com.facebook.yoga.YogaLogLevel>;
				public static ERROR: com.facebook.yoga.YogaLogLevel;
				public static WARN: com.facebook.yoga.YogaLogLevel;
				public static INFO: com.facebook.yoga.YogaLogLevel;
				public static DEBUG: com.facebook.yoga.YogaLogLevel;
				public static VERBOSE: com.facebook.yoga.YogaLogLevel;
				public static FATAL: com.facebook.yoga.YogaLogLevel;
				public static values(): native.Array<com.facebook.yoga.YogaLogLevel>;
				public static valueOf(param0: string): com.facebook.yoga.YogaLogLevel;
				public intValue(): number;
				public static fromInt(param0: number): com.facebook.yoga.YogaLogLevel;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module yoga {
			export class YogaLogger {
				public static class: java.lang.Class<com.facebook.yoga.YogaLogger>;
				/**
				 * Constructs a new instance of the com.facebook.yoga.YogaLogger interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					log(param0: com.facebook.yoga.YogaLogLevel, param1: string): void;
				});
				public constructor();
				public log(param0: com.facebook.yoga.YogaLogLevel, param1: string): void;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module yoga {
			export class YogaMeasureFunction {
				public static class: java.lang.Class<com.facebook.yoga.YogaMeasureFunction>;
				/**
				 * Constructs a new instance of the com.facebook.yoga.YogaMeasureFunction interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
				 */
				public constructor(implementation: {
					measure(param0: com.facebook.yoga.YogaNode, param1: number, param2: com.facebook.yoga.YogaMeasureMode, param3: number, param4: com.facebook.yoga.YogaMeasureMode): number;
				});
				public constructor();
				public measure(param0: com.facebook.yoga.YogaNode, param1: number, param2: com.facebook.yoga.YogaMeasureMode, param3: number, param4: com.facebook.yoga.YogaMeasureMode): number;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module yoga {
			export class YogaMeasureMode {
				public static class: java.lang.Class<com.facebook.yoga.YogaMeasureMode>;
				public static UNDEFINED: com.facebook.yoga.YogaMeasureMode;
				public static EXACTLY: com.facebook.yoga.YogaMeasureMode;
				public static AT_MOST: com.facebook.yoga.YogaMeasureMode;
				public static valueOf(param0: string): com.facebook.yoga.YogaMeasureMode;
				public intValue(): number;
				public static fromInt(param0: number): com.facebook.yoga.YogaMeasureMode;
				public static values(): native.Array<com.facebook.yoga.YogaMeasureMode>;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module yoga {
			export class YogaMeasureOutput {
				public static class: java.lang.Class<com.facebook.yoga.YogaMeasureOutput>;
				public static getWidth(param0: number): number;
				public static getHeight(param0: number): number;
				public static make(param0: number, param1: number): number;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module yoga {
			export class YogaNative {
				public static class: java.lang.Class<com.facebook.yoga.YogaNative>;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module yoga {
			export abstract class YogaNode {
				public static class: java.lang.Class<com.facebook.yoga.YogaNode>;
				public setHeight(param0: number): void;
				public getFlexGrow(): number;
				public dirty(): void;
				public setDisplay(param0: com.facebook.yoga.YogaDisplay): void;
				public isBaselineDefined(): boolean;
				public setMaxHeightPercent(param0: number): void;
				public setAlignContent(param0: com.facebook.yoga.YogaAlign): void;
				public setFlexBasisPercent(param0: number): void;
				public getChildAt(param0: number): com.facebook.yoga.YogaNode;
				public setDirection(param0: com.facebook.yoga.YogaDirection): void;
				public setOverflow(param0: com.facebook.yoga.YogaOverflow): void;
				public getLayoutBorder(param0: com.facebook.yoga.YogaEdge): number;
				public setFlexShrink(param0: number): void;
				public getMaxHeight(): com.facebook.yoga.YogaValue;
				public getLayoutY(): number;
				public setMaxWidthPercent(param0: number): void;
				public setWidth(param0: number): void;
				public setAlignSelf(param0: com.facebook.yoga.YogaAlign): void;
				public setPositionType(param0: com.facebook.yoga.YogaPositionType): void;
				public setPosition(param0: com.facebook.yoga.YogaEdge, param1: number): void;
				public getStyleDirection(): com.facebook.yoga.YogaDirection;
				public setAspectRatio(param0: number): void;
				public setMaxHeight(param0: number): void;
				public setBaselineFunction(param0: com.facebook.yoga.YogaBaselineFunction): void;
				public getHeight(): com.facebook.yoga.YogaValue;
				public setMinWidth(param0: number): void;
				public setFlexGrow(param0: number): void;
				public setMaxWidth(param0: number): void;
				public setPadding(param0: com.facebook.yoga.YogaEdge, param1: number): void;
				public getAlignItems(): com.facebook.yoga.YogaAlign;
				public isReferenceBaseline(): boolean;
				public setData(param0: any): void;
				public getFlexShrink(): number;
				public getWidth(): com.facebook.yoga.YogaValue;
				public getChildCount(): number;
				public getWrap(): com.facebook.yoga.YogaWrap;
				public isDirty(): boolean;
				public getLayoutHeight(): number;
				public setMarginPercent(param0: com.facebook.yoga.YogaEdge, param1: number): void;
				/** @deprecated */
				public getParent(): com.facebook.yoga.YogaNode;
				public getMaxWidth(): com.facebook.yoga.YogaValue;
				public setFlexBasis(param0: number): void;
				public setFlexDirection(param0: com.facebook.yoga.YogaFlexDirection): void;
				public setWidthAuto(): void;
				public setBorder(param0: com.facebook.yoga.YogaEdge, param1: number): void;
				public getDisplay(): com.facebook.yoga.YogaDisplay;
				public setMarginAuto(param0: com.facebook.yoga.YogaEdge): void;
				public copyStyle(param0: com.facebook.yoga.YogaNode): void;
				public getPadding(param0: com.facebook.yoga.YogaEdge): com.facebook.yoga.YogaValue;
				public getData(): any;
				public constructor();
				public getFlex(): number;
				public setIsReferenceBaseline(param0: boolean): void;
				public setMinWidthPercent(param0: number): void;
				public removeChildAt(param0: number): com.facebook.yoga.YogaNode;
				public getJustifyContent(): com.facebook.yoga.YogaJustify;
				public getPosition(param0: com.facebook.yoga.YogaEdge): com.facebook.yoga.YogaValue;
				public addChildAt(param0: com.facebook.yoga.YogaNode, param1: number): void;
				public getLayoutMargin(param0: com.facebook.yoga.YogaEdge): number;
				public getMargin(param0: com.facebook.yoga.YogaEdge): com.facebook.yoga.YogaValue;
				public getFlexBasis(): com.facebook.yoga.YogaValue;
				public getLayoutPadding(param0: com.facebook.yoga.YogaEdge): number;
				public isMeasureDefined(): boolean;
				public hasNewLayout(): boolean;
				public indexOf(param0: com.facebook.yoga.YogaNode): number;
				public getOwner(): com.facebook.yoga.YogaNode;
				public getAspectRatio(): number;
				public setFlexBasisAuto(): void;
				public setHeightPercent(param0: number): void;
				public getLayoutX(): number;
				public cloneWithoutChildren(): com.facebook.yoga.YogaNode;
				public print(): void;
				public getOverflow(): com.facebook.yoga.YogaOverflow;
				public getLayoutWidth(): number;
				public setMeasureFunction(param0: com.facebook.yoga.YogaMeasureFunction): void;
				public setHeightAuto(): void;
				public setMinHeight(param0: number): void;
				public reset(): void;
				public setFlex(param0: number): void;
				public calculateLayout(param0: number, param1: number): void;
				public getAlignContent(): com.facebook.yoga.YogaAlign;
				public markLayoutSeen(): void;
				public setJustifyContent(param0: com.facebook.yoga.YogaJustify): void;
				public getPositionType(): com.facebook.yoga.YogaPositionType;
				public getMinHeight(): com.facebook.yoga.YogaValue;
				public setPaddingPercent(param0: com.facebook.yoga.YogaEdge, param1: number): void;
				public setAlignItems(param0: com.facebook.yoga.YogaAlign): void;
				public getAlignSelf(): com.facebook.yoga.YogaAlign;
				public getMinWidth(): com.facebook.yoga.YogaValue;
				public getBorder(param0: com.facebook.yoga.YogaEdge): number;
				public setMinHeightPercent(param0: number): void;
				public getLayoutDirection(): com.facebook.yoga.YogaDirection;
				public cloneWithChildren(): com.facebook.yoga.YogaNode;
				public setWrap(param0: com.facebook.yoga.YogaWrap): void;
				public setPositionPercent(param0: com.facebook.yoga.YogaEdge, param1: number): void;
				public setWidthPercent(param0: number): void;
				public getFlexDirection(): com.facebook.yoga.YogaFlexDirection;
				public setMargin(param0: com.facebook.yoga.YogaEdge, param1: number): void;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module yoga {
			export abstract class YogaNodeFactory {
				public static class: java.lang.Class<com.facebook.yoga.YogaNodeFactory>;
				public static create(param0: com.facebook.yoga.YogaConfig): com.facebook.yoga.YogaNode;
				public static create(): com.facebook.yoga.YogaNode;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module yoga {
			export abstract class YogaNodeJNIBase extends com.facebook.yoga.YogaNode {
				public static class: java.lang.Class<com.facebook.yoga.YogaNodeJNIBase>;
				public mNativePointer: number;
				public setHeight(param0: number): void;
				public getFlexGrow(): number;
				public dirty(): void;
				public setDisplay(param0: com.facebook.yoga.YogaDisplay): void;
				public isBaselineDefined(): boolean;
				public getChildAt(param0: number): com.facebook.yoga.YogaNodeJNIBase;
				public setMaxHeightPercent(param0: number): void;
				public setAlignContent(param0: com.facebook.yoga.YogaAlign): void;
				public setFlexBasisPercent(param0: number): void;
				public getChildAt(param0: number): com.facebook.yoga.YogaNode;
				public setDirection(param0: com.facebook.yoga.YogaDirection): void;
				public setOverflow(param0: com.facebook.yoga.YogaOverflow): void;
				public getLayoutBorder(param0: com.facebook.yoga.YogaEdge): number;
				public swapChildAt(param0: com.facebook.yoga.YogaNode, param1: number): void;
				public setFlexShrink(param0: number): void;
				public getMaxHeight(): com.facebook.yoga.YogaValue;
				public getLayoutY(): number;
				public setMaxWidthPercent(param0: number): void;
				public setWidth(param0: number): void;
				public setAlignSelf(param0: com.facebook.yoga.YogaAlign): void;
				public setPositionType(param0: com.facebook.yoga.YogaPositionType): void;
				public setPosition(param0: com.facebook.yoga.YogaEdge, param1: number): void;
				public getStyleDirection(): com.facebook.yoga.YogaDirection;
				public setAspectRatio(param0: number): void;
				public setMaxHeight(param0: number): void;
				public setBaselineFunction(param0: com.facebook.yoga.YogaBaselineFunction): void;
				public getHeight(): com.facebook.yoga.YogaValue;
				public setMinWidth(param0: number): void;
				public setFlexGrow(param0: number): void;
				public setMaxWidth(param0: number): void;
				public setPadding(param0: com.facebook.yoga.YogaEdge, param1: number): void;
				public getAlignItems(): com.facebook.yoga.YogaAlign;
				public isReferenceBaseline(): boolean;
				public setData(param0: any): void;
				public dirtyAllDescendants(): void;
				public getFlexShrink(): number;
				public getWidth(): com.facebook.yoga.YogaValue;
				public getChildCount(): number;
				public getWrap(): com.facebook.yoga.YogaWrap;
				public isDirty(): boolean;
				public getLayoutHeight(): number;
				public setMarginPercent(param0: com.facebook.yoga.YogaEdge, param1: number): void;
				/** @deprecated */
				public getParent(): com.facebook.yoga.YogaNode;
				public getMaxWidth(): com.facebook.yoga.YogaValue;
				public setFlexBasis(param0: number): void;
				public setFlexDirection(param0: com.facebook.yoga.YogaFlexDirection): void;
				public setWidthAuto(): void;
				public setBorder(param0: com.facebook.yoga.YogaEdge, param1: number): void;
				public getDisplay(): com.facebook.yoga.YogaDisplay;
				public baseline(param0: number, param1: number): number;
				public getOwner(): com.facebook.yoga.YogaNodeJNIBase;
				public setMarginAuto(param0: com.facebook.yoga.YogaEdge): void;
				public copyStyle(param0: com.facebook.yoga.YogaNode): void;
				public getPadding(param0: com.facebook.yoga.YogaEdge): com.facebook.yoga.YogaValue;
				public getData(): any;
				public getFlex(): number;
				public setIsReferenceBaseline(param0: boolean): void;
				public setMinWidthPercent(param0: number): void;
				public removeChildAt(param0: number): com.facebook.yoga.YogaNode;
				public getJustifyContent(): com.facebook.yoga.YogaJustify;
				public getPosition(param0: com.facebook.yoga.YogaEdge): com.facebook.yoga.YogaValue;
				public addChildAt(param0: com.facebook.yoga.YogaNode, param1: number): void;
				public getLayoutMargin(param0: com.facebook.yoga.YogaEdge): number;
				public getMargin(param0: com.facebook.yoga.YogaEdge): com.facebook.yoga.YogaValue;
				public getFlexBasis(): com.facebook.yoga.YogaValue;
				public getLayoutPadding(param0: com.facebook.yoga.YogaEdge): number;
				public isMeasureDefined(): boolean;
				public cloneWithChildren(): com.facebook.yoga.YogaNodeJNIBase;
				public hasNewLayout(): boolean;
				public indexOf(param0: com.facebook.yoga.YogaNode): number;
				public getOwner(): com.facebook.yoga.YogaNode;
				public getAspectRatio(): number;
				public setFlexBasisAuto(): void;
				public setHeightPercent(param0: number): void;
				public getLayoutX(): number;
				public cloneWithoutChildren(): com.facebook.yoga.YogaNode;
				public print(): void;
				public getOverflow(): com.facebook.yoga.YogaOverflow;
				public getLayoutWidth(): number;
				public removeChildAt(param0: number): com.facebook.yoga.YogaNodeJNIBase;
				public setMeasureFunction(param0: com.facebook.yoga.YogaMeasureFunction): void;
				public setHeightAuto(): void;
				public getDoesLegacyStretchFlagAffectsLayout(): boolean;
				/** @deprecated */
				public getParent(): com.facebook.yoga.YogaNodeJNIBase;
				public setMinHeight(param0: number): void;
				public reset(): void;
				public setFlex(param0: number): void;
				public cloneWithoutChildren(): com.facebook.yoga.YogaNodeJNIBase;
				public calculateLayout(param0: number, param1: number): void;
				public getAlignContent(): com.facebook.yoga.YogaAlign;
				public measure(param0: number, param1: number, param2: number, param3: number): number;
				public markLayoutSeen(): void;
				public setJustifyContent(param0: com.facebook.yoga.YogaJustify): void;
				public getPositionType(): com.facebook.yoga.YogaPositionType;
				public getMinHeight(): com.facebook.yoga.YogaValue;
				public setPaddingPercent(param0: com.facebook.yoga.YogaEdge, param1: number): void;
				public setAlignItems(param0: com.facebook.yoga.YogaAlign): void;
				public getAlignSelf(): com.facebook.yoga.YogaAlign;
				public getMinWidth(): com.facebook.yoga.YogaValue;
				public getBorder(param0: com.facebook.yoga.YogaEdge): number;
				public setMinHeightPercent(param0: number): void;
				public getLayoutDirection(): com.facebook.yoga.YogaDirection;
				public cloneWithChildren(): com.facebook.yoga.YogaNode;
				public setWrap(param0: com.facebook.yoga.YogaWrap): void;
				public setPositionPercent(param0: com.facebook.yoga.YogaEdge, param1: number): void;
				public setWidthPercent(param0: number): void;
				public getFlexDirection(): com.facebook.yoga.YogaFlexDirection;
				public setMargin(param0: com.facebook.yoga.YogaEdge, param1: number): void;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module yoga {
			export class YogaNodeJNIFinalizer extends com.facebook.yoga.YogaNodeJNIBase {
				public static class: java.lang.Class<com.facebook.yoga.YogaNodeJNIFinalizer>;
				public finalize(): void;
				public constructor(param0: com.facebook.yoga.YogaConfig);
				public freeNatives(): void;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module yoga {
			export class YogaNodeType {
				public static class: java.lang.Class<com.facebook.yoga.YogaNodeType>;
				public static DEFAULT: com.facebook.yoga.YogaNodeType;
				public static TEXT: com.facebook.yoga.YogaNodeType;
				public intValue(): number;
				public static values(): native.Array<com.facebook.yoga.YogaNodeType>;
				public static valueOf(param0: string): com.facebook.yoga.YogaNodeType;
				public static fromInt(param0: number): com.facebook.yoga.YogaNodeType;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module yoga {
			export class YogaOverflow {
				public static class: java.lang.Class<com.facebook.yoga.YogaOverflow>;
				public static VISIBLE: com.facebook.yoga.YogaOverflow;
				public static HIDDEN: com.facebook.yoga.YogaOverflow;
				public static SCROLL: com.facebook.yoga.YogaOverflow;
				public static fromInt(param0: number): com.facebook.yoga.YogaOverflow;
				public intValue(): number;
				public static values(): native.Array<com.facebook.yoga.YogaOverflow>;
				public static valueOf(param0: string): com.facebook.yoga.YogaOverflow;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module yoga {
			export class YogaPositionType {
				public static class: java.lang.Class<com.facebook.yoga.YogaPositionType>;
				public static RELATIVE: com.facebook.yoga.YogaPositionType;
				public static ABSOLUTE: com.facebook.yoga.YogaPositionType;
				public static fromInt(param0: number): com.facebook.yoga.YogaPositionType;
				public static valueOf(param0: string): com.facebook.yoga.YogaPositionType;
				public intValue(): number;
				public static values(): native.Array<com.facebook.yoga.YogaPositionType>;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module yoga {
			export class YogaPrintOptions {
				public static class: java.lang.Class<com.facebook.yoga.YogaPrintOptions>;
				public static LAYOUT: com.facebook.yoga.YogaPrintOptions;
				public static STYLE: com.facebook.yoga.YogaPrintOptions;
				public static CHILDREN: com.facebook.yoga.YogaPrintOptions;
				public static valueOf(param0: string): com.facebook.yoga.YogaPrintOptions;
				public intValue(): number;
				public static values(): native.Array<com.facebook.yoga.YogaPrintOptions>;
				public static fromInt(param0: number): com.facebook.yoga.YogaPrintOptions;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module yoga {
			export class YogaStyleInputs {
				public static class: java.lang.Class<com.facebook.yoga.YogaStyleInputs>;
				public static LAYOUT_DIRECTION: number;
				public static FLEX_DIRECTION: number;
				public static FLEX: number;
				public static FLEX_GROW: number;
				public static FLEX_SHRINK: number;
				public static FLEX_BASIS: number;
				public static FLEX_BASIS_PERCENT: number;
				public static FLEX_BASIS_AUTO: number;
				public static FLEX_WRAP: number;
				public static WIDTH: number;
				public static WIDTH_PERCENT: number;
				public static WIDTH_AUTO: number;
				public static MIN_WIDTH: number;
				public static MIN_WIDTH_PERCENT: number;
				public static MAX_WIDTH: number;
				public static MAX_WIDTH_PERCENT: number;
				public static HEIGHT: number;
				public static HEIGHT_PERCENT: number;
				public static HEIGHT_AUTO: number;
				public static MIN_HEIGHT: number;
				public static MIN_HEIGHT_PERCENT: number;
				public static MAX_HEIGHT: number;
				public static MAX_HEIGHT_PERCENT: number;
				public static JUSTIFY_CONTENT: number;
				public static ALIGN_ITEMS: number;
				public static ALIGN_SELF: number;
				public static ALIGN_CONTENT: number;
				public static POSITION_TYPE: number;
				public static ASPECT_RATIO: number;
				public static OVERFLOW: number;
				public static DISPLAY: number;
				public static MARGIN: number;
				public static MARGIN_PERCENT: number;
				public static MARGIN_AUTO: number;
				public static PADDING: number;
				public static PADDING_PERCENT: number;
				public static BORDER: number;
				public static POSITION: number;
				public static POSITION_PERCENT: number;
				public static IS_REFERENCE_BASELINE: number;
				public constructor();
			}
		}
	}
}

declare module com {
	export module facebook {
		export module yoga {
			export class YogaUnit {
				public static class: java.lang.Class<com.facebook.yoga.YogaUnit>;
				public static UNDEFINED: com.facebook.yoga.YogaUnit;
				public static POINT: com.facebook.yoga.YogaUnit;
				public static PERCENT: com.facebook.yoga.YogaUnit;
				public static AUTO: com.facebook.yoga.YogaUnit;
				public static fromInt(param0: number): com.facebook.yoga.YogaUnit;
				public static values(): native.Array<com.facebook.yoga.YogaUnit>;
				public intValue(): number;
				public static valueOf(param0: string): com.facebook.yoga.YogaUnit;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module yoga {
			export class YogaValue {
				public static class: java.lang.Class<com.facebook.yoga.YogaValue>;
				public value: number;
				public unit: com.facebook.yoga.YogaUnit;
				public hashCode(): number;
				public constructor(param0: number, param1: com.facebook.yoga.YogaUnit);
				public equals(param0: any): boolean;
				public static parse(param0: string): com.facebook.yoga.YogaValue;
				public toString(): string;
			}
		}
	}
}

declare module com {
	export module facebook {
		export module yoga {
			export class YogaWrap {
				public static class: java.lang.Class<com.facebook.yoga.YogaWrap>;
				public static NO_WRAP: com.facebook.yoga.YogaWrap;
				public static WRAP: com.facebook.yoga.YogaWrap;
				public static WRAP_REVERSE: com.facebook.yoga.YogaWrap;
				public static values(): native.Array<com.facebook.yoga.YogaWrap>;
				public intValue(): number;
				public static valueOf(param0: string): com.facebook.yoga.YogaWrap;
				public static fromInt(param0: number): com.facebook.yoga.YogaWrap;
			}
		}
	}
}

//Generics information:
//com.facebook.react.bridge.GuardedAsyncTask:2
//com.facebook.react.bridge.GuardedResultAsyncTask:1
//com.facebook.react.bridge.JSIModuleProvider:1
//com.facebook.react.bridge.JSIModuleSpec:1
//com.facebook.react.bridge.JavaMethodWrapper.ArgumentExtractor:1
//com.facebook.react.common.ClearableSynchronizedPool:1
//com.facebook.react.common.MapBuilder.Builder:2
//com.facebook.react.common.futures.SimpleSettableFuture:1
//com.facebook.react.uimanager.BaseViewManager:2
//com.facebook.react.uimanager.BaseViewManagerAdapter:1
//com.facebook.react.uimanager.BaseViewManagerDelegate:2
//com.facebook.react.uimanager.BaseViewManagerInterface:1
//com.facebook.react.uimanager.ReactShadowNode:1
//com.facebook.react.uimanager.SimpleViewManager:1
//com.facebook.react.uimanager.ViewGroupManager:1
//com.facebook.react.uimanager.ViewManager:2
//com.facebook.react.uimanager.ViewManagerDelegate:1
//com.facebook.react.uimanager.ViewManagerPropertyUpdater.FallbackShadowNodeSetter:1
//com.facebook.react.uimanager.ViewManagerPropertyUpdater.FallbackViewManagerSetter:2
//com.facebook.react.uimanager.ViewManagerPropertyUpdater.ShadowNodeSetter:1
//com.facebook.react.uimanager.ViewManagerPropertyUpdater.ViewManagerSetter:2
//com.facebook.react.uimanager.events.Event:1
//com.facebook.react.viewmanagers.ActivityIndicatorViewManagerDelegate:2
//com.facebook.react.viewmanagers.ActivityIndicatorViewManagerInterface:1
//com.facebook.react.viewmanagers.AndroidDialogPickerManagerDelegate:2
//com.facebook.react.viewmanagers.AndroidDialogPickerManagerInterface:1
//com.facebook.react.viewmanagers.AndroidDrawerLayoutManagerDelegate:2
//com.facebook.react.viewmanagers.AndroidDrawerLayoutManagerInterface:1
//com.facebook.react.viewmanagers.AndroidDropdownPickerManagerDelegate:2
//com.facebook.react.viewmanagers.AndroidDropdownPickerManagerInterface:1
//com.facebook.react.viewmanagers.AndroidProgressBarManagerDelegate:2
//com.facebook.react.viewmanagers.AndroidProgressBarManagerInterface:1
//com.facebook.react.viewmanagers.AndroidSwipeRefreshLayoutManagerDelegate:2
//com.facebook.react.viewmanagers.AndroidSwipeRefreshLayoutManagerInterface:1
//com.facebook.react.viewmanagers.AndroidSwitchManagerDelegate:2
//com.facebook.react.viewmanagers.AndroidSwitchManagerInterface:1
//com.facebook.react.viewmanagers.AndroidViewPagerManagerDelegate:2
//com.facebook.react.viewmanagers.AndroidViewPagerManagerInterface:1
//com.facebook.react.viewmanagers.InputAccessoryViewManagerDelegate:2
//com.facebook.react.viewmanagers.InputAccessoryViewManagerInterface:1
//com.facebook.react.viewmanagers.MaskedViewManagerDelegate:2
//com.facebook.react.viewmanagers.MaskedViewManagerInterface:1
//com.facebook.react.viewmanagers.ModalHostViewManagerDelegate:2
//com.facebook.react.viewmanagers.ModalHostViewManagerInterface:1
//com.facebook.react.viewmanagers.ProgressViewManagerDelegate:2
//com.facebook.react.viewmanagers.ProgressViewManagerInterface:1
//com.facebook.react.viewmanagers.SafeAreaViewManagerDelegate:2
//com.facebook.react.viewmanagers.SafeAreaViewManagerInterface:1
//com.facebook.react.viewmanagers.SegmentedControlManagerDelegate:2
//com.facebook.react.viewmanagers.SegmentedControlManagerInterface:1
//com.facebook.react.viewmanagers.SliderManagerDelegate:2
//com.facebook.react.viewmanagers.SliderManagerInterface:1
//com.facebook.react.viewmanagers.SwitchManagerDelegate:2
//com.facebook.react.viewmanagers.SwitchManagerInterface:1
//com.facebook.react.viewmanagers.UnimplementedNativeViewManagerDelegate:2
//com.facebook.react.viewmanagers.UnimplementedNativeViewManagerInterface:1
//com.facebook.react.views.scroll.ReactScrollViewCommandHelper.ScrollCommandHandler:1
//com.facebook.react.views.text.ReactTextAnchorViewManager:2
//com.facebook.react.views.view.ReactClippingViewManager:1

